{
  "$schema": "https://schema.management.azure.com/schemas/2021-09-09/uiFormDefinition.schema.json#",
  "view": {
    "kind": "Form",
    "properties": {
      "title": "Azure Monitor Baseline Alerts Accelerator",
      "steps": [
        {
          "name": "basics",
          "label": "Deployment Settings",
          "elements": [
            {
              "name": "baselinealertsintro",
              "type": "Microsoft.Common.InfoBox",
              "visible": true,
              "options": {
                "text": "AMBA Accelerator will automatically import all policies and initiatives and will assign the Deploy Azure Monitor Baseline Alerts for Service Health policy initiative at the intermediate root. While it´s recommended to implement the alert policies and initiatives to an ALZ Management Group hierarchy, it is not a technical requirement. These policies and initiatives can be implemented in existing brownfield scenarios that don´t adhere to the ALZ Management Group hierarchy. For example, in hierarchies where there is a single management group, or where the structure does not align to ALZ. At least one management group is required.",
                "uri": "https://aka.ms/amba/alz/docs",
                "style": "Info"
              }
            },
            {
              "name": "resourceScope",
              "type": "Microsoft.Common.ResourceScope",
              "kind": "ManagementGroup",
              "instanceDetailsLabel": "AMBA Accelerator"
            },
            {
              "name": "getManagementSubscriptionId",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "POST",
                "path": "/providers/Microsoft.ResourceGraph/resources?api-version=2021-03-01",
                "body": {
                  "query": "[format('resourcecontainers | where type == \"microsoft.resources/subscriptions\" | where properties.managementGroupAncestorsChain contains \"{0}\" | project label=tostring(name) , description=id, value=subscriptionId | order by label asc', steps('basics').resourceScope.managementGroup.name)]"
                }
              }
            },
            {
              "name": "getbringYourOwnUserAssignedManagedIdentityResourceId",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "POST",
                "path": "/providers/Microsoft.ResourceGraph/resources?api-version=2021-03-01",
                "body": {
                  "query": "resources | where type =~ 'Microsoft.ManagedIdentity/userAssignedIdentities'| project label=tostring(name) , description=id, value=id | order by label asc"
                }
              }
            },
            {
              "name": "ALZMonitorRGName",
              "type": "Microsoft.Common.TextBox",
              "label": "Resource group for baseline alerts",
              "toolTip": "Resource group for activity logs, resource health alerts, action groups, and alert processing rules. Will be created in all subscriptions in scope for the policy",
              "visible": "true",
              "defaultValue": "rg-amba-monitoring-001",
              "constraints": {
                "required": "true",
                "validations": [
                  {
                    "regex": "^[a-zA-Z0-9][a-zA-Z0-9-_.()]{0,89}[a-zA-Z0-9]$",
                    "validationMessage": "Please provide a valid resource group name"
                  }
                ]
              }
            },
            {
              "name": "getLocations",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "GET",
                "path": "locations?api-version=2019-11-01"
              }
            },
            {
              "name": "ALZMonitorResourceGroupLocation",
              "type": "Microsoft.Common.DropDown",
              "label": "Resource group location",
              "filter": true,
              "toolTip": "Specify the location for said resource group",
              "defaultValue": "[steps('basics').resourceScope.location.displayName]",
              "constraints": {
                "allowedValues": "[map(steps('basics').getLocations.value,(item) => parse(concat('{\"label\":\"',item.displayName,'\",\"value\":\"',item.name,'\"}')))]",
                "required": true
              },
              "visible": true
            },
            {
              "name": "bringYourOwnUserAssignedManagedIdentity",
              "type": "Microsoft.Common.DropDown",
              "label": "Bring Your Own User Assigned Managed Identity",
              "subLabel": "",
              "defaultValue": "No",
              "toolTip": "Specify if you want to bring your own user assigned managed identity for monitoring purpose.",
              "constraints": {
                "required": false,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ],
                "validations": []
              },
              "infoMessages": [],
              "visible": true
            },
            {
              "name": "bringYourOwnUserAssignedManagedIdentityResourceId",
              "type": "Microsoft.Common.DropDown",
              "label": "Bring Your Own User Assigned Managed Identity Resource Id",
              "multiselect": false,
              "defaultValue": "",
              "filter": false,
              "toolTip": "Specify the resource id of the user assigned managed identity if you want to bring your own user assigned managed identity for monitoring purpose.",
              "constraints": {
                "required": false,
                "allowedValues": "[steps('basics').getbringYourOwnUserAssignedManagedIdentityResourceId.data]"
              },
              "visible": "[equals(steps('basics').bringYourOwnUserAssignedManagedIdentity,'Yes')]"
            },
            {
              "name": "userAssignedManagedIdentityName",
              "type": "Microsoft.Common.TextBox",
              "label": "User Assigned Managed Identity Name",
              "subLabel": "",
              "defaultValue": "id-amba-prod-001",
              "toolTip": "Specify the name of the user assigned managed identity for monitoring purpose.",
              "constraints": {
                "required": false,
                "validations": [
                  {
                    "regex": "^[a-zA-Z0-9][a-zA-Z0-9-_]{0,128}$",
                    "validationMessage": "Please provide a valid managed identity name"
                  }
                ]
              },
              "infoMessages": [],
              "visible": "[equals(steps('basics').bringYourOwnUserAssignedManagedIdentity,'No')]"
            },
            {
              "name": "managementSubscriptionId",
              "type": "Microsoft.Common.DropDown",
              "label": "Management Subscription Id",
              "visible": "[equals(steps('basics').bringYourOwnUserAssignedManagedIdentity,'No')]",
              "multiselect": false,
              "defaultValue": "",
              "filter": true,
              "toolTip": "Provide the subscription id where the user assigned managed identity will be created.",
              "constraints": {
                "allowedValues": "[steps('basics').getManagementSubscriptionId.data]",
                "required": "[if(equals(steps('basics').bringYourOwnUserAssignedManagedIdentity,'No'), true, false)]"
              }
            },
            {
              "name": "deployAMBAPortalAccelerator",
              "type": "Microsoft.Common.TextBox",
              "label": "Deploy AMBA Portal Accelerator",
              "toolTip": "",
              "visible": false,
              "defaultValue": "Yes",
              "constraints": {
                "required": "true"
              }
            },
            {
              "name": "ALZMonitorResourceGroupTags",
              "type": "Microsoft.Common.TextBox",
              "label": "Resource Group Tags",
              "toolTip": "Provide the tags for the resource group for Azure Monitor Baseline Alerts. Tags are name/value pairs that enable you to categorize resources and view consolidated billing by applying the same tag to multiple resources and resource groups.",
              "visible": true,
              "placeholder": "{\"_deployed_by_amba\": \"true\"}",
              "defaultValue": "",
              "constraints": {
                "required": false,
                "validations": [
                  {
                    "regex": "",
                    "validationMessage": ""
                  }
                ]
              }
            },
            {
              "name": "cuaSection",
              "type": "Microsoft.Common.Section",
              "label": "Telemetry Tracking Using Customer Usage Attribution (PID)",
              "elements": [
                {
                  "name": "cuaSettingsInfo",
                  "type": "Microsoft.Common.InfoBox",
                  "visible": true,
                  "options": {
                    "text": "Microsoft can identify the deployments of the Azure Resource Manager templates with the deployed Azure resources. Microsoft collects this information to provide the best experiences with their products and to operate their business. The telemetry is collected through customer usage attribution. The data is collected and governed by Microsoft's privacy policies, located at the trust center. Visit this link to find out more.",
                    "uri": "https://azure.github.io/azure-monitor-baseline-alerts/patterns/alz/Telemetry/",
                    "style": "Info"
                  }
                },
                {
                  "name": "telemetryOptOut",
                  "type": "Microsoft.Common.OptionsGroup",
                  "visible": true,
                  "label": "Customer Usage Selection Options",
                  "defaultValue": "Enabled",
                  "constraints": {
                    "allowedValues": [
                      {
                        "label": "Enabled",
                        "value": "No"
                      },
                      {
                        "label": "Disabled",
                        "value": "Yes"
                      }
                    ],
                    "required": true
                  }
                }
              ],
              "visible": true
            },
            {
              "name": "feedbackSection",
              "type": "Microsoft.Common.InfoBox",
              "visible": true,
              "options": {
                "text": "If you have any feedback, please use the following link: https://aka.ms/amba/issues",
                "uri": "https://aka.ms/amba/issues",
                "style": "Info"
              }
            }
          ]
        },
        {
          "name": "Configuration",
          "label": "Management Groups Settings",
          "elements": [
            {
              "name": "alznoalignedintro",
              "type": "Microsoft.Common.InfoBox",
              "visible": true,
              "options": {
                "text": "If you have a single management group, configure the variables Enterprise Scale Company Prefix, Identity Management Group, Management Management Group, Connectivity Management Group and Landing Zones Management Group with the same group name",
                "uri": "https://azure.github.io/azure-monitor-baseline-alerts/patterns/alz/deploy/Introduction-to-deploying-the-ALZ-Pattern/",
                "style": "Info"
              }
            },
            {
              "name": "enterpriseScaleCompanyPrefix",
              "type": "Microsoft.Common.DropDown",
              "label": "Enterprise Scale Company Management Group",
              "multiselect": false,
              "defaultValue": "[steps('basics').resourceScope.managementGroup.displayName]",
              "filter": false,
              "defaultDescription": "Enterprise Scale Company Management Group",
              "toolTip": "Management group where you wish to deploy the policies and the initiatives. This is usually the so called “pseudo root management group”, this would be the so called “Intermediate Root Management Group” (directly beneath the “Tenant Root Group”).",
              "constraints": {
                "allowedValues": "[filter(map(steps('Configuration').ManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"value\":\"', item.name, '\"}'))), (item) => equals(item.label, steps('basics').resourceScope.managementGroup.displayName))]",
                "required": true
              },
              "visible": true
            },
            {
              "name": "ManagementGroupAPI",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "GET",
                "path": "providers/Microsoft.Management/managementGroups?api-version=2020-05-01"
              }
            },
            {
              "name": "DescendantManagementGroupAPI",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "GET",
                "path": "[format('providers/Microsoft.Management/managementGroups/{0}/descendants?api-version=2020-05-01',steps('basics').resourceScope.managementGroup.name)]"
              }
            },
            {
              "name": "enableAMBAServiceHealth",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Service Health",
              "defaultValue": "Yes",
              "toolTip": "Assign Service health initiative",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ]
              },
              "visible": true
            },
            {
              "name": "securityadvisoriesinfo",
              "type": "Microsoft.Common.InfoBox",
              "visible":"[equals(steps('Configuration').enableAMBAServiceHealth,'Yes')]",
              "options": {
                "text": "Accessing Security Advisories now requires elevated access across the Summary, Impacted Resources, and Issue Updates tabs. Users who have subscription reader access, or tenant roles at tenant scope, aren't able anymore to view security advisory details until they get the required roles. *This is not impacting AMBA-ALZ configuration that will continue to work independently.",
                "uri": "https://learn.microsoft.com/en-us/azure/service-health/security-advisories-elevated-access?branch=pr-en-us-255499",
                "style": "Info"
              }
            },
            {
              "name": "enableAMBAConnectivity",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Connectivity",
              "defaultValue": "Yes",
              "toolTip": "If 'Yes' is selected the Deploy Azure Monitor Baseline Alerts for Connectivity policy initiative is assigned to the Connectivity management group. This will ensure that relevant new resources created within that scope are configured with appropriate baseline alerts. For more details on what is included in the initiative please refer to https://aka.ms/amba/alz/wiki under Azure Policy Initiatives and Alert Details.",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ]
              },
              "visible": true
            },
            {
              "name": "enableAMBAIdentity",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Identity",
              "defaultValue": "Yes",
              "toolTip": "If 'Yes' is selected the Deploy Azure Monitor Baseline Alerts for Identity policy initiative is assigned to the Identity management group. This will ensure that relevant new resources created within that scope are configured with appropriate baseline alerts. For more details on what is included in the initiative please refer to https://aka.ms/amba/alz/wiki under Azure Policy Initiatives and Alert Details.",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ]
              },
              "visible": true
            },
            {
              "name": "enableAMBAManagement",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Management",
              "defaultValue": "Yes",
              "toolTip": "If 'Yes' is selected the Deploy Azure Monitor Baseline Alerts for Management policy initiative is assigned to the Management management group. This will ensure that relevant new resources created within that scope are configured with appropriate baseline alerts. For more details on what is included in the initiative please refer to https://aka.ms/amba/alz/wiki under Azure Policy Initiatives and Alert Details.",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ]
              },
              "visible": true
            },
            {
              "name": "enableAMBAHybridVM",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Hybrid VM",
              "subLabel": "",
              "defaultValue": "Yes",
              "toolTip": "This initiative deploys Azure Monitor Baseline Alerts to monitor Azure Arc-enabled Servers",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ],
                "validations": []
              },
              "infoMessages": [],
              "visible": true
            },
            {
              "name": "enableAMBAVM",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Azure VM",
              "subLabel": "",
              "defaultValue": "Yes",
              "toolTip": "This initiative deploys Azure Monitor Baseline Alerts to monitor Azure Virtual Machines.",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ],
                "validations": []
              },
              "infoMessages": [],
              "visible": true
            },
            {
              "name": "enableAMBAKeyManagement",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Key Management",
              "subLabel": "",
              "defaultValue": "Yes",
              "toolTip": "This initiative deploys Azure Monitor Baseline Alerts to monitor Key Management Services such as Azure Key Vault, and Managed HSM.",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ],
                "validations": []
              },
              "infoMessages": [],
              "visible": true
            },
            {
              "name": "enableAMBALoadBalancing",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Load Balancing",
              "subLabel": "",
              "defaultValue": "Yes",
              "toolTip": "This initiative deploys Azure Monitor Baseline Alerts to monitor Load Balancing Services such as Load Balancer, Application Gateway, Traffic Manager, and Azure Front Door.",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ],
                "validations": []
              },
              "infoMessages": [],
              "visible": true
            },
            {
              "name": "enableAMBANetworkChanges",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Network Changes",
              "subLabel": "",
              "defaultValue": "Yes",
              "toolTip": "This initiative implements Azure Monitor Baseline Alerts to monitor alterations in Network Routing and Security, such as modifications to Route Tables and the removal of Network Security Groups.",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ],
                "validations": []
              },
              "infoMessages": [],
              "visible": true
            },
            {
              "name": "enableAMBARecoveryServices",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Recovery Services",
              "subLabel": "",
              "defaultValue": "Yes",
              "toolTip": "This initiative deploys Azure Monitor Baseline Alerts to monitor Recovery Services such as Azure Backup, and Azure Site Recovery.",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ],
                "validations": []
              },
              "infoMessages": [],
              "visible": true
            },
            {
              "name": "enableAMBAStorage",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Storage",
              "subLabel": "",
              "defaultValue": "Yes",
              "toolTip": "This initiative deploys Azure Monitor Baseline Alerts to monitor Storage Services such as Storage accounts.",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ],
                "validations": []
              },
              "infoMessages": [],
              "visible": true
            },
            {
              "name": "enableAMBAWeb",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Web",
              "subLabel": "",
              "defaultValue": "Yes",
              "toolTip": "This initiative deploys Azure Monitor Baseline Alerts to monitor Web Services such as App Services.",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ],
                "validations": []
              },
              "infoMessages": [],
              "visible": true
            },
            {
              "name": "enableAMBANotificationAssets",
              "type": "Microsoft.Common.DropDown",
              "label": "Enable AMBA Notification Assets",
              "defaultValue": "Yes",
              "toolTip": "Assign Action assets initiative",
              "constraints": {
                "required": true,
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ]
              },
              "visible": true
            },
            {
              "name": "platformManagementGroup",
              "type": "Microsoft.Common.DropDown",
              "label": "Platform Management Group",
              "multiselect": false,
              "defaultValue": "[if(empty(filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions')))), steps('basics').resourceScope.managementGroup.name, '')]",
              "filter": true,
              "defaultDescription": "Platform Management Group",
              "toolTip": "Provide the name of the Management Group that will be used to host the platform resources.",
              "constraints": {
                "allowedValues": "[if(empty(filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions')))), filter(map(steps('Configuration').ManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => contains(item.label, steps('basics').resourceScope.managementGroup.displayName)), filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions'))))]",
                "required": true
              },
              "visible": "[or(equals(steps('Configuration').enableAMBAHybridVM,'Yes'), equals(steps('Configuration').enableAMBAVM,'Yes'))]"
            },
            {
              "name": "connectivityManagementGroup",
              "type": "Microsoft.Common.DropDown",
              "label": "Connectivity Management Group",
              "multiselect": false,
              "defaultValue": "[if(empty(filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions')))), steps('basics').resourceScope.managementGroup.name, '')]",
              "filter": true,
              "toolTip": "Provide the name of the Management Group that will be used to host the connectivity resources.",
              "constraints": {
                "allowedValues": "[if(empty(filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions')))), filter(map(steps('Configuration').ManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => contains(item.label, steps('basics').resourceScope.managementGroup.displayName)), filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions'))))]",
                "required": true
              },
              "visible": "[equals(steps('Configuration').enableAMBAConnectivity,'Yes')]"
            },
            {
              "name": "IdentityManagementGroup",
              "type": "Microsoft.Common.DropDown",
              "label": "Identity Management Group",
              "multiselect": false,
              "defaultValue": "[if(empty(filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions')))), steps('basics').resourceScope.managementGroup.name, '')]",
              "filter": true,
              "toolTip": "Provide the name of the Management Group that will be used to host the identity resources.",
              "constraints": {
                "allowedValues": "[if(empty(filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions')))), filter(map(steps('Configuration').ManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => contains(item.label, steps('basics').resourceScope.managementGroup.displayName)), filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions'))))]",
                "required": true
              },
              "visible": "[equals(steps('Configuration').enableAMBAIdentity,'Yes')]"
            },
            {
              "name": "managementManagementGroup",
              "type": "Microsoft.Common.DropDown",
              "label": "Management Management Group",
              "multiselect": false,
              "defaultValue": "[if(empty(filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions')))), steps('basics').resourceScope.managementGroup.name, '')]",
              "filter": true,
              "toolTip": "Provide the name of the Management Group that will be used to host the management resources.",
              "constraints": {
                "allowedValues": "[if(empty(filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions')))), filter(map(steps('Configuration').ManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => contains(item.label, steps('basics').resourceScope.managementGroup.displayName)), filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions'))))]",
                "required": true
              },
              "visible": "[or(equals(steps('Configuration').enableAMBAManagement,'Yes'), equals(steps('Configuration').enableAMBAHybridVM,'Yes'), equals(steps('Configuration').enableAMBAVM,'Yes'), equals(steps('Configuration').enableAMBAWeb,'Yes'))]"
            },
            {
              "name": "LandingZoneManagementGroup",
              "type": "Microsoft.Common.DropDown",
              "label": "Landing Zone Management Group",
              "multiselect": false,
              "defaultValue": "[if(empty(filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions')))), steps('basics').resourceScope.managementGroup.name, '')]",
              "filter": true,
              "toolTip": "Provide the name of the Management Group that will be used to host the landing zone resources.",
              "constraints": {
                "allowedValues": "[if(empty(filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions')))), filter(map(steps('Configuration').ManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => contains(item.label, steps('basics').resourceScope.managementGroup.displayName)), filter(map(steps('Configuration').DescendantManagementGroupAPI.value, (item) => parse(concat('{\"label\":\"', item.properties.displayName, '\",\"description\":\"', item.type, '\",\"value\":\"', item.name, '\"}'))), (item) => not(contains(item.description, '/subscriptions'))))]",
                "required": true
              },
              "visible": "[or(equals(steps('Configuration').enableAMBAHybridVM,'Yes'), equals(steps('Configuration').enableAMBAKeyManagement,'Yes'), equals(steps('Configuration').enableAMBALoadBalancing,'Yes'), equals(steps('Configuration').enableAMBANetworkChanges,'Yes'), equals(steps('Configuration').enableAMBARecoveryServices,'Yes'), equals(steps('Configuration').enableAMBAStorage,'Yes'), equals(steps('Configuration').enableAMBAVM,'Yes'), equals(steps('Configuration').enableAMBAWeb,'Yes'))]"
            }
          ]
        },
        {
          "name": "Notification",
          "label": "Notification Settings",
          "elements": [
            {
              "name": "Notificationintro",
              "type": "Microsoft.Common.InfoBox",
              "visible": true,
              "options": {
                "text": "The Bring Your Own Notifications (BYON) feature allows brownfield customers to use their existing Action Groups (also known as AGs) and Alert Processing Rule (also known as APR) not forcing the use of notification assets deployed by both the Notification Assets initiative and the Deploy Service Health Action Group policy definition present in the ALZ pattern. It also allows Brownfield customer who deployed the ALZ pattern when this feature wasn’t available, to switch to it. The BYON feature works by setting the necessary parameter values before running the ALZ pattern deployment. Customers have the choice to either specify one or more existing AGs and one APR or to enter target values so the AG and the APR will be created using the actions specified in the parameter file (including the option to not specify any value and creating an empty AG).",
                "uri": "https://azure.github.io/azure-monitor-baseline-alerts/patterns/alz/Bring-your-own-Notifications/",
                "style": "Info"
              }
            },
            {
              "name": "NotificationOption",
              "type": "Microsoft.Common.OptionsGroup",
              "label": "Bring Your Own Notifications (BYON)",
              "defaultValue": "No",
              "toolTip": "The BYON feature works by setting the necessary parameter values before running the ALZ pattern deployment. Customers have the choice to either specify one or more existing AGs and one APR or to enter target values so the AG and the APR will be created using the actions specified in the parameter file (including the option to not specify any value and creating an empty AG).",
              "constraints": {
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ]
              },
              "visible": true
            },
            {
              "name": "GETBYOActionGroup",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "POST",
                "path": "/providers/Microsoft.ResourceGraph/resources?api-version=2021-03-01",
                "body": {
                  "query": "resources | where type == 'microsoft.insights/actiongroups'| project label=tostring(name) , description=name, value=id | order by label asc"
                }
              }
            },
            {
              "name": "BYOActionGroup",
              "type": "Microsoft.Common.DropDown",
              "label": "Action Group",
              "multiselect": true,
              "defaultValue": "",
              "filter": true,
              "toolTip": "The action groups to be used as action for the alerts (including Service Health alerts).",
              "constraints": {
                "allowedValues": "[steps('Notification').GETBYOActionGroup.data]",
                "required": false
              },
              "visible": "[equals(steps('Notification').NotificationOption,'Yes')]"
            },
            {
              "name": "BYOAlertProcessingRule",
              "type": "Microsoft.Solutions.ResourceSelector",
              "label": "Alert Processing Rule",
              "toolTip": "The alert processing rule to be used as action for the alerts (including Service Health alerts).",
              "resourceType": "Microsoft.AlertsManagement/actionRules",
              "visible": "[equals(steps('Notification').NotificationOption,'Yes')]"
            },
            {
              "name": "ALZMonitorActionGroupEmail",
              "type": "Microsoft.Common.TextBox",
              "label": "Email contact for action group notifications",
              "toolTip": "Provide the email address(es) for the action group used for monitoring.",
              "visible": "[equals(steps('Notification').NotificationOption,'No')]",
              "placeholder": "[\"example1@contoso.com\",\"example2@contoso.com\"]",
              "defaultValue": "",
              "constraints": {
                "required": false,
                "validations": [
                  {
                    "regex": "",
                    "validationMessage": ""
                  }
                ]
              }
            },
            {
              "name": "ALZWebhookServiceUri",
              "type": "Microsoft.Common.TextBox",
              "label": "Webhook Service Uri",
              "toolTip": "The URI(s) to be used as action for the alerts (including Service Health alerts). Leave the value blank if no Webhook is used.",
              "visible": "[equals(steps('Notification').NotificationOption,'No')]",
              "placeholder": "[\"http://example.com/\"]",
              "defaultValue": "",
              "constraints": {
                "required": false,
                "validations": [
                  {
                    "regex": "",
                    "validationMessage": ""
                  }
                ]
              }
            },
            {
              "name": "getALZArmRoleId",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "POST",
                "path": "/providers/Microsoft.ResourceGraph/resources?api-version=2021-03-01",
                "body": {
                  "query": "authorizationresources |extend roleName = tostring(properties.roleName)|where roleName in~ ('Owner', 'Contributor', 'Reader', 'Monitoring Contributor', 'Monitoring Reader')|project label=tostring(roleName) , description=roleName, value=name | order by label asc"
                }
              }
            },
            {
              "name": "ALZArmRoleId",
              "type": "Microsoft.Common.DropDown",
              "label": "Arm Role Id",
              "multiselect": true,
              "filter": true,
              "toolTip": "The Azure Resource Manager Role(s) where notifications of the alerts (including Service Health alerts) are sent to. Leave the value blank if no Azure Resource Manager Role notification is require",
              "visible": "[equals(steps('Notification').NotificationOption,'No')]",
              "defaultValue": "",
              "constraints": {
                "allowedValues": "[steps('Notification').getALZArmRoleId.data]",
                "required": false
              }
            },
            {
              "name": "LogicAppOption",
              "type": "Microsoft.Common.OptionsGroup",
              "label": "Add Logic App as action",
              "defaultValue": "No",
              "toolTip": "Select 'Yes' if you want to use a Logic App as action for the alerts.",
              "constraints": {
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ]
              },
              "visible": "[equals(steps('Notification').NotificationOption,'No')]"
            },
            {
              "name": "getLogicAppId",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "POST",
                "path": "/providers/Microsoft.ResourceGraph/resources?api-version=2021-03-01",
                "body": {
                  "query": "resources | where type =~ 'microsoft.logic/workflows' or (type =~ 'Microsoft.Web/sites' and kind =~ 'functionapp,workflowapp') | project label=tostring(name), description=id, value=id | order by label asc"
                }
              }
            },
            {
              "name": "getALZLogicappCallbackUrl",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "POST",
                "path": "/providers/Microsoft.ResourceGraph/resources?api-version=2021-03-01",
                "body": {
                  "query": "resources| where type == 'microsoft.logic/workflows'| project label=tostring(properties.accessEndpoint) , description=properties.accessEndpoint, value=properties.accessEndpoint | order by label asc"
                }
              }
            },
            {
              "name": "getALZEventHubResourceId",
              "type": "Microsoft.Solutions.ArmApiControl",
              "request": {
                "method": "POST",
                "path": "/providers/Microsoft.ResourceGraph/resources?api-version=2021-03-01",
                "body": {
                  "query": "resources| where type == 'microsoft.eventhub/namespaces'| project label=tostring(name) , description=id, value=id | order by label asc"
                }
              }
            },
            {
              "name": "ALZLogicappResourceId",
              "type": "Microsoft.Common.DropDown",
              "label": "Logicapp Resource Id",
              "toolTip": "The Logic app resource id to be used as action for the alerts (including Service Health alerts). Leave the value blank if no Logic app is used",
              "visible": "[equals(steps('Notification').LogicAppOption,'Yes')]",
              "multiselect": false,
              "defaultValue": "",
              "filter": false,
              "constraints": {
                "allowedValues": "[steps('Notification').getLogicAppId.data]",
                "required": false
              }
            },
            {
              "name": "ALZLogicappCallbackUrl",
              "type": "Microsoft.Common.TextBox",
              "label": "Logicapp Callback Url",
              "toolTip": "The Logic app callback url of the Logic app you want to use as action for the alerts (including Service Health alerts). Leave the value blank if no Logic app is used. To retrieve the callback url you can either use the Get-AzLogicAppTriggerCallbackUrl PowerShell command or navigate to the Logic app in the Azure portal, go to Logic app designer, expand the trigger activity (When an HTTP request is received) and copy the value in the URL field using the 2-sheets icon.",
              "visible": "[equals(steps('Notification').LogicAppOption,'Yes')]",
              "defaultValue": "",
              "constraints": {
                "required": false,
                "validations": [
                  {
                    "regex": "",
                    "validationMessage": ""
                  }
                ]
              }
            },
            {
              "name": "EventHubOption",
              "type": "Microsoft.Common.OptionsGroup",
              "label": "Add Event Hub as action",
              "defaultValue": "No",
              "toolTip": "Select 'Yes' if you want to use an Event Hub as action for the alerts.",
              "constraints": {
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ]
              },
              "visible": "[equals(steps('Notification').NotificationOption,'No')]"
            },
            {
              "name": "ALZEventHubResourceId",
              "type": "Microsoft.Common.DropDown",
              "label": "Event Hub Resource Id",
              "toolTip": "The Event Hubs to be used as action for the alerts (including Service Health alerts). Leave the value blank if no Event Hubs is used.",
              "visible": "[equals(steps('Notification').EventHubOption,'Yes')]",
              "multiselect": true,
              "defaultValue": "",
              "filter": false,
              "constraints": {
                "allowedValues": "[steps('Notification').getALZEventHubResourceId.data]",
                "required": false
              }
            },
            {
              "name": "AzureFunctionOption",
              "type": "Microsoft.Common.OptionsGroup",
              "label": "Add Azure Function as action",
              "defaultValue": "No",
              "toolTip": "Select 'Yes' if you want to use an Azure Function as action for the alerts.",
              "constraints": {
                "allowedValues": [
                  {
                    "label": "Yes",
                    "value": "Yes"
                  },
                  {
                    "label": "No",
                    "value": "No"
                  }
                ]
              },
              "visible": "[equals(steps('Notification').NotificationOption,'No')]"
            },
            {
              "name": "ALZFunctionResourceId",
              "type": "Microsoft.Common.TextBox",
              "label": "Function Resource Id",
              "toolTip": "The Function resource id to be used as action for the alerts (including Service Health alerts). Leave the value blank if no Function is used.",
              "visible": "[equals(steps('Notification').AzureFunctionOption,'Yes')]",
              "defaultValue": "",
              "constraints": {
                "required": false,
                "validations": [
                  {
                    "regex": "",
                    "validationMessage": ""
                  }
                ]
              }
            },
            {
              "name": "ALZFunctionTriggerUrl",
              "type": "Microsoft.Common.TextBox",
              "label": "Function Trigger Url",
              "toolTip": "Function App trigger url of the function to be used as action for the alerts (including Service Health alerts). Leave the value blank if no Function is used. To retrieve the Function App trigger url with the corresponding code, navigate to the HTTP-triggered functions in the Azure portal, go to Code and Test, select Get function URL from the menu top menu and copy the value in the URL field using the 2-sheets icon.",
              "visible": "[equals(steps('Notification').AzureFunctionOption,'Yes')]",
              "defaultValue": "",
              "constraints": {
                "required": false,
                "validations": [
                  {
                    "regex": "",
                    "validationMessage": ""
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "outputs": {
      "kind": "ManagementGroup",
      "location": "[steps('basics').resourceScope.location.name]",
      "managementGroupId": "[steps('basics').resourceScope.managementGroup.id]",
      "parameters": {
        "location": "[steps('basics').resourceScope.location.name]",
        "ManagementGroupId": "[steps('basics').resourceScope.managementGroup.name]",
        "ALZMonitorResourceGroupName": "[steps('basics').ALZMonitorRGName]",
        "ALZMonitorActionGroupEmail": "[steps('Notification').ALZMonitorActionGroupEmail]",
        "ALZMonitorResourceGroupLocation": "[steps('basics').ALZMonitorResourceGroupLocation]",
        "ALZMonitorResourceGroupTags": "[steps('basics').ALZMonitorResourceGroupTags]",
        "ALZLogicappResourceId": "[steps('Notification').ALZLogicappResourceId]",
        "ALZLogicappCallbackUrl": "[steps('Notification').ALZLogicappCallbackUrl]",
        "bringYourOwnUserAssignedManagedIdentity": "[steps('basics').bringYourOwnUserAssignedManagedIdentity]",
        "bringYourOwnUserAssignedManagedIdentityResourceId": "[steps('basics').bringYourOwnUserAssignedManagedIdentityResourceId]",
        "userAssignedManagedIdentityName": "[steps('basics').userAssignedManagedIdentityName]",
        "managementSubscriptionId": "[if(equals(steps('basics').bringYourOwnUserAssignedManagedIdentity,'No'), steps('basics').managementSubscriptionId, '')]",
        "ALZArmRoleId": "[steps('Notification').ALZArmRoleId]",
        "ALZEventHubResourceId": "[steps('Notification').ALZEventHubResourceId]",
        "ALZWebhookServiceUri": "[steps('Notification').ALZWebhookServiceUri]",
        "ALZFunctionResourceId": "[steps('Notification').ALZFunctionResourceId]",
        "ALZFunctionTriggerUrl": "[steps('Notification').ALZFunctionTriggerUrl]",
        "enableAMBAManagement": "[steps('Configuration').enableAMBAManagement]",
        "enableAMBAServiceHealth": "[steps('Configuration').enableAMBAServiceHealth]",
        "enableAMBANotificationAssets": "[steps('Configuration').enableAMBANotificationAssets]",
        "enableAMBAConnectivity": "[steps('Configuration').enableAMBAConnectivity]",
        "enableAMBAIdentity": "[steps('Configuration').enableAMBAIdentity]",
        "enableAMBAHybridVM": "[steps('Configuration').enableAMBAHybridVM]",
        "enterpriseScaleCompanyPrefix": "[steps('Configuration').enterpriseScaleCompanyPrefix]",
        "platformManagementGroup": "[if(and(equals(steps('Configuration').enableAMBAHybridVM,'No'), equals(steps('Configuration').enableAMBAVM,'No')), 'contoso-platform', steps('Configuration').platformManagementGroup)]",
        "IdentityManagementGroup": "[if(equals(steps('Configuration').enableAMBAIdentity,'No'), 'contoso-identity', steps('Configuration').IdentityManagementGroup)]",
        "managementManagementGroup": "[if(and(equals(steps('Configuration').enableAMBAManagement,'No'), equals(steps('Configuration').enableAMBAHybridVM,'No'), equals(steps('Configuration').enableAMBAVM,'No'), equals(steps('Configuration').enableAMBAWeb,'No')), 'contoso-management', steps('Configuration').managementManagementGroup)]",
        "connectivityManagementGroup": "[if(equals(steps('Configuration').enableAMBAConnectivity, 'No'), 'contoso-connectivity', steps('Configuration').connectivityManagementGroup)]",
        "LandingZoneManagementGroup": "[if(empty(steps('Configuration').LandingZoneManagementGroup), 'contoso-landingzones', steps('Configuration').LandingZoneManagementGroup)]",
        "BYOActionGroup": "[steps('Notification').BYOActionGroup]",
        "BYOAlertProcessingRule": "[steps('Notification').BYOAlertProcessingRule.id]",
        "deployAMBAPortalAccelerator": "Yes",
        "telemetryOptOut": "[steps('basics').cuaSection.telemetryOptOut]",
        "enableAMBAKeyManagement": "[steps('Configuration').enableAMBAKeyManagement]",
        "enableAMBALoadBalancing": "[steps('Configuration').enableAMBALoadBalancing]",
        "enableAMBANetworkChanges": "[steps('Configuration').enableAMBANetworkChanges]",
        "enableAMBARecoveryServices": "[steps('Configuration').enableAMBARecoveryServices]",
        "enableAMBAStorage": "[steps('Configuration').enableAMBAStorage]",
        "enableAMBAVM": "[steps('Configuration').enableAMBAVM]",
        "enableAMBAWeb": "[steps('Configuration').enableAMBAWeb]"
      }
    }
  }
}
