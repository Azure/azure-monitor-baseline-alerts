{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.34.44.8038",
      "templateHash": "3106675952646081745"
    }
  },
  "parameters": {
    "topLevelManagementGroupPrefix": {
      "type": "string",
      "defaultValue": "alz",
      "metadata": {
        "message": "The JSON version of this file is programatically generated from Bicep. PLEASE DO NOT UPDATE MANUALLY!!",
        "description": "Provide a prefix (unique at tenant-scope) for the Management Group hierarchy and other resources created as part of an Azure landing zone. DEFAULT VALUE = \"alz\""
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optionally set the deployment location for policies with Deploy If Not Exists effect. DEFAULT VALUE = \"deployment().location\""
      }
    },
    "scope": {
      "type": "string",
      "defaultValue": "[tenantResourceId('Microsoft.Management/managementGroups', parameters('topLevelManagementGroupPrefix'))]",
      "metadata": {
        "description": "Optionally set the scope for custom Policy Definitions used in Policy Set Definitions (Initiatives). Must be one of '/', '/subscriptions/id' or '/providers/Microsoft.Management/managementGroups/id'. DEFAULT VALUE = '/providers/Microsoft.Management/managementGroups/${topLevelManagementGroupPrefix}'"
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "processPolicyDefinitionsAll",
        "count": "[length(variables('loadPolicyDefinitions').All)]",
        "input": "[replace(replace(variables('loadPolicyDefinitions').All[copyIndex('processPolicyDefinitionsAll')], variables('templateVars').defaultDeploymentLocation, variables('deploymentLocation')), variables('templateVars').localizedDeploymentLocation, variables('deploymentLocation'))]"
      },
      {
        "name": "processPolicyDefinitionsAzureCloud",
        "count": "[length(variables('loadPolicyDefinitions').AzureCloud)]",
        "input": "[replace(replace(variables('loadPolicyDefinitions').AzureCloud[copyIndex('processPolicyDefinitionsAzureCloud')], variables('templateVars').defaultDeploymentLocation, variables('deploymentLocation')), variables('templateVars').localizedDeploymentLocation, variables('deploymentLocation'))]"
      },
      {
        "name": "processPolicyDefinitionsAzureChinaCloud",
        "count": "[length(variables('loadPolicyDefinitions').AzureChinaCloud)]",
        "input": "[replace(replace(variables('loadPolicyDefinitions').AzureChinaCloud[copyIndex('processPolicyDefinitionsAzureChinaCloud')], variables('templateVars').defaultDeploymentLocation, variables('deploymentLocation')), variables('templateVars').localizedDeploymentLocation, variables('deploymentLocation'))]"
      },
      {
        "name": "processPolicyDefinitionsAzureUSGovernment",
        "count": "[length(variables('loadPolicyDefinitions').AzureUSGovernment)]",
        "input": "[replace(replace(variables('loadPolicyDefinitions').AzureUSGovernment[copyIndex('processPolicyDefinitionsAzureUSGovernment')], variables('templateVars').defaultDeploymentLocation, variables('deploymentLocation')), variables('templateVars').localizedDeploymentLocation, variables('deploymentLocation'))]"
      },
      {
        "name": "processPolicySetDefinitionsAll",
        "count": "[length(variables('loadPolicySetDefinitions').All)]",
        "input": "[replace(variables('loadPolicySetDefinitions').All[copyIndex('processPolicySetDefinitionsAll')], variables('templateVars').scope, parameters('scope'))]"
      },
      {
        "name": "processPolicySetDefinitionsAzureCloud",
        "count": "[length(variables('loadPolicySetDefinitions').AzureCloud)]",
        "input": "[replace(variables('loadPolicySetDefinitions').AzureCloud[copyIndex('processPolicySetDefinitionsAzureCloud')], variables('templateVars').scope, parameters('scope'))]"
      },
      {
        "name": "processPolicySetDefinitionsAzureChinaCloud",
        "count": "[length(variables('loadPolicySetDefinitions').AzureChinaCloud)]",
        "input": "[replace(variables('loadPolicySetDefinitions').AzureChinaCloud[copyIndex('processPolicySetDefinitionsAzureChinaCloud')], variables('templateVars').scope, parameters('scope'))]"
      },
      {
        "name": "processPolicySetDefinitionsAzureUSGovernment",
        "count": "[length(variables('loadPolicySetDefinitions').AzureUSGovernment)]",
        "input": "[replace(variables('loadPolicySetDefinitions').AzureUSGovernment[copyIndex('processPolicySetDefinitionsAzureUSGovernment')], variables('templateVars').scope, parameters('scope'))]"
      },
      {
        "name": "policyDefinitionsAll",
        "count": "[length(variables('processPolicyDefinitionsAll'))]",
        "input": "[json(variables('processPolicyDefinitionsAll')[copyIndex('policyDefinitionsAll')])]"
      },
      {
        "name": "policyDefinitionsAzureCloud",
        "count": "[length(variables('processPolicyDefinitionsAzureCloud'))]",
        "input": "[json(variables('processPolicyDefinitionsAzureCloud')[copyIndex('policyDefinitionsAzureCloud')])]"
      },
      {
        "name": "policyDefinitionsAzureChinaCloud",
        "count": "[length(variables('processPolicyDefinitionsAzureChinaCloud'))]",
        "input": "[json(variables('processPolicyDefinitionsAzureChinaCloud')[copyIndex('policyDefinitionsAzureChinaCloud')])]"
      },
      {
        "name": "policyDefinitionsAzureUSGovernment",
        "count": "[length(variables('processPolicyDefinitionsAzureUSGovernment'))]",
        "input": "[json(variables('processPolicyDefinitionsAzureUSGovernment')[copyIndex('policyDefinitionsAzureUSGovernment')])]"
      },
      {
        "name": "policySetDefinitionsAll",
        "count": "[length(variables('processPolicySetDefinitionsAll'))]",
        "input": "[json(variables('processPolicySetDefinitionsAll')[copyIndex('policySetDefinitionsAll')])]"
      },
      {
        "name": "policySetDefinitionsAzureCloud",
        "count": "[length(variables('processPolicySetDefinitionsAzureCloud'))]",
        "input": "[json(variables('processPolicySetDefinitionsAzureCloud')[copyIndex('policySetDefinitionsAzureCloud')])]"
      },
      {
        "name": "policySetDefinitionsAzureChinaCloud",
        "count": "[length(variables('processPolicySetDefinitionsAzureChinaCloud'))]",
        "input": "[json(variables('processPolicySetDefinitionsAzureChinaCloud')[copyIndex('policySetDefinitionsAzureChinaCloud')])]"
      },
      {
        "name": "policySetDefinitionsAzureUSGovernment",
        "count": "[length(variables('processPolicySetDefinitionsAzureUSGovernment'))]",
        "input": "[json(variables('processPolicySetDefinitionsAzureUSGovernment')[copyIndex('policySetDefinitionsAzureUSGovernment')])]"
      }
    ],
    "$fxv#0": "{\n  \"type\": \"Microsoft.Authorization/policyDefinitions\",\n  \"apiVersion\": \"2021-06-01\",\n  \"name\": \"Deploy_WSF_CPUPercentage_Alert\",\n  \"properties\": {\n    \"policyType\": \"Custom\",\n    \"mode\": \"All\",\n    \"displayName\": \"Deploy Azure Monitor Baseline Alerts (AMBA-ALZ) - App Service Plan CPU Percentage Alert\",\n    \"description\": \"Policy to audit/deploy App Service Plan CPU Percentage  Alert\",\n    \"metadata\": {\n      \"version\": \"1.2.2\",\n      \"category\": \"Web Services\",\n      \"source\": \"https://github.com/Azure/azure-monitor-baseline-alerts/\",\n      \"_deployed_by_amba\": \"True\"\n    },\n    \"parameters\": {\n      \"severity\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Severity\",\n          \"description\": \"Severity of the Alert\"\n        },\n        \"allowedValues\": [\n          \"0\",\n          \"1\",\n          \"2\",\n          \"3\",\n          \"4\"\n        ],\n        \"defaultValue\": \"2\"\n      },\n      \"windowSize\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Window Size\",\n          \"description\": \"Window size for the alert\"\n        },\n        \"allowedValues\": [\n          \"PT1M\",\n          \"PT5M\",\n          \"PT15M\",\n          \"PT30M\",\n          \"PT1H\",\n          \"PT6H\",\n          \"PT12H\",\n          \"P1D\"\n        ],\n        \"defaultValue\": \"PT5M\"\n      },\n      \"evaluationFrequency\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Evaluation Frequency\",\n          \"description\": \"Evaluation frequency for the alert\"\n        },\n        \"allowedValues\": [\n          \"PT1M\",\n          \"PT5M\",\n          \"PT15M\",\n          \"PT30M\",\n          \"PT1H\"\n        ],\n        \"defaultValue\": \"PT5M\"\n      },\n      \"autoMitigate\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Auto Mitigate\",\n          \"description\": \"Auto Mitigate for the alert\"\n        },\n        \"allowedValues\": [\n          \"true\",\n          \"false\"\n        ],\n        \"defaultValue\": \"true\"\n      },\n      \"enabled\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Alert State\",\n          \"description\": \"Alert state for the alert\"\n        },\n        \"allowedValues\": [\n          \"true\",\n          \"false\"\n        ],\n        \"defaultValue\": \"true\"\n      },\n      \"threshold\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Threshold\",\n          \"description\": \"Threshold for the alert\"\n        },\n        \"defaultValue\": \"90\"\n      },\n      \"effect\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Effect\",\n          \"description\": \"Effect of the policy\"\n        },\n        \"allowedValues\": [\n          \"deployIfNotExists\",\n          \"disabled\"\n        ],\n        \"defaultValue\": \"deployIfNotExists\"\n      },\n      \"MonitorDisableTagName\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"ALZ Monitoring disabled tag name\",\n          \"description\": \"Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.\"\n        },\n        \"defaultValue\": \"MonitorDisable\"\n      },\n      \"MonitorDisableTagValues\": {\n        \"type\": \"Array\",\n        \"metadata\": {\n          \"displayName\": \"ALZ Monitoring disabled tag values(s)\",\n          \"description\": \"Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.\"\n        },\n        \"defaultValue\": [\n          \"true\",\n          \"Test\",\n          \"Dev\",\n          \"Sandbox\"\n        ]\n      }\n    },\n    \"policyRule\": {\n      \"if\": {\n        \"allOf\": [\n          {\n            \"field\": \"type\",\n            \"equals\": \"Microsoft.Web/serverfarms\"\n          },\n          {\n            \"field\": \"[[concat('tags[', parameters('MonitorDisableTagName'), ']')]\",\n            \"notIn\": \"[[parameters('MonitorDisableTagValues')]\"\n          }\n        ]\n      },\n      \"then\": {\n        \"effect\": \"[[parameters('effect')]\",\n        \"details\": {\n          \"roleDefinitionIds\": [\n            \"/providers/Microsoft.Authorization/roleDefinitions/47be4a87-7950-4631-9daf-b664a405f074\"\n          ],\n          \"type\": \"Microsoft.Insights/metricAlerts\",\n          \"existenceCondition\": {\n            \"allOf\": [\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace\",\n                \"equals\": \"Microsoft.Web/serverfarms\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName\",\n                \"equals\": \"CpuPercentage\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricalerts/scopes[*]\",\n                \"equals\": \"[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', field('fullName'))]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/enabled\",\n                \"equals\": \"[[parameters('enabled')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/evaluationFrequency\",\n                \"equals\": \"[[parameters('evaluationFrequency')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/windowSize\",\n                \"equals\": \"[[parameters('windowSize')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricalerts/severity\",\n                \"equals\": \"[[parameters('severity')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/autoMitigate\",\n                \"equals\": \"[[parameters('autoMitigate')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation\",\n                \"equals\": \"Average\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator\",\n                \"equals\": \"GreaterThan\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold\",\n                \"equals\": \"[[if(contains(field('tags'), '_amba-CpuPercentage-threshold-Override_'), field('tags._amba-CpuPercentage-threshold-Override_'), parameters('threshold'))]\"\n              }\n            ]\n          },\n          \"deployment\": {\n            \"properties\": {\n              \"mode\": \"incremental\",\n              \"template\": {\n                \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n                \"contentVersion\": \"1.0.0.0\",\n                \"parameters\": {\n                  \"resourceName\": {\n                    \"type\": \"String\",\n                    \"metadata\": {\n                      \"displayName\": \"resourceName\",\n                      \"description\": \"Name of the resource\"\n                    }\n                  },\n                  \"resourceId\": {\n                    \"type\": \"String\",\n                    \"metadata\": {\n                      \"displayName\": \"resourceId\",\n                      \"description\": \"Resource ID of the resource emitting the metric that will be used for the comparison\"\n                    }\n                  },\n                  \"severity\": {\n                    \"type\": \"String\"\n                  },\n                  \"windowSize\": {\n                    \"type\": \"String\"\n                  },\n                  \"evaluationFrequency\": {\n                    \"type\": \"String\"\n                  },\n                  \"autoMitigate\": {\n                    \"type\": \"String\"\n                  },\n                  \"enabled\": {\n                    \"type\": \"String\"\n                  },\n                  \"threshold\": {\n                    \"type\": \"String\"\n                  }\n                },\n                \"variables\": {},\n                \"resources\": [\n                  {\n                    \"type\": \"Microsoft.Insights/metricAlerts\",\n                    \"apiVersion\": \"2018-03-01\",\n                    \"name\": \"[[concat(parameters('resourceName'), '-CpuPercentage')]\",\n                    \"location\": \"global\",\n                    \"tags\": {\n                      \"_deployed_by_amba\": true\n                    },\n                    \"properties\": {\n                      \"description\": \"Metric Alert for App Service Plan CPU Percentage\",\n                      \"severity\": \"[[parameters('severity')]\",\n                      \"enabled\": \"[[parameters('enabled')]\",\n                      \"scopes\": [\n                        \"[[parameters('resourceId')]\"\n                      ],\n                      \"evaluationFrequency\": \"[[parameters('evaluationFrequency')]\",\n                      \"windowSize\": \"[[parameters('windowSize')]\",\n                      \"criteria\": {\n                        \"allOf\": [\n                          {\n                            \"name\": \"CpuPercentage\",\n                            \"metricNamespace\": \"Microsoft.Web/serverfarms\",\n                            \"metricName\": \"CpuPercentage\",\n                            \"operator\": \"GreaterThan\",\n                            \"threshold\": \"[[parameters('threshold')]\",\n                            \"timeAggregation\": \"Average\",\n                            \"criterionType\": \"StaticThresholdCriterion\"\n                          }\n                        ],\n                        \"odata.type\": \"Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria\"\n                      },\n                      \"autoMitigate\": \"[[parameters('autoMitigate')]\",\n                      \"parameters\": {\n                        \"severity\": {\n                          \"value\": \"[[parameters('severity')]\"\n                        },\n                        \"windowSize\": {\n                          \"value\": \"[[parameters('windowSize')]\"\n                        },\n                        \"evaluationFrequency\": {\n                          \"value\": \"[[parameters('evaluationFrequency')]\"\n                        },\n                        \"autoMitigate\": {\n                          \"value\": \"[[parameters('autoMitigate')]\"\n                        },\n                        \"enabled\": {\n                          \"value\": \"[[parameters('enabled')]\"\n                        },\n                        \"threshold\": {\n                          \"value\": \"[[parameters('threshold')]\"\n                        }\n                      }\n                    }\n                  }\n                ]\n              },\n              \"parameters\": {\n                \"resourceName\": {\n                  \"value\": \"[[field('name')]\"\n                },\n                \"resourceId\": {\n                  \"value\": \"[[field('id')]\"\n                },\n                \"severity\": {\n                  \"value\": \"[[parameters('severity')]\"\n                },\n                \"windowSize\": {\n                  \"value\": \"[[parameters('windowSize')]\"\n                },\n                \"evaluationFrequency\": {\n                  \"value\": \"[[parameters('evaluationFrequency')]\"\n                },\n                \"autoMitigate\": {\n                  \"value\": \"[[parameters('autoMitigate')]\"\n                },\n                \"enabled\": {\n                  \"value\": \"[[parameters('enabled')]\"\n                },\n                \"threshold\": {\n                  \"value\": \"[[if(contains(field('tags'), '_amba-CpuPercentage-threshold-Override_'), field('tags._amba-CpuPercentage-threshold-Override_'), parameters('threshold'))]\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
    "$fxv#1": "{\n  \"type\": \"Microsoft.Authorization/policyDefinitions\",\n  \"apiVersion\": \"2021-06-01\",\n  \"name\": \"Deploy_WSF_DiskQueueLength_Alert\",\n  \"properties\": {\n    \"policyType\": \"Custom\",\n    \"mode\": \"All\",\n    \"displayName\": \"Deploy Azure Monitor Baseline Alerts (AMBA-ALZ) - App Service Plan Disk Queue Length Alert\",\n    \"description\": \"Policy to audit/deploy App Service Plan Disk Queue Length Alert\",\n    \"metadata\": {\n      \"version\": \"1.3.1\",\n      \"category\": \"Web Services\",\n      \"source\": \"https://github.com/Azure/azure-monitor-baseline-alerts/\",\n      \"alzCloudEnvironments\": [\n        \"AzureCloud\"\n      ],\n      \"_deployed_by_amba\": \"True\"\n    },\n    \"parameters\": {\n      \"severity\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Severity\",\n          \"description\": \"Severity of the Alert\"\n        },\n        \"allowedValues\": [\n          \"0\",\n          \"1\",\n          \"2\",\n          \"3\",\n          \"4\"\n        ],\n        \"defaultValue\": \"2\"\n      },\n      \"windowSize\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Window Size\",\n          \"description\": \"Window size for the alert\"\n        },\n        \"allowedValues\": [\n          \"PT1M\",\n          \"PT5M\",\n          \"PT15M\",\n          \"PT30M\",\n          \"PT1H\",\n          \"PT6H\",\n          \"PT12H\",\n          \"P1D\"\n        ],\n        \"defaultValue\": \"PT5M\"\n      },\n      \"evaluationFrequency\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Evaluation Frequency\",\n          \"description\": \"Evaluation frequency for the alert\"\n        },\n        \"allowedValues\": [\n          \"PT1M\",\n          \"PT5M\",\n          \"PT15M\",\n          \"PT30M\",\n          \"PT1H\"\n        ],\n        \"defaultValue\": \"PT5M\"\n      },\n      \"autoMitigate\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Auto Mitigate\",\n          \"description\": \"Auto Mitigate for the alert\"\n        },\n        \"allowedValues\": [\n          \"true\",\n          \"false\"\n        ],\n        \"defaultValue\": \"true\"\n      },\n      \"enabled\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Alert State\",\n          \"description\": \"Alert state for the alert\"\n        },\n        \"allowedValues\": [\n          \"true\",\n          \"false\"\n        ],\n        \"defaultValue\": \"true\"\n      },\n      \"effect\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Effect\",\n          \"description\": \"Effect of the policy\"\n        },\n        \"allowedValues\": [\n          \"deployIfNotExists\",\n          \"disabled\"\n        ],\n        \"defaultValue\": \"deployIfNotExists\"\n      },\n      \"failingPeriods\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Failing Periods\",\n          \"description\": \"Number of failing periods before alert is fired\"\n        },\n        \"defaultValue\": \"2\"\n      },\n      \"evaluationPeriods\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Evaluation Periods\",\n          \"description\": \"The number of aggregated lookback points.\"\n        },\n        \"defaultValue\": \"2\"\n      },\n      \"MonitorDisableTagName\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"ALZ Monitoring disabled tag name\",\n          \"description\": \"Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.\"\n        },\n        \"defaultValue\": \"MonitorDisable\"\n      },\n      \"MonitorDisableTagValues\": {\n        \"type\": \"Array\",\n        \"metadata\": {\n          \"displayName\": \"ALZ Monitoring disabled tag values(s)\",\n          \"description\": \"Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.\"\n        },\n        \"defaultValue\": [\n          \"true\",\n          \"Test\",\n          \"Dev\",\n          \"Sandbox\"\n        ]\n      }\n    },\n    \"policyRule\": {\n      \"if\": {\n        \"allOf\": [\n          {\n            \"field\": \"type\",\n            \"equals\": \"Microsoft.Web/serverfarms\"\n          },\n          {\n            \"field\": \"[[concat('tags[', parameters('MonitorDisableTagName'), ']')]\",\n            \"notIn\": \"[[parameters('MonitorDisableTagValues')]\"\n          }\n        ]\n      },\n      \"then\": {\n        \"effect\": \"[[parameters('effect')]\",\n        \"details\": {\n          \"roleDefinitionIds\": [\n            \"/providers/Microsoft.Authorization/roleDefinitions/47be4a87-7950-4631-9daf-b664a405f074\"\n          ],\n          \"type\": \"Microsoft.Insights/metricAlerts\",\n          \"existenceCondition\": {\n            \"allOf\": [\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace\",\n                \"equals\": \"Microsoft.Web/serverfarms\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName\",\n                \"equals\": \"DiskQueueLength\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricalerts/scopes[*]\",\n                \"equals\": \"[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', field('fullName'))]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/enabled\",\n                \"equals\": \"[[parameters('enabled')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/evaluationFrequency\",\n                \"equals\": \"[[parameters('evaluationFrequency')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/windowSize\",\n                \"equals\": \"[[parameters('windowSize')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricalerts/severity\",\n                \"equals\": \"[[parameters('severity')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/autoMitigate\",\n                \"equals\": \"[[parameters('autoMitigate')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation\",\n                \"equals\": \"Average\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator\",\n                \"equals\": \"GreaterThan\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity\",\n                \"equals\": \"Medium\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert\",\n                \"equals\": \"[[parameters('failingPeriods')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods\",\n                \"equals\": \"[[parameters('evaluationPeriods')]\"\n              }\n            ]\n          },\n          \"deployment\": {\n            \"properties\": {\n              \"mode\": \"incremental\",\n              \"template\": {\n                \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n                \"contentVersion\": \"1.0.0.0\",\n                \"parameters\": {\n                  \"resourceName\": {\n                    \"type\": \"String\",\n                    \"metadata\": {\n                      \"displayName\": \"resourceName\",\n                      \"description\": \"Name of the resource\"\n                    }\n                  },\n                  \"resourceId\": {\n                    \"type\": \"String\",\n                    \"metadata\": {\n                      \"displayName\": \"resourceId\",\n                      \"description\": \"Resource ID of the resource emitting the metric that will be used for the comparison\"\n                    }\n                  },\n                  \"severity\": {\n                    \"type\": \"String\"\n                  },\n                  \"windowSize\": {\n                    \"type\": \"String\"\n                  },\n                  \"evaluationFrequency\": {\n                    \"type\": \"String\"\n                  },\n                  \"autoMitigate\": {\n                    \"type\": \"String\"\n                  },\n                  \"enabled\": {\n                    \"type\": \"String\"\n                  },\n                  \"failingPeriods\": {\n                    \"type\": \"String\"\n                  },\n                  \"evaluationPeriods\": {\n                    \"type\": \"String\"\n                  }\n                },\n                \"variables\": {},\n                \"resources\": [\n                  {\n                    \"type\": \"Microsoft.Insights/metricAlerts\",\n                    \"apiVersion\": \"2018-03-01\",\n                    \"name\": \"[[concat(parameters('resourceName'), '-DiskQueueLengthAlert')]\",\n                    \"location\": \"global\",\n                    \"tags\": {\n                      \"_deployed_by_amba\": true\n                    },\n                    \"properties\": {\n                      \"description\": \"Metric Alert for App Service Plan Disk Queue Length\",\n                      \"severity\": \"[[parameters('severity')]\",\n                      \"enabled\": \"[[parameters('enabled')]\",\n                      \"scopes\": [\n                        \"[[parameters('resourceId')]\"\n                      ],\n                      \"evaluationFrequency\": \"[[parameters('evaluationFrequency')]\",\n                      \"windowSize\": \"[[parameters('windowSize')]\",\n                      \"criteria\": {\n                        \"allOf\": [\n                          {\n                            \"alertSensitivity\": \"Medium\",\n                            \"failingPeriods\": {\n                              \"numberOfEvaluationPeriods\": \"[[parameters('evaluationPeriods')]\",\n                              \"minFailingPeriodsToAlert\": \"[[parameters('failingPeriods')]\"\n                            },\n                            \"name\": \"ServiceApiResult\",\n                            \"metricNamespace\": \"Microsoft.Web/serverfarms\",\n                            \"metricName\": \"DiskQueueLength\",\n                            \"operator\": \"GreaterThan\",\n                            \"timeAggregation\": \"Average\",\n                            \"criterionType\": \"DynamicThresholdCriterion\"\n                          }\n                        ],\n                        \"odata.type\": \"Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria\"\n                      },\n                      \"autoMitigate\": \"[[parameters('autoMitigate')]\",\n                      \"parameters\": {\n                        \"severity\": {\n                          \"value\": \"[[parameters('severity')]\"\n                        },\n                        \"windowSize\": {\n                          \"value\": \"[[parameters('windowSize')]\"\n                        },\n                        \"evaluationFrequency\": {\n                          \"value\": \"[[parameters('evaluationFrequency')]\"\n                        },\n                        \"autoMitigate\": {\n                          \"value\": \"[[parameters('autoMitigate')]\"\n                        },\n                        \"enabled\": {\n                          \"value\": \"[[parameters('enabled')]\"\n                        },\n                        \"failingPeriods\": {\n                          \"value\": \"[[parameters('failingPeriods')]\"\n                        },\n                        \"evaluationPeriods\": {\n                          \"value\": \"[[parameters('evaluationPeriods')]\"\n                        }\n                      }\n                    }\n                  }\n                ]\n              },\n              \"parameters\": {\n                \"resourceName\": {\n                  \"value\": \"[[field('name')]\"\n                },\n                \"resourceId\": {\n                  \"value\": \"[[field('id')]\"\n                },\n                \"severity\": {\n                  \"value\": \"[[parameters('severity')]\"\n                },\n                \"windowSize\": {\n                  \"value\": \"[[parameters('windowSize')]\"\n                },\n                \"evaluationFrequency\": {\n                  \"value\": \"[[parameters('evaluationFrequency')]\"\n                },\n                \"autoMitigate\": {\n                  \"value\": \"[[parameters('autoMitigate')]\"\n                },\n                \"enabled\": {\n                  \"value\": \"[[parameters('enabled')]\"\n                },\n                \"failingPeriods\": {\n                  \"value\": \"[[parameters('failingPeriods')]\"\n                },\n                \"evaluationPeriods\": {\n                  \"value\": \"[[parameters('evaluationPeriods')]\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
    "$fxv#2": "{\n  \"type\": \"Microsoft.Authorization/policyDefinitions\",\n  \"apiVersion\": \"2021-06-01\",\n  \"name\": \"Deploy_WSF_HttpQueueLength_Alert\",\n  \"properties\": {\n    \"policyType\": \"Custom\",\n    \"mode\": \"All\",\n    \"displayName\": \"Deploy Azure Monitor Baseline Alerts (AMBA-ALZ) - App Service Plan Http Queue Length Alert\",\n    \"description\": \"Policy to audit/deploy App Service Plan Http Queue Length Alert\",\n    \"metadata\": {\n      \"version\": \"1.3.1\",\n      \"category\": \"Web Services\",\n      \"source\": \"https://github.com/Azure/azure-monitor-baseline-alerts/\",\n      \"alzCloudEnvironments\": [\n        \"AzureCloud\"\n      ],\n      \"_deployed_by_amba\": \"True\"\n    },\n    \"parameters\": {\n      \"severity\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Severity\",\n          \"description\": \"Severity of the Alert\"\n        },\n        \"allowedValues\": [\n          \"0\",\n          \"1\",\n          \"2\",\n          \"3\",\n          \"4\"\n        ],\n        \"defaultValue\": \"2\"\n      },\n      \"windowSize\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Window Size\",\n          \"description\": \"Window size for the alert\"\n        },\n        \"allowedValues\": [\n          \"PT1M\",\n          \"PT5M\",\n          \"PT15M\",\n          \"PT30M\",\n          \"PT1H\",\n          \"PT6H\",\n          \"PT12H\",\n          \"P1D\"\n        ],\n        \"defaultValue\": \"PT5M\"\n      },\n      \"evaluationFrequency\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Evaluation Frequency\",\n          \"description\": \"Evaluation frequency for the alert\"\n        },\n        \"allowedValues\": [\n          \"PT1M\",\n          \"PT5M\",\n          \"PT15M\",\n          \"PT30M\",\n          \"PT1H\"\n        ],\n        \"defaultValue\": \"PT5M\"\n      },\n      \"autoMitigate\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Auto Mitigate\",\n          \"description\": \"Auto Mitigate for the alert\"\n        },\n        \"allowedValues\": [\n          \"true\",\n          \"false\"\n        ],\n        \"defaultValue\": \"true\"\n      },\n      \"enabled\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Alert State\",\n          \"description\": \"Alert state for the alert\"\n        },\n        \"allowedValues\": [\n          \"true\",\n          \"false\"\n        ],\n        \"defaultValue\": \"true\"\n      },\n      \"effect\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Effect\",\n          \"description\": \"Effect of the policy\"\n        },\n        \"allowedValues\": [\n          \"deployIfNotExists\",\n          \"disabled\"\n        ],\n        \"defaultValue\": \"deployIfNotExists\"\n      },\n      \"failingPeriods\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Failing Periods\",\n          \"description\": \"Number of failing periods before alert is fired\"\n        },\n        \"defaultValue\": \"2\"\n      },\n      \"evaluationPeriods\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Evaluation Periods\",\n          \"description\": \"The number of aggregated lookback points.\"\n        },\n        \"defaultValue\": \"2\"\n      },\n      \"MonitorDisableTagName\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"ALZ Monitoring disabled tag name\",\n          \"description\": \"Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.\"\n        },\n        \"defaultValue\": \"MonitorDisable\"\n      },\n      \"MonitorDisableTagValues\": {\n        \"type\": \"Array\",\n        \"metadata\": {\n          \"displayName\": \"ALZ Monitoring disabled tag values(s)\",\n          \"description\": \"Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.\"\n        },\n        \"defaultValue\": [\n          \"true\",\n          \"Test\",\n          \"Dev\",\n          \"Sandbox\"\n        ]\n      }\n    },\n    \"policyRule\": {\n      \"if\": {\n        \"allOf\": [\n          {\n            \"field\": \"type\",\n            \"equals\": \"Microsoft.Web/serverfarms\"\n          },\n          {\n            \"field\": \"[[concat('tags[', parameters('MonitorDisableTagName'), ']')]\",\n            \"notIn\": \"[[parameters('MonitorDisableTagValues')]\"\n          }\n        ]\n      },\n      \"then\": {\n        \"effect\": \"[[parameters('effect')]\",\n        \"details\": {\n          \"roleDefinitionIds\": [\n            \"/providers/Microsoft.Authorization/roleDefinitions/47be4a87-7950-4631-9daf-b664a405f074\"\n          ],\n          \"type\": \"Microsoft.Insights/metricAlerts\",\n          \"existenceCondition\": {\n            \"allOf\": [\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace\",\n                \"equals\": \"Microsoft.Web/serverfarms\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName\",\n                \"equals\": \"HttpQueueLength\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricalerts/scopes[*]\",\n                \"equals\": \"[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', field('fullName'))]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/enabled\",\n                \"equals\": \"[[parameters('enabled')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/evaluationFrequency\",\n                \"equals\": \"[[parameters('evaluationFrequency')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/windowSize\",\n                \"equals\": \"[[parameters('windowSize')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricalerts/severity\",\n                \"equals\": \"[[parameters('severity')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/autoMitigate\",\n                \"equals\": \"[[parameters('autoMitigate')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].timeAggregation\",\n                \"equals\": \"Average\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.operator\",\n                \"equals\": \"GreaterThan\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.alertSensitivity\",\n                \"equals\": \"Medium\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert\",\n                \"equals\": \"[[parameters('failingPeriods')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-MultipleResourceMultipleMetricCriteria.allOf[*].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods\",\n                \"equals\": \"[[parameters('evaluationPeriods')]\"\n              }\n            ]\n          },\n          \"deployment\": {\n            \"properties\": {\n              \"mode\": \"incremental\",\n              \"template\": {\n                \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n                \"contentVersion\": \"1.0.0.0\",\n                \"parameters\": {\n                  \"resourceName\": {\n                    \"type\": \"String\",\n                    \"metadata\": {\n                      \"displayName\": \"resourceName\",\n                      \"description\": \"Name of the resource\"\n                    }\n                  },\n                  \"resourceId\": {\n                    \"type\": \"String\",\n                    \"metadata\": {\n                      \"displayName\": \"resourceId\",\n                      \"description\": \"Resource ID of the resource emitting the metric that will be used for the comparison\"\n                    }\n                  },\n                  \"severity\": {\n                    \"type\": \"String\"\n                  },\n                  \"windowSize\": {\n                    \"type\": \"String\"\n                  },\n                  \"evaluationFrequency\": {\n                    \"type\": \"String\"\n                  },\n                  \"autoMitigate\": {\n                    \"type\": \"String\"\n                  },\n                  \"enabled\": {\n                    \"type\": \"String\"\n                  },\n                  \"failingPeriods\": {\n                    \"type\": \"String\"\n                  },\n                  \"evaluationPeriods\": {\n                    \"type\": \"String\"\n                  }\n                },\n                \"variables\": {},\n                \"resources\": [\n                  {\n                    \"type\": \"Microsoft.Insights/metricAlerts\",\n                    \"apiVersion\": \"2018-03-01\",\n                    \"name\": \"[[concat(parameters('resourceName'), '-HttpQueueLengthAlert')]\",\n                    \"location\": \"global\",\n                    \"tags\": {\n                      \"_deployed_by_amba\": true\n                    },\n                    \"properties\": {\n                      \"description\": \"Metric Alert for App Service Plan Http Queue Length\",\n                      \"severity\": \"[[parameters('severity')]\",\n                      \"enabled\": \"[[parameters('enabled')]\",\n                      \"scopes\": [\n                        \"[[parameters('resourceId')]\"\n                      ],\n                      \"evaluationFrequency\": \"[[parameters('evaluationFrequency')]\",\n                      \"windowSize\": \"[[parameters('windowSize')]\",\n                      \"criteria\": {\n                        \"allOf\": [\n                          {\n                            \"alertSensitivity\": \"Medium\",\n                            \"failingPeriods\": {\n                              \"numberOfEvaluationPeriods\": \"[[parameters('evaluationPeriods')]\",\n                              \"minFailingPeriodsToAlert\": \"[[parameters('failingPeriods')]\"\n                            },\n                            \"name\": \"ServiceApiResult\",\n                            \"metricNamespace\": \"Microsoft.Web/serverfarms\",\n                            \"metricName\": \"HttpQueueLength\",\n                            \"operator\": \"GreaterThan\",\n                            \"timeAggregation\": \"Average\",\n                            \"criterionType\": \"DynamicThresholdCriterion\"\n                          }\n                        ],\n                        \"odata.type\": \"Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria\"\n                      },\n                      \"autoMitigate\": \"[[parameters('autoMitigate')]\",\n                      \"parameters\": {\n                        \"severity\": {\n                          \"value\": \"[[parameters('severity')]\"\n                        },\n                        \"windowSize\": {\n                          \"value\": \"[[parameters('windowSize')]\"\n                        },\n                        \"evaluationFrequency\": {\n                          \"value\": \"[[parameters('evaluationFrequency')]\"\n                        },\n                        \"autoMitigate\": {\n                          \"value\": \"[[parameters('autoMitigate')]\"\n                        },\n                        \"enabled\": {\n                          \"value\": \"[[parameters('enabled')]\"\n                        },\n                        \"failingPeriods\": {\n                          \"value\": \"[[parameters('failingPeriods')]\"\n                        },\n                        \"evaluationPeriods\": {\n                          \"value\": \"[[parameters('evaluationPeriods')]\"\n                        }\n                      }\n                    }\n                  }\n                ]\n              },\n              \"parameters\": {\n                \"resourceName\": {\n                  \"value\": \"[[field('name')]\"\n                },\n                \"resourceId\": {\n                  \"value\": \"[[field('id')]\"\n                },\n                \"severity\": {\n                  \"value\": \"[[parameters('severity')]\"\n                },\n                \"windowSize\": {\n                  \"value\": \"[[parameters('windowSize')]\"\n                },\n                \"evaluationFrequency\": {\n                  \"value\": \"[[parameters('evaluationFrequency')]\"\n                },\n                \"autoMitigate\": {\n                  \"value\": \"[[parameters('autoMitigate')]\"\n                },\n                \"enabled\": {\n                  \"value\": \"[[parameters('enabled')]\"\n                },\n                \"failingPeriods\": {\n                  \"value\": \"[[parameters('failingPeriods')]\"\n                },\n                \"evaluationPeriods\": {\n                  \"value\": \"[[parameters('evaluationPeriods')]\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
    "$fxv#3": "{\n  \"type\": \"Microsoft.Authorization/policyDefinitions\",\n  \"apiVersion\": \"2021-06-01\",\n  \"name\": \"Deploy_WSF_MemoryPercentage_Alert\",\n  \"properties\": {\n    \"policyType\": \"Custom\",\n    \"mode\": \"All\",\n    \"displayName\": \"Deploy Azure Monitor Baseline Alerts (AMBA-ALZ) - App Service Plan Memory Percentage Alert\",\n    \"description\": \"Policy to audit/deploy App Service Plan Memory Percentage  Alert\",\n    \"metadata\": {\n      \"version\": \"1.2.2\",\n      \"category\": \"Web Services\",\n      \"source\": \"https://github.com/Azure/azure-monitor-baseline-alerts/\",\n      \"_deployed_by_amba\": \"True\"\n    },\n    \"parameters\": {\n      \"severity\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Severity\",\n          \"description\": \"Severity of the Alert\"\n        },\n        \"allowedValues\": [\n          \"0\",\n          \"1\",\n          \"2\",\n          \"3\",\n          \"4\"\n        ],\n        \"defaultValue\": \"2\"\n      },\n      \"windowSize\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Window Size\",\n          \"description\": \"Window size for the alert\"\n        },\n        \"allowedValues\": [\n          \"PT1M\",\n          \"PT5M\",\n          \"PT15M\",\n          \"PT30M\",\n          \"PT1H\",\n          \"PT6H\",\n          \"PT12H\",\n          \"P1D\"\n        ],\n        \"defaultValue\": \"PT5M\"\n      },\n      \"evaluationFrequency\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Evaluation Frequency\",\n          \"description\": \"Evaluation frequency for the alert\"\n        },\n        \"allowedValues\": [\n          \"PT1M\",\n          \"PT5M\",\n          \"PT15M\",\n          \"PT30M\",\n          \"PT1H\"\n        ],\n        \"defaultValue\": \"PT5M\"\n      },\n      \"autoMitigate\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Auto Mitigate\",\n          \"description\": \"Auto Mitigate for the alert\"\n        },\n        \"allowedValues\": [\n          \"true\",\n          \"false\"\n        ],\n        \"defaultValue\": \"true\"\n      },\n      \"enabled\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Alert State\",\n          \"description\": \"Alert state for the alert\"\n        },\n        \"allowedValues\": [\n          \"true\",\n          \"false\"\n        ],\n        \"defaultValue\": \"true\"\n      },\n      \"threshold\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Threshold\",\n          \"description\": \"Threshold for the alert\"\n        },\n        \"defaultValue\": \"85\"\n      },\n      \"effect\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Effect\",\n          \"description\": \"Effect of the policy\"\n        },\n        \"allowedValues\": [\n          \"deployIfNotExists\",\n          \"disabled\"\n        ],\n        \"defaultValue\": \"deployIfNotExists\"\n      },\n      \"MonitorDisableTagName\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"ALZ Monitoring disabled tag name\",\n          \"description\": \"Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.\"\n        },\n        \"defaultValue\": \"MonitorDisable\"\n      },\n      \"MonitorDisableTagValues\": {\n        \"type\": \"Array\",\n        \"metadata\": {\n          \"displayName\": \"ALZ Monitoring disabled tag values(s)\",\n          \"description\": \"Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.\"\n        },\n        \"defaultValue\": [\n          \"true\",\n          \"Test\",\n          \"Dev\",\n          \"Sandbox\"\n        ]\n      }\n    },\n    \"policyRule\": {\n      \"if\": {\n        \"allOf\": [\n          {\n            \"field\": \"type\",\n            \"equals\": \"Microsoft.Web/serverfarms\"\n          },\n          {\n            \"field\": \"[[concat('tags[', parameters('MonitorDisableTagName'), ']')]\",\n            \"notIn\": \"[[parameters('MonitorDisableTagValues')]\"\n          }\n        ]\n      },\n      \"then\": {\n        \"effect\": \"[[parameters('effect')]\",\n        \"details\": {\n          \"roleDefinitionIds\": [\n            \"/providers/Microsoft.Authorization/roleDefinitions/47be4a87-7950-4631-9daf-b664a405f074\"\n          ],\n          \"type\": \"Microsoft.Insights/metricAlerts\",\n          \"existenceCondition\": {\n            \"allOf\": [\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricNamespace\",\n                \"equals\": \"Microsoft.Web/serverfarms\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].metricName\",\n                \"equals\": \"MemoryPercentage\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricalerts/scopes[*]\",\n                \"equals\": \"[[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', field('fullName'))]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/enabled\",\n                \"equals\": \"[[parameters('enabled')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/evaluationFrequency\",\n                \"equals\": \"[[parameters('evaluationFrequency')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/windowSize\",\n                \"equals\": \"[[parameters('windowSize')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricalerts/severity\",\n                \"equals\": \"[[parameters('severity')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/autoMitigate\",\n                \"equals\": \"[[parameters('autoMitigate')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft-Azure-Monitor-SingleResourceMultipleMetricCriteria.allOf[*].timeAggregation\",\n                \"equals\": \"Average\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.operator\",\n                \"equals\": \"GreaterThan\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/metricAlerts/criteria.Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria.allOf[*].StaticThresholdCriterion.threshold\",\n                \"equals\": \"[[if(contains(field('tags'), '_amba-MemoryPercentage-threshold-Override_'), field('tags._amba-MemoryPercentage-threshold-Override_'), parameters('threshold'))]\"\n              }\n            ]\n          },\n          \"deployment\": {\n            \"properties\": {\n              \"mode\": \"incremental\",\n              \"template\": {\n                \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n                \"contentVersion\": \"1.0.0.0\",\n                \"parameters\": {\n                  \"resourceName\": {\n                    \"type\": \"String\",\n                    \"metadata\": {\n                      \"displayName\": \"resourceName\",\n                      \"description\": \"Name of the resource\"\n                    }\n                  },\n                  \"resourceId\": {\n                    \"type\": \"String\",\n                    \"metadata\": {\n                      \"displayName\": \"resourceId\",\n                      \"description\": \"Resource ID of the resource emitting the metric that will be used for the comparison\"\n                    }\n                  },\n                  \"severity\": {\n                    \"type\": \"String\"\n                  },\n                  \"windowSize\": {\n                    \"type\": \"String\"\n                  },\n                  \"evaluationFrequency\": {\n                    \"type\": \"String\"\n                  },\n                  \"autoMitigate\": {\n                    \"type\": \"String\"\n                  },\n                  \"enabled\": {\n                    \"type\": \"String\"\n                  },\n                  \"threshold\": {\n                    \"type\": \"String\"\n                  }\n                },\n                \"variables\": {},\n                \"resources\": [\n                  {\n                    \"type\": \"Microsoft.Insights/metricAlerts\",\n                    \"apiVersion\": \"2018-03-01\",\n                    \"name\": \"[[concat(parameters('resourceName'), '-MemoryPercentage')]\",\n                    \"location\": \"global\",\n                    \"tags\": {\n                      \"_deployed_by_amba\": true\n                    },\n                    \"properties\": {\n                      \"description\": \"Metric Alert for App Service Plan Memory Percentage\",\n                      \"severity\": \"[[parameters('severity')]\",\n                      \"enabled\": \"[[parameters('enabled')]\",\n                      \"scopes\": [\n                        \"[[parameters('resourceId')]\"\n                      ],\n                      \"evaluationFrequency\": \"[[parameters('evaluationFrequency')]\",\n                      \"windowSize\": \"[[parameters('windowSize')]\",\n                      \"criteria\": {\n                        \"allOf\": [\n                          {\n                            \"name\": \"MemoryPercentage\",\n                            \"metricNamespace\": \"Microsoft.Web/serverfarms\",\n                            \"metricName\": \"MemoryPercentage\",\n                            \"operator\": \"GreaterThan\",\n                            \"threshold\": \"[[parameters('threshold')]\",\n                            \"timeAggregation\": \"Average\",\n                            \"criterionType\": \"StaticThresholdCriterion\"\n                          }\n                        ],\n                        \"odata.type\": \"Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria\"\n                      },\n                      \"autoMitigate\": \"[[parameters('autoMitigate')]\",\n                      \"parameters\": {\n                        \"severity\": {\n                          \"value\": \"[[parameters('severity')]\"\n                        },\n                        \"windowSize\": {\n                          \"value\": \"[[parameters('windowSize')]\"\n                        },\n                        \"evaluationFrequency\": {\n                          \"value\": \"[[parameters('evaluationFrequency')]\"\n                        },\n                        \"autoMitigate\": {\n                          \"value\": \"[[parameters('autoMitigate')]\"\n                        },\n                        \"enabled\": {\n                          \"value\": \"[[parameters('enabled')]\"\n                        },\n                        \"threshold\": {\n                          \"value\": \"[[parameters('threshold')]\"\n                        }\n                      }\n                    }\n                  }\n                ]\n              },\n              \"parameters\": {\n                \"resourceName\": {\n                  \"value\": \"[[field('name')]\"\n                },\n                \"resourceId\": {\n                  \"value\": \"[[field('id')]\"\n                },\n                \"severity\": {\n                  \"value\": \"[[parameters('severity')]\"\n                },\n                \"windowSize\": {\n                  \"value\": \"[[parameters('windowSize')]\"\n                },\n                \"evaluationFrequency\": {\n                  \"value\": \"[[parameters('evaluationFrequency')]\"\n                },\n                \"autoMitigate\": {\n                  \"value\": \"[[parameters('autoMitigate')]\"\n                },\n                \"enabled\": {\n                  \"value\": \"[[parameters('enabled')]\"\n                },\n                \"threshold\": {\n                  \"value\": \"[[if(contains(field('tags'), '_amba-MemoryPercentage-threshold-Override_'), field('tags._amba-MemoryPercentage-threshold-Override_'), parameters('threshold'))]\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
    "$fxv#4": "{\n  \"type\": \"Microsoft.Authorization/policyDefinitions\",\n  \"apiVersion\": \"2021-06-01\",\n  \"name\": \"Deploy_AppInsightsThrottlingLimit_Alert\",\n  \"properties\": {\n    \"policyType\": \"Custom\",\n    \"mode\": \"All\",\n    \"displayName\": \"Deploy Azure Monitor Baseline Alerts (AMBA-ALZ) - Application Insights Throttling Limit Reached Alert\",\n    \"description\": \"Policy to audit/deploy Application Insights Throttling Limit Reached Alert\",\n    \"metadata\": {\n      \"version\": \"1.2.2\",\n      \"category\": \"Monitoring\",\n      \"source\": \"https://github.com/Azure/azure-monitor-baseline-alerts/\",\n      \"alzCloudEnvironments\": [\n        \"AzureCloud\"\n      ],\n      \"_deployed_by_amba\": \"True\"\n    },\n    \"parameters\": {\n      \"UAMIResourceId\": {\n        \"type\": \"string\",\n        \"defaultValue\": \"\",\n        \"metadata\": {\n          \"description\": \"The resource Id of the user assigned managed identity.\",\n          \"displayName\": \"User Assigned managed Identity resource Id.\"\n        }\n      },\n      \"severity\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Severity\",\n          \"description\": \"Severity of the Alert\"\n        },\n        \"allowedValues\": [\n          \"0\",\n          \"1\",\n          \"2\",\n          \"3\",\n          \"4\"\n        ],\n        \"defaultValue\": \"2\"\n      },\n      \"operator\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Operator\"\n        },\n        \"allowedValues\": [\n          \"GreaterThan\",\n          \"GreaterThanOrEqual\"\n        ],\n        \"defaultValue\": \"GreaterThan\"\n      },\n      \"timeAggregation\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"TimeAggregation\"\n        },\n        \"allowedValues\": [\n          \"Count\"\n        ],\n        \"defaultValue\": \"Count\"\n      },\n      \"windowSize\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Window Size\",\n          \"description\": \"Window size for the alert\"\n        },\n        \"allowedValues\": [\n          \"PT1M\",\n          \"PT5M\",\n          \"PT10M\",\n          \"PT15M\",\n          \"PT30M\",\n          \"PT45M\",\n          \"PT1H\",\n          \"PT2H\",\n          \"PT3H\",\n          \"PT4H\",\n          \"PT5H\",\n          \"PT6H\",\n          \"P1D\"\n        ],\n        \"defaultValue\": \"P1D\"\n      },\n      \"evaluationFrequency\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Evaluation Frequency\",\n          \"description\": \"Evaluation frequency for the alert\"\n        },\n        \"allowedValues\": [\n          \"PT5M\",\n          \"PT10M\",\n          \"PT15M\",\n          \"PT30M\",\n          \"PT45M\",\n          \"PT1H\",\n          \"PT2H\",\n          \"PT3H\",\n          \"PT4H\",\n          \"PT5H\",\n          \"PT6H\",\n          \"P1D\"\n        ],\n        \"defaultValue\": \"PT1H\"\n      },\n      \"autoMitigate\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Auto Mitigate\",\n          \"description\": \"Auto Mitigate for the alert\"\n        },\n        \"allowedValues\": [\n          \"true\",\n          \"false\"\n        ],\n        \"defaultValue\": \"true\"\n      },\n      \"checkWorkspaceAlertsStorageConfigured\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Require a workspace linked storage\",\n          \"description\": \"Don't create the alert rule if the Log Analytics workspace doesn't have a configured linked storage account (relevant if you're using Customer Managed Keys).\"\n        },\n        \"allowedValues\": [\n          \"true\",\n          \"false\"\n        ],\n        \"defaultValue\": \"false\"\n      },\n      \"enabled\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Alert State\",\n          \"description\": \"Alert state for the alert\"\n        },\n        \"allowedValues\": [\n          \"true\",\n          \"false\"\n        ],\n        \"defaultValue\": \"true\"\n      },\n      \"threshold\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Threshold\",\n          \"description\": \"Threshold for the alert\"\n        },\n        \"defaultValue\": \"32000\"\n      },\n      \"failingPeriods\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Failing Periods\",\n          \"description\": \"Number of failing periods before alert is fired\"\n        },\n        \"defaultValue\": \"1\"\n      },\n      \"evaluationPeriods\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Evaluation Periods\",\n          \"description\": \"The number of aggregated lookback points.\"\n        },\n        \"defaultValue\": \"1\"\n      },\n      \"effect\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Effect\",\n          \"description\": \"Effect of the policy\"\n        },\n        \"allowedValues\": [\n          \"deployIfNotExists\",\n          \"disabled\"\n        ],\n        \"defaultValue\": \"deployIfNotExists\"\n      },\n      \"MonitorDisableTagName\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"ALZ Monitoring disabled tag name\",\n          \"description\": \"Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.\"\n        },\n        \"defaultValue\": \"MonitorDisable\"\n      },\n      \"MonitorDisableTagValues\": {\n        \"type\": \"Array\",\n        \"metadata\": {\n          \"displayName\": \"ALZ Monitoring disabled tag values(s)\",\n          \"description\": \"Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.\"\n        },\n        \"defaultValue\": [\n          \"true\",\n          \"Test\",\n          \"Dev\",\n          \"Sandbox\"\n        ]\n      }\n    },\n    \"policyRule\": {\n      \"if\": {\n        \"allOf\": [\n          {\n            \"field\": \"type\",\n            \"equals\": \"Microsoft.Insights/components\"\n          },\n          {\n            \"field\": \"[[concat('tags[', parameters('MonitorDisableTagName'), ']')]\",\n            \"notIn\": \"[[parameters('MonitorDisableTagValues')]\"\n          }\n        ]\n      },\n      \"then\": {\n        \"effect\": \"[[parameters('effect')]\",\n        \"details\": {\n          \"roleDefinitionIds\": [\n            \"/providers/Microsoft.Authorization/roleDefinitions/47be4a87-7950-4631-9daf-b664a405f074\"\n          ],\n          \"type\": \"Microsoft.Insights/scheduledQueryRules\",\n          \"existenceCondition\": {\n            \"allOf\": [\n              {\n                \"field\": \"Microsoft.Insights/scheduledQueryRules/enabled\",\n                \"equals\": \"[[parameters('enabled')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/scheduledQueryRules/evaluationFrequency\",\n                \"equals\": \"[[parameters('evaluationFrequency')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/scheduledQueryRules/windowSize\",\n                \"equals\": \"[[parameters('windowSize')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/scheduledQueryRules/severity\",\n                \"equals\": \"[[parameters('severity')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/scheduledQueryRules/autoMitigate\",\n                \"equals\": \"[[parameters('autoMitigate')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/scheduledQueryRules/checkWorkspaceAlertsStorageConfigured\",\n                \"equals\": \"[[parameters('checkWorkspaceAlertsStorageConfigured')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].threshold\",\n                \"equals\": 0\n              },\n              {\n                \"field\": \"Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].operator\",\n                \"equals\": \"[[parameters('operator')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].timeAggregation\",\n                \"equals\": \"[[parameters('timeAggregation')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.numberOfEvaluationPeriods\",\n                \"equals\": \"[[parameters('evaluationPeriods')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].failingPeriods.minFailingPeriodsToAlert\",\n                \"equals\": \"[[parameters('failingPeriods')]\"\n              },\n              {\n                \"field\": \"Microsoft.Insights/scheduledQueryRules/criteria.allOf[*].query\",\n                \"equals\": \"[[format('let policyThresholdString = \\\"{0}\\\"; let resourceTagging = (arg(\\\"\\\").resources | where type =~ \\\"Microsoft.Insights/components\\\" | where tags.[\\\"{1}\\\"] !in~ (\\\"{2}\\\") | project _ResourceId = tolower(id), resourceTags = tags, name); AppSystemEvents | where _ResourceId =~ \\\"{3}\\\" | summarize numOfEvents = sum(toint(Measurements[\\\"BillingTelemetryCount\\\"])) by _ResourceId, Type, bin(TimeGenerated, 1h) | join hint.remote=left kind=inner resourceTagging on _ResourceId | project-away _ResourceId1 | extend newThresholdString = tostring(resourceTags.[\\\"{4}\\\"]) | extend appliedThreshold = iif(isempty(newThresholdString), toint(policyThresholdString), toint(newThresholdString)) | where numOfEvents > appliedThreshold | project TimeGenerated, _ResourceId, name, numOfEvents', parameters('threshold'), parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\\\",\\\"'), field('id'), '_amba-Throttling-threshold-override_')]\"\n              },\n              {\n                \"field\": \"identity.userAssignedIdentities\",\n                \"containsKey\": \"[[parameters('UAMIResourceId')]\"\n              }\n            ]\n          },\n          \"deployment\": {\n            \"properties\": {\n              \"mode\": \"incremental\",\n              \"template\": {\n                \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n                \"contentVersion\": \"1.0.0.0\",\n                \"parameters\": {\n                  \"resourceName\": {\n                    \"type\": \"String\",\n                    \"metadata\": {\n                      \"displayName\": \"resourceName\",\n                      \"description\": \"Name of the resource\"\n                    }\n                  },\n                  \"resourceId\": {\n                    \"type\": \"String\",\n                    \"metadata\": {\n                      \"displayName\": \"resourceId\",\n                      \"description\": \"Resource ID of the resource emitting the metric that will be used for the comparison\"\n                    }\n                  },\n                  \"resourceLocation\": {\n                    \"type\": \"String\",\n                    \"metadata\": {\n                      \"displayName\": \"resourceLocation\",\n                      \"description\": \"Location of the resource\"\n                    }\n                  },\n                  \"UAMIResourceId\": {\n                    \"type\": \"string\"\n                  },\n                  \"severity\": {\n                    \"type\": \"String\"\n                  },\n                  \"windowSize\": {\n                    \"type\": \"String\"\n                  },\n                  \"evaluationFrequency\": {\n                    \"type\": \"String\"\n                  },\n                  \"autoMitigate\": {\n                    \"type\": \"String\"\n                  },\n                  \"checkWorkspaceAlertsStorageConfigured\": {\n                    \"type\": \"String\"\n                  },\n                  \"enabled\": {\n                    \"type\": \"String\"\n                  },\n                  \"threshold\": {\n                    \"type\": \"String\"\n                  },\n                  \"operator\": {\n                    \"type\": \"String\"\n                  },\n                  \"timeAggregation\": {\n                    \"type\": \"String\"\n                  },\n                  \"failingPeriods\": {\n                    \"type\": \"String\"\n                  },\n                  \"evaluationPeriods\": {\n                    \"type\": \"String\"\n                  },\n                  \"MonitorDisableTagName\": {\n                    \"type\": \"String\"\n                  },\n                  \"MonitorDisableTagValues\": {\n                    \"type\": \"Array\"\n                  }\n                },\n                \"variables\": {},\n                \"resources\": [\n                  {\n                    \"type\": \"Microsoft.Insights/scheduledQueryRules\",\n                    \"apiVersion\": \"2022-08-01-preview\",\n                    \"name\": \"[[concat(parameters('resourceName'), '-ApplicationInsightsThrottlingLimitReachedAlert')]\",\n                    \"location\": \"[[parameters('resourceLocation')]\",\n                    \"identity\": {\n                      \"type\": \"UserAssigned\",\n                      \"userAssignedIdentities\": {\n                        \"[[parameters('UAMIResourceId')]\": {}\n                      }\n                    },\n                    \"tags\": {\n                      \"_deployed_by_amba\": true\n                    },\n                    \"properties\": {\n                      \"displayName\": \"[[concat(parameters('resourceName'), '-Application Insights Throttling Limit Reached')]\",\n                      \"description\": \"Log Alert for Application Insights Throttling Limit Reached\",\n                      \"severity\": \"[[parameters('severity')]\",\n                      \"enabled\": \"[[parameters('enabled')]\",\n                      \"scopes\": [\n                        \"[[reference(parameters('resourceId'),'2020-02-02').WorkspaceResourceId]\"\n                      ],\n                      \"evaluationFrequency\": \"[[parameters('evaluationFrequency')]\",\n                      \"windowSize\": \"[[parameters('windowSize')]\",\n                      \"criteria\": {\n                        \"allOf\": [\n                          {\n                            \"query\": \"[[format('let policyThresholdString = \\\"{0}\\\"; let resourceTagging = (arg(\\\"\\\").resources | where type =~ \\\"Microsoft.Insights/components\\\" | where tags.[\\\"{1}\\\"] !in~ (\\\"{2}\\\") | project _ResourceId = tolower(id), resourceTags = tags, name); AppSystemEvents | where _ResourceId =~ \\\"{3}\\\" | summarize numOfEvents = sum(toint(Measurements[\\\"BillingTelemetryCount\\\"])) by _ResourceId, Type, bin(TimeGenerated, 1h) | join hint.remote=left kind=inner resourceTagging on _ResourceId | project-away _ResourceId1 | extend newThresholdString = tostring(resourceTags.[\\\"{4}\\\"]) | extend appliedThreshold = iif(isempty(newThresholdString), toint(policyThresholdString), toint(newThresholdString)) | where numOfEvents > appliedThreshold | project TimeGenerated, _ResourceId, name, numOfEvents', parameters('threshold'), parameters('MonitorDisableTagName'), join(parameters('MonitorDisableTagValues'), '\\\",\\\"'), parameters('resourceId'), '_amba-Throttling-threshold-override_')]\",\n                            \"threshold\": 0,\n                            \"operator\": \"[[parameters('operator')]\",\n                            \"dimensions\": [\n                              {\n                                \"name\": \"name\",\n                                \"operator\": \"Include\",\n                                \"values\": [\n                                  \"*\"\n                                ]\n                              }\n                            ],\n                            \"resourceIdColumn\": \"_ResourceId\",\n                            \"timeAggregation\": \"[[parameters('timeAggregation')]\",\n                            \"failingPeriods\": {\n                              \"numberOfEvaluationPeriods\": \"[[parameters('evaluationPeriods')]\",\n                              \"minFailingPeriodsToAlert\": \"[[parameters('failingPeriods')]\"\n                            }\n                          }\n                        ]\n                      },\n                      \"autoMitigate\": \"[[parameters('autoMitigate')]\",\n                      \"checkWorkspaceAlertsStorageConfigured\": \"[[parameters('checkWorkspaceAlertsStorageConfigured')]\",\n                      \"parameters\": {\n                        \"UAMIResourceId\": {\n                          \"value\": \"[[parameters('UAMIResourceId')]\"\n                        },\n                        \"severity\": {\n                          \"value\": \"[[parameters('severity')]\"\n                        },\n                        \"windowSize\": {\n                          \"value\": \"[[parameters('windowSize')]\"\n                        },\n                        \"evaluationFrequency\": {\n                          \"value\": \"[[parameters('evaluationFrequency')]\"\n                        },\n                        \"autoMitigate\": {\n                          \"value\": \"[[parameters('autoMitigate')]\"\n                        },\n                        \"checkWorkspaceAlertsStorageConfigured\": {\n                          \"value\": \"[[parameters('checkWorkspaceAlertsStorageConfigured')]\"\n                        },\n                        \"enabled\": {\n                          \"value\": \"[[parameters('enabled')]\"\n                        },\n                        \"threshold\": {\n                          \"value\": \"[[parameters('threshold')]\"\n                        },\n                        \"operator\": {\n                          \"value\": \"[[parameters('operator')]\"\n                        },\n                        \"timeAggregation\": {\n                          \"value\": \"[[parameters('timeAggregation')]\"\n                        },\n                        \"failingPeriods\": {\n                          \"value\": \"[[parameters('failingPeriods')]\"\n                        },\n                        \"evaluationPeriods\": {\n                          \"value\": \"[[parameters('evaluationPeriods')]\"\n                        },\n                        \"MonitorDisableTagName\": {\n                          \"value\": \"[[parameters('MonitorDisableTagName')]\"\n                        },\n                        \"MonitorDisableTagValues\": {\n                          \"value\": \"[[parameters('MonitorDisableTagValues')]\"\n                        }\n                      }\n                    }\n                  }\n                ]\n              },\n              \"parameters\": {\n                \"resourceName\": {\n                  \"value\": \"[[field('name')]\"\n                },\n                \"resourceId\": {\n                  \"value\": \"[[field('id')]\"\n                },\n                \"resourceLocation\": {\n                  \"value\": \"[[field('location')]\"\n                },\n                \"UAMIResourceId\": {\n                  \"value\": \"[[parameters('UAMIResourceId')]\"\n                },\n                \"severity\": {\n                  \"value\": \"[[parameters('severity')]\"\n                },\n                \"windowSize\": {\n                  \"value\": \"[[parameters('windowSize')]\"\n                },\n                \"evaluationFrequency\": {\n                  \"value\": \"[[parameters('evaluationFrequency')]\"\n                },\n                \"autoMitigate\": {\n                  \"value\": \"[[parameters('autoMitigate')]\"\n                },\n                \"checkWorkspaceAlertsStorageConfigured\": {\n                  \"value\": \"[[parameters('checkWorkspaceAlertsStorageConfigured')]\"\n                },\n                \"enabled\": {\n                  \"value\": \"[[parameters('enabled')]\"\n                },\n                \"threshold\": {\n                  \"value\": \"[[parameters('threshold')]\"\n                },\n                \"operator\": {\n                  \"value\": \"[[parameters('operator')]\"\n                },\n                \"timeAggregation\": {\n                  \"value\": \"[[parameters('timeAggregation')]\"\n                },\n                \"failingPeriods\": {\n                  \"value\": \"[[parameters('failingPeriods')]\"\n                },\n                \"evaluationPeriods\": {\n                  \"value\": \"[[parameters('evaluationPeriods')]\"\n                },\n                \"MonitorDisableTagName\": {\n                  \"value\": \"[[parameters('MonitorDisableTagName')]\"\n                },\n                \"MonitorDisableTagValues\": {\n                  \"value\": \"[[parameters('MonitorDisableTagValues')]\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
    "$fxv#5": "{\n  \"type\": \"Microsoft.Authorization/policyDefinitions\",\n  \"apiVersion\": \"2021-06-01\",\n  \"name\": \"Deploy_ActivityLog_AppInsights_Delete\",\n  \"properties\": {\n    \"policyType\": \"Custom\",\n    \"mode\": \"All\",\n    \"displayName\": \"Deploy Azure Monitor Baseline Alerts (AMBA-ALZ) - Activity Log Application Insights Delete Alert\",\n    \"description\": \"Policy to Deploy Activity Log Application Insights Delete Alert\",\n    \"metadata\": {\n      \"version\": \"1.0.2\",\n      \"category\": \"Monitoring\",\n      \"source\": \"https://github.com/Azure/azure-monitor-baseline-alerts/\",\n      \"alzCloudEnvironments\": [\n        \"AzureCloud\"\n      ],\n      \"_deployed_by_amba\": \"True\"\n    },\n    \"parameters\": {\n      \"enabled\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Alert State\",\n          \"description\": \"Alert state for the alert\"\n        },\n        \"allowedValues\": [\n          \"true\",\n          \"false\"\n        ],\n        \"defaultValue\": \"true\"\n      },\n      \"alertResourceGroupName\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Resource Group Name\",\n          \"description\": \"Resource group the alert is placed in\"\n        },\n        \"defaultValue\": \"rg-amba-monitoring-001\"\n      },\n      \"alertResourceGroupTags\": {\n        \"type\": \"Object\",\n        \"metadata\": {\n          \"displayName\": \"Resource Group Tags\",\n          \"description\": \"Tags on the Resource group the alert is placed in\"\n        },\n        \"defaultValue\": {\n          \"_deployed_by_amba\": true\n        }\n      },\n      \"alertResourceGroupLocation\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Resource Group Location\",\n          \"description\": \"Location of the Resource group the alert is placed in\"\n        },\n        \"defaultValue\": \"centralus\"\n      },\n      \"effect\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"Effect\",\n          \"description\": \"Effect of the policy\"\n        },\n        \"allowedValues\": [\n          \"deployIfNotExists\",\n          \"disabled\"\n        ],\n        \"defaultValue\": \"deployIfNotExists\"\n      },\n      \"MonitorDisableTagName\": {\n        \"type\": \"String\",\n        \"metadata\": {\n          \"displayName\": \"ALZ Monitoring disabled tag name\",\n          \"description\": \"Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled.\"\n        },\n        \"defaultValue\": \"MonitorDisable\"\n      },\n      \"MonitorDisableTagValues\": {\n        \"type\": \"Array\",\n        \"metadata\": {\n          \"displayName\": \"ALZ Monitoring disabled tag values(s)\",\n          \"description\": \"Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled.\"\n        },\n        \"defaultValue\": [\n          \"true\",\n          \"Test\",\n          \"Dev\",\n          \"Sandbox\"\n        ]\n      }\n    },\n    \"policyRule\": {\n      \"if\": {\n        \"allOf\": [\n          {\n            \"field\": \"type\",\n            \"equals\": \"microsoft.insights/components\"\n          },\n          {\n            \"field\": \"[[concat('tags[', parameters('MonitorDisableTagName'), ']')]\",\n            \"notIn\": \"[[parameters('MonitorDisableTagValues')]\"\n          }\n        ]\n      },\n      \"then\": {\n        \"effect\": \"[[parameters('effect')]\",\n        \"details\": {\n          \"roleDefinitionIds\": [\n            \"/providers/Microsoft.Authorization/roleDefinitions/47be4a87-7950-4631-9daf-b664a405f074\"\n          ],\n          \"type\": \"Microsoft.Insights/activityLogAlerts\",\n          \"name\": \"ActivityAppInsightsDelete\",\n          \"existenceScope\": \"resourcegroup\",\n          \"resourceGroupName\": \"[[parameters('alertResourceGroupName')]\",\n          \"deploymentScope\": \"subscription\",\n          \"existenceCondition\": {\n            \"allOf\": [\n              {\n                \"field\": \"Microsoft.Insights/ActivityLogAlerts/enabled\",\n                \"equals\": \"[[parameters('enabled')]\"\n              },\n              {\n                \"count\": {\n                  \"field\": \"Microsoft.Insights/ActivityLogAlerts/condition.allOf[*]\",\n                  \"where\": {\n                    \"anyOf\": [\n                      {\n                        \"allOf\": [\n                          {\n                            \"field\": \"Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].field\",\n                            \"equals\": \"category\"\n                          },\n                          {\n                            \"field\": \"Microsoft.Insights/ActivityLogAlerts/condition.allOf[*].equals\",\n                            \"equals\": \"Administrative\"\n                          }\n                        ]\n                      },\n                      {\n                        \"allOf\": [\n                          {\n                            \"field\": \"microsoft.insights/activityLogAlerts/condition.allOf[*].field\",\n                            \"equals\": \"operationName\"\n                          },\n                          {\n                            \"field\": \"microsoft.insights/activityLogAlerts/condition.allOf[*].equals\",\n                            \"equals\": \"Microsoft.Insights/Components/Delete\"\n                          }\n                        ]\n                      }\n                    ]\n                  }\n                },\n                \"equals\": 2\n              }\n            ]\n          },\n          \"deployment\": {\n            \"location\": \"northeurope\",\n            \"properties\": {\n              \"mode\": \"incremental\",\n              \"template\": {\n                \"$schema\": \"https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#\",\n                \"contentVersion\": \"1.0.0.0\",\n                \"parameters\": {\n                  \"alertResourceGroupName\": {\n                    \"type\": \"string\"\n                  },\n                  \"alertResourceGroupTags\": {\n                    \"type\": \"object\"\n                  },\n                  \"alertResourceGroupLocation\": {\n                    \"type\": \"string\"\n                  },\n                  \"enabled\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"variables\": {},\n                \"resources\": [\n                  {\n                    \"type\": \"Microsoft.Resources/resourceGroups\",\n                    \"apiVersion\": \"2021-04-01\",\n                    \"name\": \"[[parameters('alertResourceGroupName')]\",\n                    \"location\": \"[[parameters('alertResourceGroupLocation')]\",\n                    \"tags\": \"[[parameters('alertResourceGroupTags')]\"\n                  },\n                  {\n                    \"type\": \"Microsoft.Resources/deployments\",\n                    \"apiVersion\": \"2019-10-01\",\n                    \"name\": \"ActivityAppInsightsDeleteAlert\",\n                    \"resourceGroup\": \"[[parameters('alertResourceGroupName')]\",\n                    \"dependsOn\": [\n                      \"[[concat('Microsoft.Resources/resourceGroups/', parameters('alertResourceGroupName'))]\"\n                    ],\n                    \"properties\": {\n                      \"mode\": \"Incremental\",\n                      \"template\": {\n                        \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",\n                        \"contentVersion\": \"1.0.0.0\",\n                        \"parameters\": {\n                          \"enabled\": {\n                            \"type\": \"string\"\n                          },\n                          \"alertResourceGroupName\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"variables\": {},\n                        \"resources\": [\n                          {\n                            \"type\": \"microsoft.insights/activityLogAlerts\",\n                            \"apiVersion\": \"2020-10-01\",\n                            \"name\": \"ActivityAppInsightsDelete\",\n                            \"location\": \"global\",\n                            \"tags\": {\n                              \"_deployed_by_amba\": true\n                            },\n                            \"properties\": {\n                              \"displayName\": \"Application Insights Resource Delete Alert\",\n                              \"description\": \"Activity Log Application Insights Delete Alert\",\n                              \"enabled\": \"[[parameters('enabled')]\",\n                              \"scopes\": [\n                                \"[[subscription().id]\"\n                              ],\n                              \"condition\": {\n                                \"allOf\": [\n                                  {\n                                    \"field\": \"category\",\n                                    \"equals\": \"Administrative\"\n                                  },\n                                  {\n                                    \"field\": \"operationName\",\n                                    \"equals\": \"Microsoft.Insights/Components/Delete\"\n                                  },\n                                  {\n                                    \"field\": \"status\",\n                                    \"containsAny\": [\n                                      \"succeeded\"\n                                    ]\n                                  }\n                                ]\n                              },\n                              \"parameters\": {\n                                \"enabled\": {\n                                  \"value\": \"[[parameters('enabled')]\"\n                                }\n                              }\n                            }\n                          }\n                        ]\n                      },\n                      \"parameters\": {\n                        \"enabled\": {\n                          \"value\": \"[[parameters('enabled')]\"\n                        },\n                        \"alertResourceGroupName\": {\n                          \"value\": \"[[parameters('alertResourceGroupName')]\"\n                        }\n                      }\n                    }\n                  }\n                ]\n              },\n              \"parameters\": {\n                \"enabled\": {\n                  \"value\": \"[[parameters('enabled')]\"\n                },\n                \"alertResourceGroupName\": {\n                  \"value\": \"[[parameters('alertResourceGroupName')]\"\n                },\n                \"alertResourceGroupTags\": {\n                  \"value\": \"[[parameters('alertResourceGroupTags')]\"\n                },\n                \"alertResourceGroupLocation\": {\n                  \"value\": \"[[parameters('alertResourceGroupLocation')]\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
    "$fxv#6": {
      "type": "Microsoft.Authorization/policySetDefinitions",
      "apiVersion": "2021-06-01",
      "name": "Alerting-Web",
      "properties": {
        "displayName": "Deploy Azure Monitor Baseline Alerts (AMBA-ALZ) for Web",
        "description": "This initiative deploys Azure Monitor Baseline Alerts (AMBA-ALZ) to monitor Web Services such as App Services.",
        "metadata": {
          "version": "1.3.1",
          "category": "Monitoring",
          "source": "https://github.com/Azure/azure-monitor-baseline-alerts/",
          "alzCloudEnvironments": [
            "AzureCloud"
          ],
          "_deployed_by_amba": true
        },
        "parameters": {
          "ALZMonitorResourceGroupName": {
            "type": "String",
            "defaultValue": "rg-amba-monitoring-001",
            "metadata": {
              "displayName": "ALZ Monitoring Resource Group Name",
              "description": "Name of the resource group to deploy the ALZ monitoring resources to"
            }
          },
          "ALZMonitorResourceGroupTags": {
            "type": "Object",
            "defaultValue": {
              "_deployed_by_alz_monitor": true
            },
            "metadata": {
              "displayName": "ALZ Monitoring Resource Group Tags",
              "description": "Tags to apply to the resource group"
            }
          },
          "ALZMonitorResourceGroupLocation": {
            "type": "String",
            "defaultValue": "centralus",
            "metadata": {
              "displayName": "ALZ Monitoring Resource Group Location",
              "description": "Location of the resource group"
            }
          },
          "ALZMonitorDisableTagName": {
            "type": "String",
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag name",
              "description": "Tag name used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "defaultValue": "MonitorDisable"
          },
          "ALZMonitorDisableTagValues": {
            "type": "Array",
            "metadata": {
              "displayName": "ALZ Monitoring disabled tag values(s)",
              "description": "Tag value(s) used to disable monitoring at the resource level. Set to true if monitoring should be disabled."
            },
            "defaultValue": [
              "true",
              "Test",
              "Dev",
              "Sandbox"
            ]
          },
          "ALZUserAssignedManagedIdentityName": {
            "type": "string",
            "defaultValue": "id-AMBA-ARG-Reader-001",
            "metadata": {
              "description": "The name of the user assigned managed identity to be created for monitoring purpose.",
              "displayName": "Name of the user assigned managed identity to be created."
            }
          },
          "ALZManagementSubscriptionId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
              "description": "The subscription ID of the management subscription where the user assigned managed identity will be created."
            }
          },
          "BYOUserAssignedManagedIdentityResourceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
              "description": "The resource Id of the user assigned managed identity provided by the customer.",
              "displayName": "Customer defined User Assigned managed Identity resource Id."
            }
          },
          "WSFCPUPercentageAlertSeverity": {
            "type": "String",
            "defaultValue": "2",
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "metadata": {
              "displayName": "WSF CPU Percentage Alert Severity",
              "description": "Severity of the alert"
            }
          },
          "WSFCPUPercentageWindowSize": {
            "type": "string",
            "defaultValue": "PT5M",
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "metadata": {
              "displayName": "WSF CPU Percentage Window Size",
              "description": "Window size for the alert"
            }
          },
          "WSFCPUPercentageEvaluationFrequency": {
            "type": "string",
            "defaultValue": "PT1M",
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "metadata": {
              "displayName": "WSF CPU Percentage Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            }
          },
          "WSFCPUPercentagePolicyEffect": {
            "type": "string",
            "defaultValue": "deployIfNotExists",
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "metadata": {
              "displayName": "WSF CPU Percentage Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert"
            }
          },
          "WSFCPUPercentageAlertState": {
            "type": "string",
            "defaultValue": "true",
            "metadata": {
              "displayName": "WSF CPU Percentage Alert State",
              "description": "Alert state for the alert"
            }
          },
          "WSFCPUPercentageThreshold": {
            "type": "string",
            "defaultValue": "90",
            "metadata": {
              "displayName": "WSF CPU Percentage Threshold",
              "description": "Threshold for the alert"
            }
          },
          "WSFMemoryPercentageAlertSeverity": {
            "type": "String",
            "defaultValue": "2",
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "metadata": {
              "displayName": "WSF Memory Percentage Alert Severity",
              "description": "Severity of the alert"
            }
          },
          "WSFMemoryPercentageWindowSize": {
            "type": "string",
            "defaultValue": "PT5M",
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "metadata": {
              "displayName": "WSF Memory Percentage  Window Size",
              "description": "Window size for the alert"
            }
          },
          "WSFMemoryPercentageEvaluationFrequency": {
            "type": "string",
            "defaultValue": "PT1M",
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "metadata": {
              "displayName": "WSF Memory Percentage Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            }
          },
          "WSFMemoryPercentagePolicyEffect": {
            "type": "string",
            "defaultValue": "deployIfNotExists",
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "metadata": {
              "displayName": "WSF Memory Percentage Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert"
            }
          },
          "WSFMemoryPercentageAlertState": {
            "type": "string",
            "defaultValue": "true",
            "metadata": {
              "displayName": "WSF Memory Percentage Alert State",
              "description": "Alert state for the alert"
            }
          },
          "WSFMemoryPercentageThreshold": {
            "type": "string",
            "defaultValue": "85",
            "metadata": {
              "displayName": "WSF Memory Percentage Threshold",
              "description": "Threshold for the alert"
            }
          },
          "WSFDiskQueueLengthAlertSeverity": {
            "type": "String",
            "defaultValue": "2",
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Alert Severity",
              "description": "Severity of the alert"
            }
          },
          "WSFDiskQueueLengthWindowSize": {
            "type": "string",
            "defaultValue": "PT5M",
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Window Size",
              "description": "Window size for the alert"
            }
          },
          "WSFDiskQueueLengthEvaluationFrequency": {
            "type": "string",
            "defaultValue": "PT1M",
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            }
          },
          "WSFDiskQueueLengthPolicyEffect": {
            "type": "string",
            "defaultValue": "deployIfNotExists",
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert"
            }
          },
          "WSFDiskQueueLengthAlertState": {
            "type": "string",
            "defaultValue": "true",
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Alert State",
              "description": "Alert state for the alert"
            }
          },
          "WSFDiskQueueLengthFailingPeriods": {
            "type": "string",
            "defaultValue": "2",
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Failing Periods",
              "description": "Number of failing periods before alert is fired"
            }
          },
          "WSFDiskQueueLengthEvaluationPeriods": {
            "type": "string",
            "defaultValue": "2",
            "metadata": {
              "displayName": "WSF Disk Queue Lenght Evaluation Periods",
              "description": "The number of aggregated lookback points."
            }
          },
          "WSFHttpQueueLengthAlertSeverity": {
            "type": "String",
            "defaultValue": "2",
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Alert Severity",
              "description": "Severity of the alert"
            }
          },
          "WSFHttpQueueLengthWindowSize": {
            "type": "string",
            "defaultValue": "PT5M",
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "P1D"
            ],
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Window Size",
              "description": "Window size for the alert"
            }
          },
          "WSFHttpQueueLengthEvaluationFrequency": {
            "type": "string",
            "defaultValue": "PT1M",
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H"
            ],
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            }
          },
          "WSFHttpQueueLengthPolicyEffect": {
            "type": "string",
            "defaultValue": "deployIfNotExists",
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will deploy the alert if it does not exist, disabled will not deploy the alert"
            }
          },
          "WSFHttpQueueLengthAlertState": {
            "type": "string",
            "defaultValue": "true",
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Alert State",
              "description": "Alert state for the alert"
            }
          },
          "WSFHttpQueueLengthFailingPeriods": {
            "type": "string",
            "defaultValue": "2",
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Failing Periods",
              "description": "Number of failing periods before alert is fired"
            }
          },
          "WSFHttpQueueLengthEvaluationPeriods": {
            "type": "string",
            "defaultValue": "2",
            "metadata": {
              "displayName": "WSF HTTP Queue Lenght Evaluation Periods",
              "description": "The number of aggregated lookback points."
            }
          },
          "AppInsightsThrottlingLimitSeverity": {
            "type": "String",
            "metadata": {
              "displayName": "Application Insights Throttling Limit Reached Alert Severity",
              "description": "Severity of the Alert"
            },
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2"
          },
          "AppInsightsThrottlingLimitOperator": {
            "type": "String",
            "metadata": {
              "displayName": "Application Insights Throttling Limit Reached Alert Operator"
            },
            "allowedValues": [
              "GreaterThan",
              "GreaterThanOrEqual"
            ],
            "defaultValue": "GreaterThan"
          },
          "AppInsightsThrottlingLimitTimeAggregation": {
            "type": "String",
            "metadata": {
              "displayName": "Application Insights Throttling Limit Reached Alert TimeAggregation"
            },
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count"
          },
          "AppInsightsThrottlingLimitWindowSize": {
            "type": "String",
            "metadata": {
              "displayName": "Application Insights Throttling Limit Reached Alert Window Size",
              "description": "Window size for the alert"
            },
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT10M",
              "PT15M",
              "PT30M",
              "PT45M",
              "PT1H",
              "PT2H",
              "PT3H",
              "PT4H",
              "PT5H",
              "PT6H",
              "P1D"
            ],
            "defaultValue": "P1D"
          },
          "AppInsightsThrottlingLimitEvaluationFrequency": {
            "type": "String",
            "metadata": {
              "displayName": "Application Insights Throttling Limit Reached Alert Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "allowedValues": [
              "PT5M",
              "PT10M",
              "PT15M",
              "PT30M",
              "PT45M",
              "PT1H",
              "PT2H",
              "PT3H",
              "PT4H",
              "PT5H",
              "PT6H",
              "P1D"
            ],
            "defaultValue": "PT1H"
          },
          "AppInsightsThrottlingLimitAutoMitigate": {
            "type": "String",
            "metadata": {
              "displayName": "Application Insights Throttling Limit Reached Alert Auto Mitigate",
              "description": "Auto Mitigate for the alert"
            },
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true"
          },
          "AppInsightsThrottlingLimitcheckWorkspaceAlertsStorageConfigured": {
            "type": "String",
            "metadata": {
              "displayName": "Application Insights Throttling Limit Reached Alert Require a workspace linked storage",
              "description": "Don't create the alert rule if the Log Analytics workspace doesn't have a configured linked storage account (relevant if you're using Customer Managed Keys)."
            },
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "false"
          },
          "AppInsightsThrottlingLimitThreshold": {
            "type": "String",
            "metadata": {
              "displayName": "Application Insights Throttling Limit Reached Alert Threshold",
              "description": "Threshold for the alert"
            },
            "defaultValue": "32000"
          },
          "AppInsightsThrottlingLimitFailingPeriods": {
            "type": "String",
            "metadata": {
              "displayName": "Application Insights Throttling Limit Reached Alert Failing Periods",
              "description": "Number of failing periods before alert is fired"
            },
            "defaultValue": "1"
          },
          "AppInsightsThrottlingLimitEvaluationPeriods": {
            "type": "String",
            "metadata": {
              "displayName": "Application Insights Throttling Limit Reached Alert Evaluation Periods",
              "description": "The number of aggregated lookback points."
            },
            "defaultValue": "1"
          },
          "AppInsightsThrottlingLimitPolicyEffect": {
            "type": "string",
            "defaultValue": "deployIfNotExists",
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "metadata": {
              "displayName": "Application Insights Throttling Limit Reached Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will create the alert if it does not exist, disabled will not create the alert"
            }
          },
          "AppInsightsThrottlingLimitAlertState": {
            "type": "string",
            "defaultValue": "true",
            "metadata": {
              "displayName": "AApplication Insights Throttling Limit Reached Alert State",
              "description": "Alert state for the alert"
            }
          },
          "activityAppInsightsDeletePolicyEffect": {
            "type": "string",
            "defaultValue": "deployIfNotExists",
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "metadata": {
              "displayName": "Activity Log Application Insights Alert Delete Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will create the alert if it does not exist, disabled will not create the alert"
            }
          },
          "activityAppInsightsDeleteAlertState": {
            "type": "string",
            "defaultValue": "true",
            "metadata": {
              "displayName": "Activity Log Application Insights Alert Delete Alert State",
              "description": "Alert state for the alert"
            }
          },
          "activityLAWDeletePolicyEffect": {
            "type": "string",
            "defaultValue": "deployIfNotExists",
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "metadata": {
              "displayName": "Activity Log Alert Delete Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will create the alert if it does not exist, disabled will not create the alert"
            }
          },
          "activityLAWDeleteAlertState": {
            "type": "string",
            "defaultValue": "true",
            "metadata": {
              "displayName": "Activity Log Alert Delete Alert State",
              "description": "Alert state for the alert"
            }
          },
          "activityLAWKeyRegenPolicyEffect": {
            "type": "string",
            "defaultValue": "deployIfNotExists",
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "metadata": {
              "displayName": "LAW Key Regen Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will create the alert if it does not exist, disabled will not create the alert"
            }
          },
          "activityLAWKeyRegenAlertState": {
            "type": "string",
            "defaultValue": "true",
            "metadata": {
              "displayName": "Activity Log Alert Key Regen Alert State",
              "description": "Alert state for the alert"
            }
          },
          "LAWDailyCapLimitSeverity": {
            "type": "String",
            "metadata": {
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Severity",
              "description": "Severity of the Alert"
            },
            "allowedValues": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ],
            "defaultValue": "2"
          },
          "LAWDailyCapLimitOperator": {
            "type": "String",
            "metadata": {
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Operator"
            },
            "allowedValues": [
              "GreaterThan",
              "GreaterThanOrEqual"
            ],
            "defaultValue": "GreaterThan"
          },
          "LAWDailyCapLimitTimeAggregation": {
            "type": "String",
            "metadata": {
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert TimeAggregation"
            },
            "allowedValues": [
              "Count"
            ],
            "defaultValue": "Count"
          },
          "LAWDailyCapLimitWindowSize": {
            "type": "String",
            "metadata": {
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Window Size",
              "description": "Window size for the alert"
            },
            "allowedValues": [
              "PT1M",
              "PT5M",
              "PT10M",
              "PT15M",
              "PT30M",
              "PT45M",
              "PT1H",
              "PT2H",
              "PT3H",
              "PT4H",
              "PT5H",
              "PT6H",
              "P1D"
            ],
            "defaultValue": "P1D"
          },
          "LAWDailyCapLimitEvaluationFrequency": {
            "type": "String",
            "metadata": {
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Evaluation Frequency",
              "description": "Evaluation frequency for the alert"
            },
            "allowedValues": [
              "PT5M",
              "PT10M",
              "PT15M",
              "PT30M",
              "PT45M",
              "PT1H",
              "PT2H",
              "PT3H",
              "PT4H",
              "PT5H",
              "PT6H",
              "P1D"
            ],
            "defaultValue": "PT1H"
          },
          "LAWDailyCapLimitAutoMitigate": {
            "type": "String",
            "metadata": {
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Auto Mitigate",
              "description": "Auto Mitigate for the alert"
            },
            "allowedValues": [
              "true",
              "false"
            ],
            "defaultValue": "true"
          },
          "LAWDailyCapLimitThreshold": {
            "type": "String",
            "metadata": {
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Threshold",
              "description": "Threshold for the alert"
            },
            "defaultValue": "0"
          },
          "LAWDailyCapLimitFailingPeriods": {
            "type": "String",
            "metadata": {
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Failing Periods",
              "description": "Number of failing periods before alert is fired"
            },
            "defaultValue": "1"
          },
          "LAWDailyCapLimitEvaluationPeriods": {
            "type": "String",
            "metadata": {
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Evaluation Periods",
              "description": "The number of aggregated lookback points."
            },
            "defaultValue": "1"
          },
          "LAWDailyCapLimitPolicyEffect": {
            "type": "string",
            "defaultValue": "deployIfNotExists",
            "allowedValues": [
              "deployIfNotExists",
              "disabled"
            ],
            "metadata": {
              "displayName": "Log Analytics Workspace Daily Cap Limit Reached Alert Policy Effect",
              "description": "Policy effect for the alert, deployIfNotExists will create the alert if it does not exist, disabled will not create the alert"
            }
          },
          "LAWDailyCapLimitAlertState": {
            "type": "string",
            "defaultValue": "true",
            "metadata": {
              "displayName": "ALog Analytics Workspace Daily Cap Limit Reached Alert State",
              "description": "Alert state for the alert"
            }
          }
        },
        "policyDefinitions": [
          {
            "policyDefinitionReferenceId": "ALZ_WSFCPUPercentage",
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/contoso/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_CPUPercentage_Alert",
            "parameters": {
              "severity": {
                "value": "[[[parameters('WSFCPUPercentageAlertSeverity')]"
              },
              "windowSize": {
                "value": "[[[parameters('WSFCPUPercentageWindowSize')]"
              },
              "evaluationFrequency": {
                "value": "[[[parameters('WSFCPUPercentageEvaluationFrequency')]"
              },
              "effect": {
                "value": "[[[parameters('WSFCPUPercentagePolicyEffect')]"
              },
              "enabled": {
                "value": "[[[parameters('WSFCPUPercentageAlertState')]"
              },
              "threshold": {
                "value": "[[[parameters('WSFCPUPercentageThreshold')]"
              },
              "MonitorDisableTagName": {
                "value": "[[[parameters('ALZMonitorDisableTagName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[[[parameters('ALZMonitorDisableTagValues')]"
              }
            }
          },
          {
            "policyDefinitionReferenceId": "ALZ_WSFMemoryPercentage",
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/contoso/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_MemoryPercentage_Alert",
            "parameters": {
              "severity": {
                "value": "[[[parameters('WSFMemoryPercentageAlertSeverity')]"
              },
              "windowSize": {
                "value": "[[[parameters('WSFMemoryPercentageWindowSize')]"
              },
              "evaluationFrequency": {
                "value": "[[[parameters('WSFMemoryPercentageEvaluationFrequency')]"
              },
              "effect": {
                "value": "[[[parameters('WSFMemoryPercentagePolicyEffect')]"
              },
              "enabled": {
                "value": "[[[parameters('WSFMemoryPercentageAlertState')]"
              },
              "threshold": {
                "value": "[[[parameters('WSFMemoryPercentageThreshold')]"
              },
              "MonitorDisableTagName": {
                "value": "[[[parameters('ALZMonitorDisableTagName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[[[parameters('ALZMonitorDisableTagValues')]"
              }
            }
          },
          {
            "policyDefinitionReferenceId": "ALZ_WSFDiskQueueLength",
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/contoso/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_DiskQueueLength_Alert",
            "parameters": {
              "severity": {
                "value": "[[[parameters('WSFDiskQueueLengthAlertSeverity')]"
              },
              "windowSize": {
                "value": "[[[parameters('WSFDiskQueueLengthWindowSize')]"
              },
              "evaluationFrequency": {
                "value": "[[[parameters('WSFDiskQueueLengthEvaluationFrequency')]"
              },
              "effect": {
                "value": "[[[parameters('WSFDiskQueueLengthPolicyEffect')]"
              },
              "enabled": {
                "value": "[[[parameters('WSFDiskQueueLengthAlertState')]"
              },
              "failingPeriods": {
                "value": "[[[parameters('WSFDiskQueueLengthFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[[[parameters('WSFDiskQueueLengthEvaluationPeriods')]"
              },
              "MonitorDisableTagName": {
                "value": "[[[parameters('ALZMonitorDisableTagName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[[[parameters('ALZMonitorDisableTagValues')]"
              }
            }
          },
          {
            "policyDefinitionReferenceId": "ALZ_WSFHttpQueueLength",
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/contoso/providers/Microsoft.Authorization/policyDefinitions/Deploy_WSF_HttpQueueLength_Alert",
            "parameters": {
              "severity": {
                "value": "[[[parameters('WSFHttpQueueLengthAlertSeverity')]"
              },
              "windowSize": {
                "value": "[[[parameters('WSFHttpQueueLengthWindowSize')]"
              },
              "evaluationFrequency": {
                "value": "[[[parameters('WSFHttpQueueLengthEvaluationFrequency')]"
              },
              "effect": {
                "value": "[[[parameters('WSFHttpQueueLengthPolicyEffect')]"
              },
              "enabled": {
                "value": "[[[parameters('WSFHttpQueueLengthAlertState')]"
              },
              "failingPeriods": {
                "value": "[[[parameters('WSFHttpQueueLengthFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[[[parameters('WSFHttpQueueLengthEvaluationPeriods')]"
              },
              "MonitorDisableTagName": {
                "value": "[[[parameters('ALZMonitorDisableTagName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[[[parameters('ALZMonitorDisableTagValues')]"
              }
            }
          },
          {
            "policyDefinitionReferenceId": "ALZ_AppInsightsThrottlingLimitReached_Alert",
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/contoso/providers/Microsoft.Authorization/policyDefinitions/Deploy_AppInsightsThrottlingLimit_Alert",
            "parameters": {
              "UAMIResourceId": {
                "value": "[[[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              },
              "severity": {
                "value": "[[[parameters('AppInsightsThrottlingLimitSeverity')]"
              },
              "operator": {
                "value": "[[[parameters('AppInsightsThrottlingLimitOperator')]"
              },
              "timeAggregation": {
                "value": "[[[parameters('AppInsightsThrottlingLimitTimeAggregation')]"
              },
              "windowSize": {
                "value": "[[[parameters('AppInsightsThrottlingLimitWindowSize')]"
              },
              "evaluationFrequency": {
                "value": "[[[parameters('AppInsightsThrottlingLimitEvaluationFrequency')]"
              },
              "autoMitigate": {
                "value": "[[[parameters('AppInsightsThrottlingLimitAutoMitigate')]"
              },
              "checkWorkspaceAlertsStorageConfigured": {
                "value": "[[[parameters('AppInsightsThrottlingLimitcheckWorkspaceAlertsStorageConfigured')]"
              },
              "threshold": {
                "value": "[[[parameters('AppInsightsThrottlingLimitThreshold')]"
              },
              "failingPeriods": {
                "value": "[[[parameters('AppInsightsThrottlingLimitFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[[[parameters('AppInsightsThrottlingLimitEvaluationPeriods')]"
              },
              "effect": {
                "value": "[[[parameters('AppInsightsThrottlingLimitPolicyEffect')]"
              },
              "enabled": {
                "value": "[[[parameters('AppInsightsThrottlingLimitAlertState')]"
              },
              "MonitorDisableTagName": {
                "value": "[[[parameters('ALZMonitorDisableTagName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[[[parameters('ALZMonitorDisableTagValues')]"
              }
            }
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityAppInsightsDelete",
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/contoso/providers/Microsoft.Authorization/policyDefinitions/Deploy_ActivityLog_AppInsights_Delete",
            "parameters": {
              "effect": {
                "value": "[[[parameters('activityAppInsightsDeletePolicyEffect')]"
              },
              "enabled": {
                "value": "[[[parameters('activityAppInsightsDeleteAlertState')]"
              },
              "alertResourceGroupName": {
                "value": "[[[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[[[parameters('ALZMonitorResourceGroupTags')]"
              },
              "alertResourceGroupLocation": {
                "value": "[[[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "MonitorDisableTagName": {
                "value": "[[[parameters('ALZMonitorDisableTagName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[[[parameters('ALZMonitorDisableTagValues')]"
              }
            }
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityLAWDelete",
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/contoso/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_LAWorkspace_Delete",
            "parameters": {
              "effect": {
                "value": "[[[parameters('activityLAWDeletePolicyEffect')]"
              },
              "enabled": {
                "value": "[[[parameters('activityLAWDeleteAlertState')]"
              },
              "alertResourceGroupName": {
                "value": "[[[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[[[parameters('ALZMonitorResourceGroupTags')]"
              },
              "alertResourceGroupLocation": {
                "value": "[[[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "MonitorDisableTagName": {
                "value": "[[[parameters('ALZMonitorDisableTagName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[[[parameters('ALZMonitorDisableTagValues')]"
              }
            }
          },
          {
            "policyDefinitionReferenceId": "ALZ_activityLAWKeyRegen",
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/contoso/providers/Microsoft.Authorization/policyDefinitions/Deploy_activitylog_LAWorkspace_KeyRegen",
            "parameters": {
              "effect": {
                "value": "[[[parameters('activityLAWKeyRegenPolicyEffect')]"
              },
              "enabled": {
                "value": "[[[parameters('activityLAWKeyRegenAlertState')]"
              },
              "alertResourceGroupName": {
                "value": "[[[parameters('ALZMonitorResourceGroupName')]"
              },
              "alertResourceGroupTags": {
                "value": "[[[parameters('ALZMonitorResourceGroupTags')]"
              },
              "alertResourceGroupLocation": {
                "value": "[[[parameters('ALZMonitorResourceGroupLocation')]"
              },
              "MonitorDisableTagName": {
                "value": "[[[parameters('ALZMonitorDisableTagName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[[[parameters('ALZMonitorDisableTagValues')]"
              }
            }
          },
          {
            "policyDefinitionReferenceId": "ALZ_LAWorkspaceDailyCapLimitReached",
            "policyDefinitionId": "/providers/Microsoft.Management/managementGroups/contoso/providers/Microsoft.Authorization/policyDefinitions/Deploy_LAWorkspace_DailyCapLimitReached_Alert",
            "parameters": {
              "UAMIResourceId": {
                "value": "[[[if(empty(parameters('BYOUserAssignedManagedIdentityResourceId')), concat('/subscriptions/', parameters('ALZManagementSubscriptionId'), '/resourceGroups/', parameters('ALZMonitorResourceGroupName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('ALZUserAssignedManagedIdentityName')),parameters('BYOUserAssignedManagedIdentityResourceId'))]"
              },
              "severity": {
                "value": "[[[parameters('LAWDailyCapLimitSeverity')]"
              },
              "operator": {
                "value": "[[[parameters('LAWDailyCapLimitOperator')]"
              },
              "timeAggregation": {
                "value": "[[[parameters('LAWDailyCapLimitTimeAggregation')]"
              },
              "windowSize": {
                "value": "[[[parameters('LAWDailyCapLimitWindowSize')]"
              },
              "evaluationFrequency": {
                "value": "[[[parameters('LAWDailyCapLimitEvaluationFrequency')]"
              },
              "autoMitigate": {
                "value": "[[[parameters('LAWDailyCapLimitAutoMitigate')]"
              },
              "threshold": {
                "value": "[[[parameters('LAWDailyCapLimitThreshold')]"
              },
              "failingPeriods": {
                "value": "[[[parameters('LAWDailyCapLimitFailingPeriods')]"
              },
              "evaluationPeriods": {
                "value": "[[[parameters('LAWDailyCapLimitEvaluationPeriods')]"
              },
              "effect": {
                "value": "[[[parameters('LAWDailyCapLimitPolicyEffect')]"
              },
              "enabled": {
                "value": "[[[parameters('LAWDailyCapLimitAlertState')]"
              },
              "MonitorDisableTagName": {
                "value": "[[[parameters('ALZMonitorDisableTagName')]"
              },
              "MonitorDisableTagValues": {
                "value": "[[[parameters('ALZMonitorDisableTagValues')]"
              }
            }
          }
        ],
        "policyType": "Custom",
        "policyDefinitionGroups": null
      }
    },
    "cloudEnv": "[environment().name]",
    "defaultDeploymentLocationByCloudType": {
      "AzureCloud": "northeurope",
      "AzureChinaCloud": "chinaeast2",
      "AzureUSGovernment": "usgovvirginia"
    },
    "templateVars": {
      "scope": "/providers/Microsoft.Management/managementGroups/contoso",
      "defaultDeploymentLocation": "\"location\": \"northeurope\"",
      "localizedDeploymentLocation": "[format('\"location\": \"{0}\"', variables('defaultDeploymentLocationByCloudType')[variables('cloudEnv')])]"
    },
    "targetDeploymentLocationByCloudType": {
      "AzureCloud": "[coalesce(parameters('location'), 'northeurope')]",
      "AzureChinaCloud": "[coalesce(parameters('location'), 'chinaeast2')]",
      "AzureUSGovernment": "[coalesce(parameters('location'), 'usgovvirginia')]"
    },
    "deploymentLocation": "[format('\"location\": \"{0}\"', variables('targetDeploymentLocationByCloudType')[variables('cloudEnv')])]",
    "loadPolicyDefinitions": {
      "All": [
        "[variables('$fxv#0')]",
        "[variables('$fxv#1')]",
        "[variables('$fxv#2')]",
        "[variables('$fxv#3')]",
        "[variables('$fxv#4')]",
        "[variables('$fxv#5')]"
      ],
      "AzureCloud": [],
      "AzureChinaCloud": [],
      "AzureUSGovernment": []
    },
    "loadPolicySetDefinitions": {
      "All": [
        "[string(variables('$fxv#6'))]"
      ],
      "AzureCloud": [],
      "AzureChinaCloud": [],
      "AzureUSGovernment": []
    },
    "policyDefinitionsByCloudType": {
      "All": "[variables('policyDefinitionsAll')]",
      "AzureCloud": "[variables('policyDefinitionsAzureCloud')]",
      "AzureChinaCloud": "[variables('policyDefinitionsAzureChinaCloud')]",
      "AzureUSGovernment": "[variables('policyDefinitionsAzureUSGovernment')]"
    },
    "policySetDefinitionsByCloudType": {
      "All": "[variables('policySetDefinitionsAll')]",
      "AzureCloud": "[variables('policySetDefinitionsAzureCloud')]",
      "AzureChinaCloud": "[variables('policySetDefinitionsAzureChinaCloud')]",
      "AzureUSGovernment": "[variables('policySetDefinitionsAzureUSGovernment')]"
    },
    "policyDefinitions": "[concat(variables('policyDefinitionsByCloudType').All, variables('policyDefinitionsByCloudType')[variables('cloudEnv')])]",
    "policySetDefinitions": "[concat(variables('policySetDefinitionsByCloudType').All, variables('policySetDefinitionsByCloudType')[variables('cloudEnv')])]"
  },
  "resources": [
    {
      "copy": {
        "name": "PolicyDefinitions",
        "count": "[length(variables('policyDefinitions'))]"
      },
      "type": "Microsoft.Authorization/policyDefinitions",
      "apiVersion": "2020-09-01",
      "name": "[variables('policyDefinitions')[copyIndex()].name]",
      "properties": {
        "description": "[variables('policyDefinitions')[copyIndex()].properties.description]",
        "displayName": "[variables('policyDefinitions')[copyIndex()].properties.displayName]",
        "metadata": "[variables('policyDefinitions')[copyIndex()].properties.metadata]",
        "mode": "[variables('policyDefinitions')[copyIndex()].properties.mode]",
        "parameters": "[variables('policyDefinitions')[copyIndex()].properties.parameters]",
        "policyType": "[variables('policyDefinitions')[copyIndex()].properties.policyType]",
        "policyRule": "[variables('policyDefinitions')[copyIndex()].properties.policyRule]"
      }
    },
    {
      "copy": {
        "name": "PolicySetDefinitions",
        "count": "[length(variables('policySetDefinitions'))]"
      },
      "type": "Microsoft.Authorization/policySetDefinitions",
      "apiVersion": "2020-09-01",
      "name": "[variables('policySetDefinitions')[copyIndex()].name]",
      "properties": {
        "description": "[variables('policySetDefinitions')[copyIndex()].properties.description]",
        "displayName": "[variables('policySetDefinitions')[copyIndex()].properties.displayName]",
        "metadata": "[variables('policySetDefinitions')[copyIndex()].properties.metadata]",
        "parameters": "[variables('policySetDefinitions')[copyIndex()].properties.parameters]",
        "policyType": "[variables('policySetDefinitions')[copyIndex()].properties.policyType]",
        "policyDefinitions": "[variables('policySetDefinitions')[copyIndex()].properties.policyDefinitions]",
        "policyDefinitionGroups": "[variables('policySetDefinitions')[copyIndex()].properties.policyDefinitionGroups]"
      },
      "dependsOn": [
        "PolicyDefinitions"
      ]
    }
  ],
  "outputs": {
    "policyDefinitionNames": {
      "type": "array",
      "copy": {
        "count": "[length(variables('policyDefinitions'))]",
        "input": "[variables('policyDefinitions')[copyIndex()].name]"
      }
    },
    "policySetDefinitionNames": {
      "type": "array",
      "copy": {
        "count": "[length(variables('policySetDefinitions'))]",
        "input": "[variables('policySetDefinitions')[copyIndex()].name]"
      }
    }
  }
}