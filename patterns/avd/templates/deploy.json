{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.28.1.47646",
      "templateHash": "10676238598322229460"
    }
  },
  "parameters": {
    "SetEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Determine if you would like to enable all the alerts after deployment."
      }
    },
    "optoutTelemetry": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Telemetry Opt-Out"
      }
    },
    "AlertNamePrefix": {
      "type": "string",
      "defaultValue": "AVD",
      "metadata": {
        "description": "Alert Name Prefix (Dash will be added after prefix for you.)"
      }
    },
    "AutoResolveAlert": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Determine if you would like to set all deployed alerts to auto-resolve."
      }
    },
    "DistributionGroup": {
      "type": "string",
      "metadata": {
        "description": "The Distribution Group that will receive email alerts for AVD."
      }
    },
    "Environment": {
      "type": "string",
      "defaultValue": "t",
      "allowedValues": [
        "d",
        "p",
        "t"
      ],
      "metadata": {
        "description": "The environment is which these resources will be deployed, i.e. Test, Production, Development."
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Azure Region for Resources."
      }
    },
    "LogAnalyticsWorkspaceResourceId": {
      "type": "string",
      "metadata": {
        "description": "The Resource ID for the Log Analytics Workspace."
      }
    },
    "ResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Resource Group to deploy the Alerts Solution in."
      }
    },
    "ResourceGroupStatus": {
      "type": "string",
      "allowedValues": [
        "New",
        "Existing"
      ],
      "metadata": {
        "description": "Flag to determine if a new resource group needs to be created for Alert resources."
      }
    },
    "StorageAccountResourceIds": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The Resource IDs for the Azure Files Storage Accounts used for FSLogix profile storage."
      }
    },
    "time": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "ISO 8601 timestamp used for the deployment names and the Automation runbook schedule."
      }
    },
    "ANFVolumeResourceIds": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "The Resource IDs for the Azure NetApp Volumes used for FSLogix profile storage."
      }
    },
    "Tags": {
      "type": "object",
      "defaultValue": {}
    }
  },
  "variables": {
    "copy": [
      {
        "name": "AlertsStorage",
        "count": "[length(variables('AMBAalertsStorage'))]",
        "input": "[if(contains(variables('AMBAalertsStorage')[copyIndex('AlertsStorage')].tags, 'avd'), variables('AMBAalertsStorage')[copyIndex('AlertsStorage')], null())]"
      }
    ],
    "$fxv#0": [
      {
        "name": "No Resources Available",
        "description": "Catastrophic Event! Indicates potential problems with dependencies, diagnose and resolve.",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "severity": 1,
          "operator": "GreaterThanOrEqual",
          "timeAggregation": "Count",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT15M",
          "threshold": 1,
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "UserName",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "SessionHostName",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "WVDConnections | where TimeGenerated > ago (15m) | project-away TenantId,SourceSystem | summarize arg_max(TimeGenerated, *), StartTime =  min(iff(State== 'Started', TimeGenerated , datetime(null) )), ConnectTime = min(iff(State== 'Connected', TimeGenerated , datetime(null) )) by CorrelationId | join kind=leftouter (WVDErrors |summarize Errors=makelist(pack('Code', Code, 'CodeSymbolic', CodeSymbolic, 'Time', TimeGenerated, 'Message', Message ,'ServiceError', ServiceError, 'Source', Source)) by CorrelationId ) on CorrelationId | join kind=leftouter (WVDCheckpoints | summarize Checkpoints=makelist(pack('Time', TimeGenerated, 'Name', Name, 'Parameters', Parameters, 'Source', Source)) by CorrelationId | mv-apply Checkpoints on ( order by todatetime(Checkpoints['Time']) asc | summarize Checkpoints=makelist(Checkpoints)) ) on CorrelationId | project-away CorrelationId1, CorrelationId2 | order by TimeGenerated desc | where Errors[0].CodeSymbolic == \"ConnectionFailedNoHealthyRdshAvailable\"",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:30:00"
        },
        "references": "",
        "deployments": [
          {
            "name": "AVD-HostPool",
            "template": "Deploy-AVD-HostPool-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ]
      },
      {
        "name": "User Disconnected over 24h",
        "description": "Verify Remote Desktop Policies are applied relating to Session Limits. This could impact your scaling plan as well.",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThanOrEqual",
          "timeAggregation": "Count",
          "windowSize": "PT1H",
          "evaluationFrequency": "PT1H",
          "threshold": 1,
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "UserName",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "SessionHostName",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "WVDConnections | where TimeGenerated > ago(24h) | where State == \"Connected\" | project CorrelationId , UserName, ConnectionType, StartTime=TimeGenerated, SessionHostName | join (WVDConnections | where State == \"Completed\" | project EndTime=TimeGenerated, CorrelationId) on CorrelationId | project Duration = EndTime - StartTime, ConnectionType, UserName, SessionHostName | where Duration >= timespan(24:00:00) | sort by Duration desc",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:30:00"
        },
        "references": "",
        "deployments": [
          {
            "name": "AVD-HostPool",
            "template": "Deploy-AVD-HostPool-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ]
      },
      {
        "name": "User Disconnected over 72h",
        "description": "Verify Remote Desktop Policies are applied relating to Session Limits. This could impact your scaling plan as well.",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThanOrEqual",
          "timeAggregation": "Count",
          "windowSize": "PT1H",
          "evaluationFrequency": "PT1H",
          "threshold": 1,
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "UserName",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "SessionHostName",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "WVDConnections | where TimeGenerated > ago(24h) | where State == \"Connected\" | project CorrelationId , UserName, ConnectionType, StartTime=TimeGenerated, SessionHostName | join (WVDConnections\n  | where State == \"Completed\"\n  | project EndTime=TimeGenerated, CorrelationId)\non CorrelationId | project Duration = EndTime - StartTime, ConnectionType, UserName, SessionHostName | where Duration >= timespan(72:00:00) | sort by Duration desc",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:30:00"
        },
        "references": "",
        "deployments": [
          {
            "name": "AVD-HostPool",
            "template": "Deploy-AVD-HostPool-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ]
      },
      {
        "name": "FSLogix Profile less than 5 Percent",
        "description": "User Profiles Service logged Event ID 33. Expand User's Virtual Profile Disk and/or clean up user profile data on the VM.",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThanOrEqual",
          "timeAggregation": "Count",
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "threshold": 1,
          "dimensions": [
            {
              "name": "ComputerName",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "RenderedDescription",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "VMresourceGroup",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "HostPool",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "_ResourceId",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "Event | where EventLog == \"Microsoft-FSLogix-Apps/Admin\" | where EventLevelName == \"Warning\" | where EventID == 34 | parse _ResourceId with \"/subscriptions/\" subscription \"/resourcegroups/\" ResourceGroup \"/providers/microsoft.compute/virtualmachines/\" ComputerName | extend ComputerName=tolower(ComputerName) | project ComputerName, RenderedDescription, subscription, ResourceGroup, TimeGenerated | join kind = leftouter (WVDAgentHealthStatus\n  | parse _ResourceId with \"/subscriptions/\" subscriptionAgentHealth \"/resourcegroups/\" ResourceGroupAgentHealth \"/providers/microsoft.desktopvirtualization/hostpools/\" HostPool\n  | parse SessionHostResourceId with \"/subscriptions/\" VMsubscription \"/resourceGroups/\" VMresourceGroup \"/providers/Microsoft.Compute/virtualMachines/\" ComputerName\n  | extend ComputerName=tolower(ComputerName)\n  | summarize arg_max(TimeGenerated,*) by ComputerName\n  | project VMresourceGroup, ComputerName, HostPool, _ResourceId\n) on ComputerName",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:30:00"
        },
        "references": "",
        "deployments": [
          {
            "name": "AVD-HostPool",
            "template": "Deploy-AVD-HostPool-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ]
      },
      {
        "name": "FSLogix Profile less than 2 Percent",
        "description": "User Profiles Service logged Event ID 34. Expand User's Virtual Profile Disk and/or clean up user profile data on the VM.",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "severity": 1,
          "operator": "GreaterThanOrEqual",
          "timeAggregation": "Count",
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "threshold": 1,
          "dimensions": [
            {
              "name": "ComputerName",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "RenderedDescription",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "VMresourceGroup",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "HostPool",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "_ResourceId",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "Event | where EventLog == \"Microsoft-FSLogix-Apps/Admin\" | where EventLevelName == \"Error\" | where EventID == 33 | parse _ResourceId with \"/subscriptions/\" subscription \"/resourcegroups/\" ResourceGroup \"/providers/microsoft.compute/virtualmachines/\" ComputerName | extend ComputerName=tolower(ComputerName) | project ComputerName, RenderedDescription, subscription, ResourceGroup, TimeGenerated | join kind = leftouter (WVDAgentHealthStatus\n  | parse _ResourceId with \"/subscriptions/\" subscriptionAgentHealth \"/resourcegroups/\" ResourceGroupAgentHealth \"/providers/microsoft.desktopvirtualization/hostpools/\" HostPool\n  | parse SessionHostResourceId with \"/subscriptions/\" VMsubscription \"/resourceGroups/\" VMresourceGroup \"/providers/Microsoft.Compute/virtualMachines/\" ComputerName\n  | extend ComputerName=tolower(ComputerName)\n  | summarize arg_max(TimeGenerated,*) by ComputerName\n  | project VMresourceGroup, ComputerName, HostPool, _ResourceId\n) on ComputerName",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:30:00"
        },
        "references": "",
        "deployments": [
          {
            "name": "AVD-HostPool",
            "template": "Deploy-AVD-HostPool-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ]
      },
      {
        "name": "FSLogix Network Issue",
        "description": "User Profiles Service logged Event ID 43. Verify network communications between the storage and AVD VM.",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "severity": 1,
          "operator": "GreaterThanOrEqual",
          "timeAggregation": "Count",
          "windowSize": "PT24H",
          "evaluationFrequency": "PT5M",
          "threshold": 1,
          "dimensions": [
            {
              "name": "ComputerName",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "RenderedDescription",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "VMresourceGroup",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "HostPool",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "_ResourceId",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "Event | where EventLog == \"Microsoft-FSLogix-Apps/Admin\" | where EventLevelName == \"Error\" | where EventID == 43 | parse _ResourceId with \"/subscriptions/\" subscription \"/resourcegroups/\" ResourceGroup \"/providers/microsoft.compute/virtualmachines/\" ComputerName | extend ComputerName=tolower(ComputerName) | project ComputerName, RenderedDescription, subscription, ResourceGroup, TimeGenerated | join kind = leftouter (WVDAgentHealthStatus\n  | parse _ResourceId with \"/subscriptions/\" subscriptionAgentHealth \"/resourcegroups/\" ResourceGroupAgentHealth \"/providers/microsoft.desktopvirtualization/hostpools/\" HostPool\n  | parse SessionHostResourceId with \"/subscriptions/\" VMsubscription \"/resourceGroups/\" VMresourceGroup \"/providers/Microsoft.Compute/virtualMachines/\" ComputerName\n  | extend ComputerName=tolower(ComputerName)\n  | summarize arg_max(TimeGenerated,*) by ComputerName\n  | project VMresourceGroup, ComputerName, HostPool, _ResourceId\n) on ComputerName",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:30:00"
        },
        "references": "",
        "deployments": [
          {
            "name": "AVD-HostPool",
            "template": "Deploy-AVD-HostPool-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ]
      },
      {
        "name": "FSLogix Profile Disk Failed to Attach",
        "description": "User Profiles Service logged an Event ID 52 or 40. Investigate error details for reason.",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "severity": 1,
          "operator": "GreaterThanOrEqual",
          "timeAggregation": "Count",
          "windowSize": "PT24H",
          "evaluationFrequency": "PT5M",
          "resourceIdColumn": "_ResourceId",
          "threshold": 1,
          "dimensions": [
            {
              "name": "ComputerName",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "RenderedDescription",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "VMresourceGroup",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "HostPool",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "_ResourceId",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "Event | where EventLog == \"Microsoft-FSLogix-Apps/Admin\" | where EventLevelName == \"Error\" | where EventID == 42 or EventID == 40 | parse _ResourceId with \"/subscriptions/\" subscription \"/resourcegroups/\" ResourceGroup \"/providers/microsoft.compute/virtualmachines/\" ComputerName | extend ComputerName=tolower(ComputerName) | project ComputerName, RenderedDescription, subscription, ResourceGroup, TimeGenerated | join kind = leftouter (WVDAgentHealthStatus\n  | parse _ResourceId with \"/subscriptions/\" subscriptionAgentHealth \"/resourcegroups/\" ResourceGroupAgentHealth \"/providers/microsoft.desktopvirtualization/hostpools/\" HostPool\n  | parse SessionHostResourceId with \"/subscriptions/\" VMsubscription \"/resourceGroups/\" VMresourceGroup \"/providers/Microsoft.Compute/virtualMachines/\" ComputerName\n  | extend ComputerName=tolower(ComputerName)\n  | summarize arg_max(TimeGenerated,*) by ComputerName\n  | project VMresourceGroup, ComputerName, HostPool, _ResourceId\n) on ComputerName",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:30:00"
        },
        "references": "",
        "deployments": [
          {
            "name": "AVD-HostPool",
            "template": "Deploy-AVD-HostPool-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ]
      },
      {
        "name": "FSLogix Service Disabled",
        "description": "User Profile Service Disabled. Determine why service was disabled and re-enable / start the FSLogix service.",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "severity": 1,
          "operator": "GreaterThanOrEqual",
          "timeAggregation": "Count",
          "windowSize": "PT24H",
          "evaluationFrequency": "PT5M",
          "resourceIdColumn": "_ResourceId",
          "threshold": 1,
          "dimensions": [
            {
              "name": "ComputerName",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "RenderedDescription",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "VMresourceGroup",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "HostPool",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "_ResourceId",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "Event | where EventLog == \"Microsoft-FSLogix-Apps/Admin\" | where EventLevelName == \"Warning\" | where EventID == 60 | parse _ResourceId with \"/subscriptions/\" subscription \"/resourcegroups/\" ResourceGroup \"/providers/microsoft.compute/virtualmachines/\" ComputerName | extend ComputerName=tolower(ComputerName) | project ComputerName, RenderedDescription, subscription, ResourceGroup, TimeGenerated | join kind = leftouter (WVDAgentHealthStatus\n  | parse _ResourceId with \"/subscriptions/\" subscriptionAgentHealth \"/resourcegroups/\" ResourceGroupAgentHealth \"/providers/microsoft.desktopvirtualization/hostpools/\" HostPool\n  | parse SessionHostResourceId with \"/subscriptions/\" VMsubscription \"/resourceGroups/\" VMresourceGroup \"/providers/Microsoft.Compute/virtualMachines/\" ComputerName\n  | extend ComputerName=tolower(ComputerName)\n  | summarize arg_max(TimeGenerated,*) by ComputerName\n  | project VMresourceGroup, ComputerName, HostPool, _ResourceId\n) on ComputerName",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:30:00"
        },
        "references": "",
        "deployments": [
          {
            "name": "AVD-HostPool",
            "template": "Deploy-AVD-HostPool-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ]
      },
      {
        "name": "FSLogix Disk Compact Failure",
        "description": "User Profile Service logged Event ID 62 or 63. The profile Disk was marked for compaction due to additional white space but failed. See error details for additional information.",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThanOrEqual",
          "timeAggregation": "Count",
          "windowSize": "PT24H",
          "evaluationFrequency": "PT5M",
          "resourceIdColumn": "_ResourceId",
          "threshold": 1,
          "dimensions": [
            {
              "name": "ComputerName",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "RenderedDescription",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "VMresourceGroup",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "HostPool",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "_ResourceId",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "Event | where EventLog == \"Microsoft-FSLogix-Apps/Admin\" | where EventLevelName == \"Error\" | where EventID == 62 or EventID == 63 | parse _ResourceId with \"/subscriptions/\" subscription \"/resourcegroups/\" ResourceGroup \"/providers/microsoft.compute/virtualmachines/\" ComputerName | extend ComputerName=tolower(ComputerName) | project ComputerName, RenderedDescription, subscription, ResourceGroup, TimeGenerated | join kind = leftouter (WVDAgentHealthStatus\n  | parse _ResourceId with \"/subscriptions/\" subscriptionAgentHealth \"/resourcegroups/\" ResourceGroupAgentHealth \"/providers/microsoft.desktopvirtualization/hostpools/\" HostPool\n  | parse SessionHostResourceId with \"/subscriptions/\" VMsubscription \"/resourceGroups/\" VMresourceGroup \"/providers/Microsoft.Compute/virtualMachines/\" ComputerName\n  | extend ComputerName=tolower(ComputerName)\n  | summarize arg_max(TimeGenerated,*) by ComputerName\n  | project VMresourceGroup, ComputerName, HostPool, _ResourceId\n) on ComputerName",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:30:00"
        },
        "references": "",
        "deployments": [
          {
            "name": "AVD-HostPool",
            "template": "Deploy-AVD-HostPool-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ]
      },
      {
        "name": "FSLogix Disk Already In Use",
        "description": "User Profile Service logged an Event ID 51. This indicates that a user attempted to load their profile disk but it was in use or possibly mapped to another VM. Ensure the user is not connected to another host pool or remote app with the same profile.",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThanOrEqual",
          "timeAggregation": "Count",
          "windowSize": "PT24H",
          "evaluationFrequency": "PT5M",
          "resourceIdColumn": "_ResourceId",
          "threshold": 1,
          "dimensions": [
            {
              "name": "ComputerName",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "RenderedDescription",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "VMresourceGroup",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "HostPool",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "_ResourceId",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "Event | where EventLog == \"Microsoft-FSLogix-Apps/Operational\" | where EventLevelName == \"Warning\" | where EventID == 51 | parse _ResourceId with \"/subscriptions/\" subscription \"/resourcegroups/\" ResourceGroup \"/providers/microsoft.compute/virtualmachines/\" ComputerName | extend ComputerName=tolower(ComputerName) | project ComputerName, RenderedDescription, subscription, ResourceGroup, TimeGenerated | join kind = leftouter (WVDAgentHealthStatus\n  | parse _ResourceId with \"/subscriptions/\" subscriptionAgentHealth \"/resourcegroups/\" ResourceGroupAgentHealth \"/providers/microsoft.desktopvirtualization/hostpools/\" HostPool\n  | parse SessionHostResourceId with \"/subscriptions/\" VMsubscription \"/resourceGroups/\" VMresourceGroup \"/providers/Microsoft.Compute/virtualMachines/\" ComputerName\n  | extend ComputerName=tolower(ComputerName)\n  | summarize arg_max(TimeGenerated,*) by ComputerName\n  | project VMresourceGroup, ComputerName, HostPool, _ResourceId\n) on ComputerName",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:30:00"
        },
        "references": "",
        "deployments": [
          {
            "name": "AVD-HostPool",
            "template": "Deploy-AVD-HostPool-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ]
      },
      {
        "name": "Session Host Healthcheck Failure",
        "description": "VM is available for use but one of the dependent resources is in a failed state.",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThanOrEqual",
          "timeAggregation": "Count",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT15M",
          "resourceIdColumn": "_ResourceId",
          "threshold": 1,
          "dimensions": [
            {
              "name": "SessionHostName",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "HealthCheckDesc",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "HostPool",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "SessionHostResourceId",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "let MapToDesc = (idx: long) { case(idx == 0, \"DomainJoin\", idx == 1, \"DomainTrust\", idx == 2, \"FSLogix\", idx == 3, \"SxSStack\", idx == 4, \"URLCheck\", idx == 5, \"GenevaAgent\", idx == 6, \"DomainReachable\", idx == 7, \"WebRTCRedirector\", idx == 8, \"SxSStackEncryption\", idx == 9, \"IMDSReachable\", idx == 10, \"MSIXPackageStaging\", \"InvalidIndex\") };\n WVDAgentHealthStatus\n | where TimeGenerated > ago(10m)\n | where Status != 'Available'\n | where AllowNewSessions = True\n | extend CheckFailed = parse_json(SessionHostHealthCheckResult)\n | mv-expand CheckFailed\n | where CheckFailed.AdditionalFailureDetails.ErrorCode != 0\n | extend HealthCheckName = tolong(CheckFailed.HealthCheckName)\n | extend HealthCheckResult = tolong(CheckFailed.HealthCheckResult)\n | extend HealthCheckDesc = MapToDesc(HealthCheckName)\n | where HealthCheckDesc != 'InvalidIndex'\n | parse _ResourceId with \"/subscriptions/\" subscription \"/resourcegroups/\" HostPoolResourceGroup \"/providers/microsoft.desktopvirtualization/hostpools/\" HostPool \"/providers/microsoft.compute/virtualmachines/\" SessionHostName",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:30:00"
        },
        "references": "",
        "deployments": [
          {
            "name": "AVD-HostPool",
            "template": "Deploy-AVD-HostPool-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ]
      },
      {
        "name": "User Connection to Session Host Failure",
        "description": "A user failed to connect to a VM. There are lots of variables between the end uers and AVD VMs. If this is frequent for the user, determine if their Internet connection is slow or latency is over 150 ms.",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "severity": 3,
          "enabled": true,
          "evaluationFrequency": "PT5M",
          "operator": "GreaterThanOrEqual",
          "timeAggregation": "Count",
          "windowSize": "PT5M",
          "resourceIdColumn": "_ResourceId",
          "threshold": 1,
          "dimensions": [
            {
              "name": "ResourceGroup",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "UserName",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "ClientOS",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "ClientVersion",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "ClientSideIPAddress",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "ConnectionType",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "ErrorShort",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "ErrorMessage",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "HostPool",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "      WVDConnections\n      //  | where UserName == \"upn.here@contoso.com\"\n      | project-away TenantId,SourceSystem\n      | summarize arg_max(TimeGenerated, *), StartTime = min(iff(State=='Started', TimeGenerated , datetime(null))), ConnectTime = min(iff(State=='Connected', TimeGenerated , datetime(null))) by CorrelationId\n      | join kind=leftouter (WVDErrors\n      |summarize Errors=make_list(pack('Code', Code, 'CodeSymbolic', CodeSymbolic, 'Time', TimeGenerated, 'Message', Message ,'ServiceError', ServiceError, 'Source', Source)) by CorrelationId\n      ) on CorrelationId\n        | join kind=leftouter (WVDCheckpoints\n        | summarize Checkpoints=make_list(pack('Time', TimeGenerated, 'Name', Name, 'Parameters', Parameters, 'Source', Source)) by CorrelationId\n        | mv-apply Checkpoints on (\n        order by todatetime(Checkpoints['Time']) asc\n        | summarize Checkpoints=make_list(Checkpoints))\n      ) on CorrelationId\n      | project-away CorrelationId1, CorrelationId2\n      | order by TimeGenerated desc\n      | where TimeGenerated > ago(15m)\n      | extend ResourceGroup=tostring(split(_ResourceId, '/')[4])\n      | extend HostPool=tostring(split(_ResourceId, '/')[8])\n      | extend ErrorShort=tostring(Errors[0].CodeSymbolic)\n      | extend ErrorMessage=tostring(Errors[0].Message)\n      | project _ResourceId, ResourceGroup, UserName, ClientOS, ClientVersion, ClientSideIPAddress, ConnectionType, ErrorShort, ErrorMessage, HostPool\n",
          "autoResolve": true,
          "autoResolveTime": "0:30:00"
        },
        "references": "",
        "deployments": [
          {
            "name": "AVD-HostPool",
            "template": "Deploy-AVD-HostPool-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ]
      }
    ],
    "$fxv#1": [
      {
        "name": "Availability",
        "description": "The percentage of availability for the storage service or the specified API operation. Availability is calculated by taking the TotalBillableRequests value and dividing it by the number of applicable requests, including those that produced unexpected errors. All unexpected errors result in reduced availability for the storage service or the specified API operation.",
        "type": "Metric",
        "verified": true,
        "visible": true,
        "tags": [
          "avd",
          "hpc",
          "alz"
        ],
        "properties": {
          "metricName": "Availability",
          "metricNamespace": "Microsoft.Storage/storageAccounts",
          "severity": 1,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "LessThan",
          "threshold": 100,
          "criterionType": "StaticThresholdCriterion",
          "autoMitigate": false
        },
        "references": [
          {
            "name": "Monitoring Availability",
            "url": "https://learn.microsoft.com/troubleshoot/azure/azure-storage/storage-monitoring-diagnosing-troubleshooting?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json&tabs=dotnet#monitoring-availability"
          },
          {
            "name": "Supported metrics for Microsoft.Storage/storageAccounts",
            "url": "https://learn.microsoft.com/azure/azure-monitor/reference/supported-metrics/microsoft-storage-storageaccounts-metrics"
          }
        ],
        "deployments": [
          {
            "name": "Deploy SA Availability Alert",
            "template": "Deploy-SA-Availability-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Resource",
              "multiResource": false
            }
          }
        ],
        "guid": "b1a4849b-78a8-437f-8113-7c6f2dc34927"
      },
      {
        "name": "Throttling",
        "description": "The storage account will be throttled if throughput exceeds the account's tier limit. Increasing the file share or storage tier may be necessary.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "hpc",
          "alz"
        ],
        "properties": {
          "metricName": "Transactions",
          "dimensions": [
            {
              "name": "ResponseType",
              "operator": "Include",
              "values": [
                "SuccessWithThrottling SuccessWithShareIopsThrottling ClientShareIopsThrottlingError"
              ]
            },
            {
              "name": "FileShare",
              "operator": "Include",
              "values": [
                "SuccessWithShareEgressThrottling SuccessWithShareIngressThrottling SuccessWithShareIopsThrottling ClientShareEgressThrottlingError ClientShareIngressThrottlingError ClientShareIopsThrottlingError"
              ]
            }
          ],
          "metricNamespace": "Microsoft.Storage/storageAccounts/fileServices",
          "severity": 2,
          "windowSize": "PT15M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Total",
          "operator": "GreaterThanOrEqual",
          "threshold": 1,
          "criterionType": "StaticThresholdCriterion",
          "autoMitigate": false
        },
        "references": [
          {
            "name": "High latency, low throughput, or low IOPS",
            "url": "https://learn.microsoft.com/en-us/troubleshoot/azure/azure-storage/files-troubleshoot-performance?tabs=windows#high-latency-low-throughput-or-low-iops"
          },
          {
            "name": "Azure Files monitoring data reference",
            "url": "https://learn.microsoft.com/en-us/azure/storage/files/storage-files-monitoring-reference#metrics"
          }
        ],
        "deployments": [
          {
            "name": "Deploy SA Throttling Alert",
            "template": "Deploy-SA-Throttling-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Resource",
              "multiResource": false
            }
          }
        ],
        "guid": "5e544473-d84f-427d-869d-9d982619e4cb"
      },
      {
        "name": "QueueCount",
        "description": "The number of queues in the storage account.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-481"
        ],
        "properties": {
          "metricName": "QueueCount",
          "metricNamespace": "Microsoft.Storage/storageAccounts/queueServices",
          "severity": 0,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT1H",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('0')]",
          "autoMitigate": false
        },
        "references": [
          {
            "name": "Queue Storage Metrics",
            "url": "https://learn.microsoft.com/azure/storage/queues/monitor-queue-storage-reference#queue-storage-metrics"
          },
          {
            "name": "Best practices for monitoring Azure Queue Storage",
            "url": "https://learn.microsoft.com/azure/storage/queues/queues-storage-monitoring-scenarios?tabs=azure-powershell"
          }
        ],
        "guid": "f75dec98-78a3-4e42-954d-375fe3352857"
      },
      {
        "name": "FileShareCount",
        "description": "The number of file shares in the storage account.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-407"
        ],
        "properties": {
          "metricName": "FileShareCount",
          "metricNamespace": "Microsoft.Storage/storageAccounts/fileServices",
          "severity": 0,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT1H",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('0')]",
          "autoMitigate": false
        },
        "guid": "a4adc774-7ca4-4a4b-b2fa-514b9fcbbc80"
      },
      {
        "name": "UsedCapacity",
        "description": "The amount of storage used by the storage account. For standard storage accounts, it's the sum of capacity used by blob, table, file, and queue. For premium storage accounts and Blob storage accounts, it is the same as BlobCapacity or FileCapacity.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-42019",
          "hpc",
          "auto-generated",
          "agc-35128"
        ],
        "properties": {
          "metricName": "UsedCapacity",
          "metricNamespace": "Microsoft.Storage/storageAccounts",
          "severity": 3,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT1H",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('2251800000000000')]"
        },
        "references": [
          {
            "name": "Account Level Metrics",
            "url": "https://learn.microsoft.com/azure/azure-monitor/reference/supported-metrics/microsoft-storage-storageaccounts-metrics"
          },
          {
            "name": "Azure Storage Metric - Used Capacity",
            "url": "https://learn.microsoft.com/azure/storage/blobs/monitor-blob-storage-reference#account-level"
          }
        ],
        "guid": "b663a689-6db8-467d-8b5d-8cd34afe4b0e"
      },
      {
        "name": "Egress",
        "description": "The amount of egress data. This number includes egress to external client from Azure Storage as well as egress within Azure. As a result, this number does not reflect billable egress.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-3835",
          "hpc",
          "auto-generated",
          "agc-2980"
        ],
        "properties": {
          "metricName": "Egress",
          "metricNamespace": "Microsoft.Storage/storageAccounts",
          "severity": 2,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Total",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('60000000')]"
        },
        "references": [
          {
            "name": "Transaction Metrics",
            "url": "https://learn.microsoft.com/azure/storage/blobs/monitor-blob-storage-reference#transaction-metrics"
          },
          {
            "name": "Storage Account Metric Dimensions (all storage)",
            "url": "https://learn.microsoft.com/azure/storage/blobs/monitor-blob-storage-reference#metrics-dimensions"
          }
        ],
        "guid": "eb186756-b63b-408a-bbaf-ac94c1010287"
      },
      {
        "name": "Ingress",
        "description": "The amount of ingress data, in bytes. This number includes ingress from an external client into Azure Storage as well as ingress within Azure.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-2468",
          "hpc",
          "auto-generated",
          "agc-2078"
        ],
        "properties": {
          "metricName": "Ingress",
          "metricNamespace": "Microsoft.Storage/storageAccounts",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Total",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('1073741824')]"
        },
        "references": [
          {
            "name": "Transaction Metrics",
            "url": "https://learn.microsoft.com/azure/storage/blobs/monitor-blob-storage-reference#transaction-metrics"
          },
          {
            "name": "Storage Account Metric Dimensions (all storage)",
            "url": "https://learn.microsoft.com/azure/storage/blobs/monitor-blob-storage-reference#metrics-dimensions"
          }
        ],
        "guid": "5d872cb4-7f71-4275-81eb-98c968c0cadd"
      },
      {
        "name": "blobServices - BlobCapacity",
        "description": "The amount of storage used by the storage account's Blob service in bytes.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-1834"
        ],
        "properties": {
          "metricName": "BlobCapacity",
          "metricNamespace": "Microsoft.Storage/storageAccounts/blobServices",
          "severity": 3,
          "windowSize": "P1D",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('107374182400')]"
        },
        "references": [
          {
            "name": "Blob Storage Metrics",
            "url": "https://learn.microsoft.com/azure/storage/blobs/monitor-blob-storage-reference#blob-storage"
          },
          {
            "name": "Storage Account Metric Dimensions (Blob Storage)",
            "url": "https://learn.microsoft.com/azure/storage/blobs/monitor-blob-storage-reference#dimensions-specific-to-blob-storage"
          }
        ],
        "guid": "8c0aaea9-bcce-4c27-a090-ffe54b7e1d1c"
      },
      {
        "name": "blobServices - SuccessE2ELatency",
        "description": "The average end-to-end latency of successful requests made to a storage service or the specified API operation, in milliseconds. This value includes the required processing time within Azure Storage to read the request, send the response, and receive acknowledgment of the response.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-504",
          "hpc",
          "auto-generated",
          "agc-496"
        ],
        "properties": {
          "metricName": "SuccessE2ELatency",
          "metricNamespace": "Microsoft.Storage/storageAccounts/blobServices",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('1000')]"
        },
        "references": [
          {
            "name": "Verify throughput and latency metrics for a storage account",
            "url": "https://learn.microsoft.com/azure/storage/blobs/storage-blob-scalable-app-verify-metrics"
          },
          {
            "name": "Troubleshoot performance in Azure storage accounts",
            "url": "https://learn.microsoft.com/troubleshoot/azure/azure-storage/troubleshoot-storage-performance#metrics-show-high-successe2elatency-and-low-successserverlatency"
          }
        ],
        "guid": "0acc30dc-881d-46c9-b634-8cba507a263f"
      },
      {
        "name": "blobServices - SuccessServerLatency",
        "description": "The average time used to process a successful request by Azure Storage. This value does not include the network latency specified in SuccessE2ELatency.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-257",
          "hpc",
          "auto-generated",
          "agc-297"
        ],
        "properties": {
          "metricName": "SuccessServerLatency",
          "metricNamespace": "Microsoft.Storage/storageAccounts/blobServices",
          "severity": 2,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('1000')]"
        },
        "references": [
          {
            "name": "Trouble shoot performance in Azure storage accounts",
            "url": "https://learn.microsoft.com/troubleshoot/azure/azure-storage/troubleshoot-storage-performance"
          },
          {
            "name": "Verify throughput and latency metrics for a storage account",
            "url": "https://learn.microsoft.com/azure/storage/blobs/storage-blob-scalable-app-verify-metrics"
          },
          {
            "name": "Storage Transaction Metrics",
            "url": "https://learn.microsoft.com/azure/storage/blobs/monitor-blob-storage-reference#transaction-metrics"
          }
        ],
        "guid": "0a3689c7-b610-4c52-ae84-ab0640f3d6e4"
      },
      {
        "name": "blobServices - BlobCount",
        "description": "The number of blob objects stored in the storage account.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-277"
        ],
        "properties": {
          "metricName": "BlobCount",
          "metricNamespace": "Microsoft.Storage/storageAccounts/blobServices",
          "severity": 3,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('0')]"
        },
        "references": [
          {
            "name": "Monitor the use of a container",
            "url": "https://learn.microsoft.com/azure/storage/blobs/blob-storage-monitoring-scenarios#monitor-the-use-of-a-container"
          }
        ],
        "guid": "c4d93fac-a6b6-4731-a92a-c499b6fb2bcb"
      },
      {
        "name": "queueServices - QueueMessageCount",
        "description": "The number of unexpired queue messages in the storage account.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-2080"
        ],
        "properties": {
          "metricName": "QueueMessageCount",
          "metricNamespace": "Microsoft.Storage/storageAccounts/queueServices",
          "severity": 3,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('1000')]"
        },
        "references": [
          {
            "name": "Best practices for Azure Queue storage",
            "url": "https://learn.microsoft.com/azure/storage/queues/queues-storage-monitoring-scenarios?tabs=azure-powershell"
          },
          {
            "name": "Queue Storage Metrics",
            "url": "https://learn.microsoft.com/azure/storage/queues/monitor-queue-storage-reference#queue-storage-metrics"
          },
          {
            "name": "supported metrics for Microsoft.Storage/storageAccounts/queueServices",
            "url": "https://learn.microsoft.com/azure/azure-monitor/reference/supported-metrics/microsoft-storage-storageaccounts-queueservices-metrics"
          }
        ],
        "guid": "34769aaa-5014-4ced-bb08-9fabfba3d959"
      },
      {
        "name": "queueServices - QueueCapacity",
        "description": "The amount of Queue storage used by the storage account.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-427"
        ],
        "properties": {
          "metricName": "QueueCapacity",
          "metricNamespace": "Microsoft.Storage/storageAccounts/queueServices",
          "severity": 4,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('31457280')]"
        },
        "references": [
          {
            "name": "Queue Storage Metrics",
            "url": "https://learn.microsoft.com/azure/storage/queues/monitor-queue-storage-reference#queue-storage-metrics"
          },
          {
            "name": "Best practices for monitoring Azure Queue Storage",
            "url": "https://learn.microsoft.com/azure/storage/queues/queues-storage-monitoring-scenarios?tabs=azure-powershell"
          }
        ],
        "guid": "7815fc6f-bfb1-4474-9ea6-05e1449a2ed5"
      },
      {
        "name": "fileServices - FileCapacity",
        "description": "The amount of File storage used by the storage account.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-8269"
        ],
        "properties": {
          "metricName": "FileCapacity",
          "metricNamespace": "Microsoft.Storage/storageAccounts/fileServices",
          "severity": 2,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT15M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('96636764160')]"
        },
        "references": [
          {
            "name": "File Storage Metrics",
            "url": "https://learn.microsoft.com/azure/storage/files/storage-files-monitoring-scenarios#file-storage-metrics"
          }
        ],
        "guid": "26e09eae-c784-4e8f-a225-d3f13efff76f"
      },
      {
        "name": "fileServices - Transactions",
        "description": "The number of requests made to a storage service or the specified API operation. This number includes successful and failed requests, as well as requests which produced errors. Use ResponseType dimension for the number of different type of response.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-1467",
          "hpc",
          "auto-generated",
          "agc-1507"
        ],
        "properties": {
          "metricName": "Transactions",
          "metricNamespace": "Microsoft.Storage/storageAccounts/fileServices",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Total",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "dimensions": [
            {
              "operator": "include",
              "name": "responsetype",
              "values": [
                "success"
              ]
            },
            {
              "operator": "include",
              "name": "authentication",
              "values": [
                "anonymous"
              ]
            }
          ],
          "threshold": "[json('10')]"
        },
        "references": [
          {
            "name": "Identify storage accounts with no or low use",
            "url": "https://learn.microsoft.com/azure/storage/blobs/blob-storage-monitoring-scenarios#identify-storage-accounts-with-no-or-low-use"
          },
          {
            "name": "Monitor the use of a container",
            "url": "https://learn.microsoft.com/azure/storage/blobs/blob-storage-monitoring-scenarios#monitor-the-use-of-a-container"
          },
          {
            "name": "Storage Transaction Metrics",
            "url": "https://learn.microsoft.com/azure/storage/blobs/monitor-blob-storage-reference#transaction-metrics"
          }
        ],
        "guid": "c81d3e6c-5539-42ad-a95f-9bba504d91f0"
      },
      {
        "name": "fileServices - FileShareSnapshotCount",
        "description": "The number of snapshots present on the share in storage account's Files Service.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-617"
        ],
        "properties": {
          "metricName": "FileShareSnapshotCount",
          "metricNamespace": "Microsoft.Storage/storageAccounts/fileServices",
          "severity": 3,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT15M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('190')]"
        },
        "references": [
          {
            "name": "Azure Files monitoring data reference",
            "url": "https://learn.microsoft.com/azure/storage/files/storage-files-monitoring-reference#azure-files"
          }
        ],
        "guid": "8cbe449d-9264-4ae1-8221-5d97989005a8"
      },
      {
        "name": "fileServices - Availability",
        "description": "The percentage of availability for the storage service or the specified API operation. Availability is calculated by taking the TotalBillableRequests value and dividing it by the number of applicable requests, including those that produced unexpected errors. All unexpected errors result in reduced availability for the storage service or the specified API operation.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-585"
        ],
        "properties": {
          "metricName": "Availability",
          "metricNamespace": "Microsoft.Storage/storageAccounts/fileServices",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "LessThanOrEqual",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('99.9')]"
        },
        "guid": "45fef979-c27e-425a-a6c3-e5bd28b1eb86"
      },
      {
        "name": "fileServices - FileShareCapacityQuota",
        "description": "The upper limit on the amount of storage that can be used by Azure Files Service in bytes.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-578"
        ],
        "properties": {
          "metricName": "FileShareCapacityQuota",
          "metricNamespace": "Microsoft.Storage/storageAccounts/fileServices",
          "severity": 4,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('5222680231936')]"
        },
        "guid": "8660f357-83f9-4719-bdf3-bae57af2d967"
      }
    ],
    "$fxv#2": [
      {
        "name": "capacityPools/volumes - VolumeConsumedSizePercentage",
        "description": "The percentage of the volume consumed including snapshots.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-19726"
        ],
        "properties": {
          "metricName": "VolumeConsumedSizePercentage",
          "metricNamespace": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('80')]"
        },
        "guid": "d474e6d2-0b9a-4912-ae61-16dc23126b3f"
      },
      {
        "name": "capacityPools/volumes - VolumeLogicalSize",
        "description": "Logical size of the volume (used bytes)",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-1914"
        ],
        "properties": {
          "metricName": "VolumeLogicalSize",
          "metricNamespace": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
          "severity": 2,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT30M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('85899345920')]",
          "autoMitigate": false
        },
        "guid": "149f6b6c-4729-4da4-af00-bccbb1cce9ae"
      },
      {
        "name": "AverageReadLatency",
        "description": "Average read latency in milliseconds per operation",
        "type": "Metric",
        "verified": false,
        "visible": false,
        "tags": [
          "avd",
          "auto-generated",
          "agc-321",
          "hpc"
        ],
        "properties": {
          "metricName": "AverageReadLatency",
          "metricNamespace": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('20')]",
          "autoMitigate": false
        },
        "guid": "cb7001d3-8a0e-41ed-b281-44fee5379f06"
      },
      {
        "name": "capacityPools/volumes - AverageWriteLatency",
        "description": "Average write latency in milliseconds per operation",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-320",
          "hpc",
          "agc-375"
        ],
        "properties": {
          "metricName": "AverageWriteLatency",
          "metricNamespace": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('20')]"
        },
        "guid": "075f0066-51f6-4c36-8000-ce7070493674"
      },
      {
        "name": "capacityPools/volumes - AverageReadLatency",
        "description": "Average read latency in milliseconds per operation",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-374"
        ],
        "properties": {
          "metricName": "AverageReadLatency",
          "metricNamespace": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('20')]"
        },
        "guid": "30b0cb86-ba8b-4eeb-9067-88456ec403ad"
      },
      {
        "name": "capacityPools/volumes - CbsVolumeOperationComplete",
        "description": "Did the last volume backup or restore operation complete successfully? 1 if yes, 0 if no.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-305"
        ],
        "properties": {
          "metricName": "CbsVolumeOperationComplete",
          "metricNamespace": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
          "severity": 2,
          "windowSize": "PT30M",
          "evaluationFrequency": "PT30M",
          "timeAggregation": "Average",
          "operator": "LessThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('1')]"
        },
        "guid": "27768691-301d-4938-bd8a-85598c2b50c6"
      },
      {
        "name": "capacityPools/volumes - VolumeAllocatedSize",
        "description": "The provisioned size of a volume",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-301"
        ],
        "properties": {
          "metricName": "VolumeAllocatedSize",
          "metricNamespace": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('107374182400')]"
        },
        "guid": "1be09484-96ee-4399-8ed4-35f5f4b5c23e"
      }
    ],
    "$fxv#3": [
      {
        "name": "Available Memory Bytes (MBytes)",
        "description": "Amount of physical memory, in bytes, immediately available for allocation to a process or for system use in the Virtual Machine",
        "type": "Metric",
        "verified": false,
        "visible": false,
        "tags": [
          "alz",
          "avd",
          "hpc"
        ],
        "properties": {
          "metricName": "Available Memory Bytes",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 2,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "LessThan",
          "threshold": 1000,
          "criterionType": "StaticThresholdCriterion",
          "autoMitigate": false
        },
        "references": [
          {
            "name": "Supported Metrics for Microsoft.Compute/virtualMachines",
            "url": "https://learn.microsoft.com/azure/azure-monitor/reference/supported-metrics/microsoft-compute-virtualmachines-metrics"
          }
        ],
        "deployments": [
          {
            "name": "Deploy VM Available Memory Bytes (MBytes) Alert",
            "template": "Deploy-VM-AvailableMemory-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Resource",
              "multiResource": false
            }
          }
        ],
        "guid": "b0bd7c37-eb24-47c2-a032-f925594152ed"
      },
      {
        "name": "Data Disk Read Latency (ms)",
        "description": "Log Alert for Virtual Machine Data Disk Read Latency (ms)",
        "type": "Log",
        "verified": false,
        "visible": true,
        "tags": [
          "alz",
          "avd",
          "hpc"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThan",
          "timeAggregation": "Average",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT5M",
          "threshold": 30,
          "metricMeasureColumn": "AggregatedValue",
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "Computer",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "Disk",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "InsightsMetrics\n| where Origin == \"vm.azm.ms\"\n| where Namespace == \"LogicalDisk\" and Name == \"ReadLatencyMs\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Disk !in ('C:','/')\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated,15m), Computer, _ResourceId, Disk\n",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:10:00"
        },
        "references": [
          {
            "name": "Monitor virtual machines with Azure Monitor: Alerts",
            "url": "https://learn.microsoft.com/en-us/azure/azure-monitor/vm/monitor-virtual-machine-alerts#common-alert-rules"
          }
        ],
        "deployments": [
          {
            "name": "Deploy VM Data Disk Read Latency Alert",
            "template": "Deploy-VM-DataDiskReadLatency-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ],
        "guid": "abddd643-e7c7-411c-b13a-64fdbb406cc8"
      },
      {
        "name": "Data Disk Free Space Percentage",
        "description": "Log Alert for Virtual Machine Data Disk Free Space Percentage",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "alz",
          "avd",
          "hpc"
        ],
        "properties": {
          "severity": 2,
          "operator": "LessThan",
          "timeAggregation": "Average",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT5M",
          "threshold": 10,
          "metricMeasureColumn": "AggregatedValue",
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "Computer",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "Disk",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "InsightsMetrics\n| where Origin == \"vm.azm.ms\"\n| where Namespace == \"LogicalDisk\"and Name == \"FreeSpacePercentage\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Disk !in ('C:','/')\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated,15m), Computer, _ResourceId, Disk\n",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:10:00"
        },
        "references": [
          {
            "name": "Monitor virtual machines with Azure Monitor: Alerts",
            "url": "https://learn.microsoft.com/en-us/azure/azure-monitor/vm/monitor-virtual-machine-alerts#common-alert-rules"
          }
        ],
        "deployments": [
          {
            "name": "Deploy VM Data Disk Free Space Percentage Alert",
            "template": "Deploy-VM-DataDiskSpace-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ],
        "guid": "5dbf3a3d-7f08-4deb-a153-129c3485da84"
      },
      {
        "name": "Data Disk Write Latency (ms)",
        "description": "Log Alert for Virtual Machine Data Disk Write Latency (ms)",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "alz",
          "avd",
          "hpc"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThan",
          "timeAggregation": "Average",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT5M",
          "threshold": 30,
          "metricMeasureColumn": "AggregatedValue",
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "Computer",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "Disk",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "InsightsMetrics\n| where Origin == \"vm.azm.ms\"\n| where Namespace == \"LogicalDisk\" and Name == \"WriteLatencyMs\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| where Disk !in ('C:','/')\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated,15m), Computer, _ResourceId, Disk\n",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:10:00"
        },
        "references": [
          {
            "name": "Monitor virtual machines with Azure Monitor: Alerts",
            "url": "https://learn.microsoft.com/en-us/azure/azure-monitor/vm/monitor-virtual-machine-alerts#common-alert-rules"
          }
        ],
        "deployments": [
          {
            "name": "Deploy VM Data Disk Write Latency Alert",
            "template": "Deploy-VM-DataDiskWriteLatency-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ],
        "guid": "5c51e187-5b5d-428d-98d8-fb9ab4fea646"
      },
      {
        "name": "Heartbeat",
        "description": "Log Alert for Virtual Machine Heartbeat",
        "type": "Log",
        "verified": false,
        "visible": true,
        "properties": {
          "severity": 1,
          "operator": "GreaterThan",
          "timeAggregation": "Average",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT5M",
          "threshold": 10,
          "metricMeasureColumn": "AggregatedValue",
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "Computer",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "Heartbeat | summarize TimeGenerated=max(TimeGenerated) by Computer, _ResourceId | extend Duration = datetime_diff('minute',now(),TimeGenerated) | summarize AggregatedValue = min(Duration) by Computer, bin(TimeGenerated,5m), _ResourceId",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:10:00"
        },
        "references": [
          {
            "name": "Monitor virtual machines with Azure Monitor: Alerts",
            "url": "https://learn.microsoft.com/en-us/azure/azure-monitor/vm/monitor-virtual-machine-alerts#common-alert-rules"
          }
        ],
        "deployments": [
          {
            "name": "Deploy VM HeartBeat Alert for all VMs in the subscription",
            "template": "Deploy-VM-HeartBeat-Alert.json",
            "type": "Policy",
            "tags": [
              "alz",
              "hpc"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          },
          {
            "name": "Deploy VM HeartBeat Alert for VMs in the resource group",
            "template": "Deploy-VM-HeartBeatAlertRG.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Resource",
              "multiResource": false
            }
          }
        ],
        "guid": "b3a5f580-77a6-4161-9a1e-7370ce783e67"
      },
      {
        "name": "Network Read (bytes/sec)",
        "description": "Log Alert for Virtual Machine Network Read (bytes/sec)",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "alz",
          "avd",
          "hpc"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThan",
          "timeAggregation": "Average",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT5M",
          "threshold": 10000000,
          "metricMeasureColumn": "AggregatedValue",
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "Computer",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "InsightsMetrics | where Origin == \"vm.azm.ms\" | where Namespace == \"Network\" and Name == \"ReadBytesPerSecond\" | extend NetworkInterface=tostring(todynamic(Tags)[\"vm.azm.ms/networkDeviceId\"]) | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, NetworkInterface",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:10:00"
        },
        "references": [
          {
            "name": "Monitor virtual machines with Azure Monitor: Alerts",
            "url": "https://learn.microsoft.com/en-us/azure/azure-monitor/vm/monitor-virtual-machine-alerts#common-alert-rules"
          }
        ],
        "deployments": [
          {
            "name": "Deploy VM Nework Read (bytes/sec) Alert",
            "template": "Deploy-VM-NetworkIn-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ],
        "guid": "b565e73f-71c8-4bb3-a792-903b67775497"
      },
      {
        "name": "Network Write (bytes/sec)",
        "description": "Log Alert for Virtual Machine Network Write (bytes/sec)",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "alz",
          "avd",
          "hpc"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThan",
          "timeAggregation": "Average",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT5M",
          "threshold": 10000000,
          "metricMeasureColumn": "AggregatedValue",
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "Computer",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "InsightsMetrics | where Origin == \"vm.azm.ms\" | where Namespace == \"Network\" and Name == \"WriteBytesPerSecond\" | extend NetworkInterface=tostring(todynamic(Tags)[\"vm.azm.ms/networkDeviceId\"]) | summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, NetworkInterface",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:10:00"
        },
        "references": [
          {
            "name": "Monitor virtual machines with Azure Monitor: Alerts",
            "url": "https://learn.microsoft.com/en-us/azure/azure-monitor/vm/monitor-virtual-machine-alerts#common-alert-rules"
          }
        ],
        "deployments": [
          {
            "name": "Deploy VM Nework Write (bytes/sec) Alert",
            "template": "Deploy-VM-NetworkOut-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ],
        "guid": "552ca1f1-d69d-4bc2-b044-19f81b225fd4"
      },
      {
        "name": "OS Disk Read Latency (ms)",
        "description": "Log Alert for Virtual Machine Data OS Read Latency (ms)",
        "type": "Log",
        "verified": false,
        "visible": true,
        "tags": [
          "alz",
          "avd",
          "hpc"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThan",
          "timeAggregation": "Average",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT5M",
          "threshold": 30,
          "metricMeasureColumn": "AggregatedValue",
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "Computer",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "Disk",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "InsightsMetrics\n| where Origin == \"vm.azm.ms\"\n| where Namespace == \"LogicalDisk\" and Name == \"ReadLatencyMs\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk\n",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:10:00"
        },
        "references": [
          {
            "name": "Monitor virtual machines with Azure Monitor: Alerts",
            "url": "https://learn.microsoft.com/en-us/azure/azure-monitor/vm/monitor-virtual-machine-alerts#common-alert-rules"
          }
        ],
        "deployments": [
          {
            "name": "Deploy VM OS Disk Read Latency Alert",
            "template": "Deploy-VM-OSDiskReadLatency-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ],
        "guid": "299ce963-728a-48c8-8b7d-e05b5f8a8f38"
      },
      {
        "name": "OS Disk Free Space Percentage",
        "description": "Log Alert for Virtual Machine OS Disk Free Space Percentage",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "alz",
          "avd",
          "hpc"
        ],
        "properties": {
          "severity": 2,
          "operator": "LessThan",
          "timeAggregation": "Average",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT5M",
          "threshold": 10,
          "metricMeasureColumn": "AggregatedValue",
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "Computer",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "Disk",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "InsightsMetrics\n| where Origin == \"vm.azm.ms\"\n| where Namespace == \"LogicalDisk\" and Name == \"FreeSpacePercentage\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk\n",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:10:00"
        },
        "references": [
          {
            "name": "Monitor virtual machines with Azure Monitor: Alerts",
            "url": "https://learn.microsoft.com/en-us/azure/azure-monitor/vm/monitor-virtual-machine-alerts#common-alert-rules"
          }
        ],
        "deployments": [
          {
            "name": "Deploy VM OS Disk Free Space Percentage Alert",
            "template": "Deploy-VM-OSDiskSpace-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ],
        "guid": "dca7af9f-cad2-4751-a61f-77d92c2ce523"
      },
      {
        "name": "OS Disk Write Latency (ms)",
        "description": "Log Alert for Virtual Machine OS Disk Write Latency (ms)",
        "type": "Log",
        "verified": false,
        "visible": true,
        "tags": [
          "alz",
          "avd",
          "hpc"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThan",
          "timeAggregation": "Average",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT5M",
          "threshold": 50,
          "metricMeasureColumn": "AggregatedValue",
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "Computer",
              "operator": "Include",
              "values": [
                "*"
              ]
            },
            {
              "name": "Disk",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "InsightsMetrics| where Origin == \"vm.azm.ms\"\n| where Namespace == \"LogicalDisk\" and Name == \"WriteLatencyMs\"\n| extend Disk=tostring(todynamic(Tags)[\"vm.azm.ms/mountId\"])\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId, Disk\n",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:10:00"
        },
        "references": [
          {
            "name": "Monitor virtual machines with Azure Monitor: Alerts",
            "url": "https://learn.microsoft.com/en-us/azure/azure-monitor/vm/monitor-virtual-machine-alerts#common-alert-rules"
          }
        ],
        "deployments": [
          {
            "name": "Deploy VM OS Disk Write Latency Alert",
            "template": "Deploy-VM-OSDiskWriteLatency-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ],
        "guid": "37d9da12-88e6-4c01-8772-384920d34458"
      },
      {
        "name": "Processor Utilization Percentage",
        "description": "Log Alert for Virtual Machine Processor Utilization Percentage",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "alz",
          "avd",
          "hpc"
        ],
        "properties": {
          "severity": 2,
          "operator": "GreaterThan",
          "timeAggregation": "Average",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT5M",
          "threshold": 85,
          "metricMeasureColumn": "AggregatedValue",
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "Computer",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "InsightsMetrics\n| where Origin == \"vm.azm.ms\"\n| where Namespace == \"Processor\" and Name == \"UtilizationPercentage\"\n| summarize AggregatedValue = avg(Val) by bin(TimeGenerated, 15m), Computer, _ResourceId\n",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:10:00"
        },
        "references": [
          {
            "name": "Monitor virtual machines with Azure Monitor: Alerts",
            "url": "https://learn.microsoft.com/en-us/azure/azure-monitor/vm/monitor-virtual-machine-alerts#common-alert-rules"
          }
        ],
        "deployments": [
          {
            "name": "Deploy VM Processor Utilization Percentage Alert",
            "template": "Deploy-VM-PercentCPU-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ],
        "guid": "56d57b79-b7c3-4a17-a96b-3fc7152d9c5c"
      },
      {
        "name": "Available Memory Percentage",
        "description": "Log Alert for Virtual Machine Available Memory Percentage",
        "type": "Log",
        "verified": true,
        "visible": true,
        "tags": [
          "alz",
          "avd",
          "hpc"
        ],
        "properties": {
          "severity": 2,
          "operator": "LessThan",
          "timeAggregation": "Average",
          "windowSize": "PT15M",
          "evaluationFrequency": "PT5M",
          "threshold": 10,
          "metricMeasureColumn": "AggregatedValue",
          "resouceIdColumn": "_ResourceId",
          "dimensions": [
            {
              "name": "Computer",
              "operator": "Include",
              "values": [
                "*"
              ]
            }
          ],
          "failingPeriods": {
            "numberOfEvaluationPeriods": 1,
            "minFailingPeriodsToAlert": 1
          },
          "query": "InsightsMetrics\n| where Origin == \"vm.azm.ms\"\n| where Namespace == \"Memory\" and Name == \"AvailableMB\"\n| extend TotalMemory = toreal(todynamic(Tags)[\"vm.azm.ms/memorySizeMB\"])\n| extend AvailableMemoryPercentage = (toreal(Val) / TotalMemory) * 100.0\n| summarize AggregatedValue = avg(AvailableMemoryPercentage) by bin(TimeGenerated, 15m), Computer, _ResourceId\n",
          "autoMitigate": true,
          "autoResolve": true,
          "autoResolveTime": "0:10:00"
        },
        "references": [
          {
            "name": "Monitor virtual machines with Azure Monitor: Alerts",
            "url": "https://learn.microsoft.com/en-us/azure/azure-monitor/vm/monitor-virtual-machine-alerts#common-alert-rules"
          }
        ],
        "deployments": [
          {
            "name": "Deploy VM Available Memory Percentage Alert",
            "template": "Deploy-VM-PercentMemory-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "multiResource": false
            }
          }
        ],
        "guid": "69912da3-8d8d-4d57-884a-97c2bdd03bdd"
      },
      {
        "name": "Percentage CPU",
        "description": "The percentage of allocated compute units that are currently in use by the Virtual Machine(s)",
        "type": "Metric",
        "verified": true,
        "visible": true,
        "tags": null,
        "properties": {
          "metricName": "Percentage CPU",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": 80
        },
        "guid": "a9bac9fd-2382-4ce1-b68b-8898caf45038"
      },
      {
        "name": "Data Disk IOPS Consumed Percentage",
        "description": "Percentage of data disk I/Os consumed per minute. Only available on VM series that support premium storage.",
        "type": "Metric",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "metricName": "Data Disk IOPS Consumed Percentage",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('95')]"
        },
        "guid": "b0cbb9f8-cc67-4e7d-95a8-5a058c6de7e0"
      },
      {
        "name": "OS Disk IOPS Consumed Percentage",
        "description": "Percentage of operating system disk I/Os consumed per minute. Only available on VM series that support premium storage.",
        "type": "Metric",
        "verified": true,
        "visible": true,
        "tags": [
          "avd"
        ],
        "properties": {
          "metricName": "OS Disk IOPS Consumed Percentage",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('95')]"
        },
        "guid": "a2bf3c43-d327-473b-9204-f77e2a0fe398"
      },
      {
        "name": "Available Memory Bytes",
        "description": "Amount of physical memory, in bytes, immediately available for allocation to a process or for system use in the Virtual Machine",
        "type": "Metric",
        "verified": true,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-130712",
          "hpc"
        ],
        "properties": {
          "metricName": "Available Memory Bytes",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "LessThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": 1000000000
        },
        "guid": "bf1e0006-6089-4f92-a115-fc83aa0fbdd5"
      },
      {
        "name": "Network In Total",
        "description": "The number of bytes received on all network interfaces by the Virtual Machine(s) (Incoming Traffic)",
        "type": "Metric",
        "verified": true,
        "visible": true,
        "tags": null,
        "properties": {
          "metricName": "Network In Total",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Total",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": 500000000000
        },
        "guid": "ea4501a3-1e77-4df1-ab61-3ee28ae529eb"
      },
      {
        "name": "Network Out Total",
        "description": "The number of bytes out on all network interfaces by the Virtual Machine(s) (Outgoing Traffic)",
        "type": "Metric",
        "verified": true,
        "visible": true,
        "tags": null,
        "properties": {
          "metricName": "Network Out Total",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Total",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": 200000000000
        },
        "guid": "e2028144-b142-445c-b544-3bb438537c8f"
      },
      {
        "name": "VmAvailabilityMetric",
        "description": "Measure of Availability of Virtual machines over time.",
        "type": "Metric",
        "verified": true,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-83394",
          "hpc"
        ],
        "properties": {
          "metricName": "VmAvailabilityMetric",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "LessThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": 1
        },
        "guid": "3fa5376a-705a-48e4-b314-6282a74c9f7c"
      },
      {
        "name": "OS Disk Bandwidth Consumed Percentage",
        "description": "Percentage of operating system disk bandwidth consumed per minute. Only available on VM series that support premium storage.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-9986",
          "avd"
        ],
        "properties": {
          "metricName": "OS Disk Bandwidth Consumed Percentage",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 2,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('90')]"
        },
        "guid": "f7e19635-0118-4040-83d5-2f4c2150aef1"
      },
      {
        "name": "Inbound Flows",
        "description": "Inbound Flows are number of current flows in the inbound direction (traffic going into the VM)",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-8620"
        ],
        "properties": {
          "metricName": "Inbound Flows",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT15M",
          "evaluationFrequency": "PT15M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('100000')]"
        },
        "guid": "6de4e570-4270-4e9b-949e-5680b061e7fd"
      },
      {
        "name": "Data Disk Bandwidth Consumed Percentage",
        "description": "Percentage of data disk bandwidth consumed per minute. Only available on VM series that support premium storage.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-8551"
        ],
        "properties": {
          "metricName": "Data Disk Bandwidth Consumed Percentage",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('90')]"
        },
        "guid": "b57b0749-f851-4c3d-b7fb-7cf26f3bf16a"
      },
      {
        "name": "Outbound Flows",
        "description": "Outbound Flows are number of current flows in the outbound direction (traffic going out of the VM)",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-8472"
        ],
        "properties": {
          "metricName": "Outbound Flows",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT15M",
          "evaluationFrequency": "PT15M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('100000')]"
        },
        "guid": "a477bf96-4b0f-471c-b5d3-0acdb59612e6"
      },
      {
        "name": "Data Disk Queue Depth",
        "description": "Data Disk Queue Depth(or Queue Length)",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-8619",
          "hpc",
          "agc-6701"
        ],
        "properties": {
          "metricName": "Data Disk Queue Depth",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 2,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('100')]"
        },
        "guid": "040bc9c3-da5c-4fd0-b160-979ce89364ae"
      },
      {
        "name": "CPU Credits Remaining",
        "description": "Total number of credits available to burst. Only available on B-series burstable VMs",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-4417"
        ],
        "properties": {
          "metricName": "CPU Credits Remaining",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "LessThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('5')]"
        },
        "guid": "821888a1-6490-4a2d-8850-bdc45057a853"
      },
      {
        "name": "OS Disk Queue Depth",
        "description": "OS Disk Queue Depth(or Queue Length)",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-3666"
        ],
        "properties": {
          "metricName": "OS Disk Queue Depth",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 2,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('10')]"
        },
        "guid": "36262245-4c8a-4143-9ab4-68e9c23ae19a"
      },
      {
        "name": "VM Cached IOPS Consumed Percentage",
        "description": "Percentage of cached disk IOPS consumed by the VM. Only available on VM series that support premium storage.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-2736"
        ],
        "properties": {
          "metricName": "VM Cached IOPS Consumed Percentage",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('90')]"
        },
        "guid": "c878115f-2a89-446e-8980-ef4f152120c5"
      },
      {
        "name": "VM Cached Bandwidth Consumed Percentage",
        "description": "Percentage of cached disk bandwidth consumed by the VM. Only available on VM series that support premium storage.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-2662"
        ],
        "properties": {
          "metricName": "VM Cached Bandwidth Consumed Percentage",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('90')]"
        },
        "guid": "eb85f15b-b705-418f-b8ed-93d8cc7a9a6c"
      },
      {
        "name": "VM Uncached IOPS Consumed Percentage",
        "description": "Percentage of uncached disk IOPS consumed by the VM. Only available on VM series that support premium storage.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-2138"
        ],
        "properties": {
          "metricName": "VM Uncached IOPS Consumed Percentage",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('90')]"
        },
        "guid": "765ceb5b-ec1d-44d7-b94d-bb139030df81"
      },
      {
        "name": "VM Uncached Bandwidth Consumed Percentage",
        "description": "Percentage of uncached disk bandwidth consumed by the VM. Only available on VM series that support premium storage.",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-2134"
        ],
        "properties": {
          "metricName": "VM Uncached Bandwidth Consumed Percentage",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('90')]"
        },
        "guid": "e3981e7b-fd8b-4e07-bb68-d598c020c12d"
      },
      {
        "name": "Disk Write Operations/Sec",
        "description": "Disk Write IOPS",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-1534"
        ],
        "properties": {
          "metricName": "Disk Write Operations/Sec",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('10')]"
        },
        "guid": "edff41cb-d9b8-46ba-ba39-42747c1a4c4b"
      },
      {
        "name": "OS Disk Write Bytes/sec",
        "description": "Bytes/Sec written to a single disk during monitoring period for OS disk",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-1023"
        ],
        "properties": {
          "metricName": "OS Disk Write Bytes/sec",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('48000000')]"
        },
        "guid": "929b095e-5ea1-48b4-bf4e-bfc1a941a908"
      },
      {
        "name": "CPU Credits Consumed",
        "description": "Total number of credits consumed by the Virtual Machine. Only available on B-series burstable VMs",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-1010"
        ],
        "properties": {
          "metricName": "CPU Credits Consumed",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('80')]"
        },
        "guid": "a407ae10-6263-449c-81b9-172760d6dc6d"
      },
      {
        "name": "Data Disk Write Bytes/sec",
        "description": "Bytes/Sec written to a single disk during monitoring period",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-960"
        ],
        "properties": {
          "metricName": "Data Disk Write Bytes/sec",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('10000000')]"
        },
        "guid": "e45d685d-14c4-4422-8096-6f11d628fb20"
      },
      {
        "name": "Disk Read Operations/Sec",
        "description": "Disk Read IOPS",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-674"
        ],
        "properties": {
          "metricName": "Disk Read Operations/Sec",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('400')]"
        },
        "guid": "8bc489c0-d2f7-43c1-9bb7-478c9503fb2e"
      },
      {
        "name": "Data Disk Max Burst IOPS",
        "description": "Maximum IOPS Data Disk can achieve with bursting",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-458"
        ],
        "properties": {
          "metricName": "Data Disk Max Burst IOPS",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT30M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('3750')]"
        },
        "guid": "9b0f41af-1c52-4890-a23a-3bfebfee1154"
      },
      {
        "name": "Data Disk Read Operations/Sec",
        "description": "Read IOPS from a single disk during monitoring period",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-442"
        ],
        "properties": {
          "metricName": "Data Disk Read Operations/Sec",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 1,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('100')]"
        },
        "guid": "3c5518ea-9a0f-44ff-b197-47b3d6db060b"
      },
      {
        "name": "Disk Write Bytes",
        "description": "Bytes written to disk during monitoring period",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-367"
        ],
        "properties": {
          "metricName": "Disk Write Bytes",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Total",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('3500000000')]"
        },
        "guid": "b1cc650c-24fe-4f9e-a2ec-5757816526c0"
      },
      {
        "name": "Data Disk Write Operations/Sec",
        "description": "Write IOPS from a single disk during monitoring period",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "auto-generated",
          "agc-341"
        ],
        "properties": {
          "metricName": "Data Disk Write Operations/Sec",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 0,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT5M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('50')]"
        },
        "guid": "326b359d-e0a2-4055-8e1f-f9c5f9df5599"
      },
      {
        "name": "OS Disk Max Burst IOPS",
        "description": "Maximum IOPS OS Disk can achieve with bursting",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-303"
        ],
        "properties": {
          "metricName": "OS Disk Max Burst IOPS",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT1H",
          "evaluationFrequency": "PT30M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('3500')]"
        },
        "guid": "916dc60b-b2d2-4708-9fa4-6a36b244f499"
      },
      {
        "name": "Disk Read Bytes",
        "description": "Bytes read from disk during monitoring period",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-301"
        ],
        "properties": {
          "metricName": "Disk Read Bytes",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 3,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Total",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('4000000000')]"
        },
        "guid": "b9221998-f2bb-4ae8-b2c8-f9c4750e06f7"
      },
      {
        "name": "OS Disk Write Operations/Sec",
        "description": "Write IOPS from a single disk during monitoring period for OS disk",
        "type": "Metric",
        "verified": false,
        "visible": true,
        "tags": [
          "avd",
          "auto-generated",
          "agc-291"
        ],
        "properties": {
          "metricName": "OS Disk Write Operations/Sec",
          "metricNamespace": "Microsoft.Compute/virtualMachines",
          "severity": 2,
          "windowSize": "PT5M",
          "evaluationFrequency": "PT1M",
          "timeAggregation": "Average",
          "operator": "GreaterThan",
          "criterionType": "StaticThresholdCriterion",
          "threshold": "[json('200')]"
        },
        "guid": "3be4037a-c692-402d-843d-b3fe43053edf"
      }
    ],
    "$fxv#4": [
      {
        "name": "Resource Health Unhealthy",
        "description": "Resource Health Unhealthy Alert",
        "type": "ActivityLog",
        "verified": false,
        "visible": true,
        "tags": [
          "alz"
        ],
        "properties": {
          "category": "ResourceHealth",
          "causes": [
            "PlatoformInitiated",
            "UserInitiated"
          ],
          "currentHealthStatus": [
            "Degraded",
            "Unavailable"
          ]
        },
        "references": [
          {
            "name": "Resource Health",
            "url": "https://learn.microsoft.com/azure/service-health/resource-health-overview"
          },
          {
            "name": "Best practices for setting up service health alerts",
            "url": "https://www.microsoft.com/videoplayer/embed/RE2OtUa"
          }
        ],
        "deployments": [
          {
            "name": "Deploy Resource Health Unhealthy Alert",
            "template": "Deploy-ActivityLog-ResourceHealth-UnHealthly-Alert.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "policyScope": "managementGroup",
              "documented": true,
              "alertName": "ResourceHealthUnhealthyAlert"
            }
          }
        ],
        "guid": "afcf3ad4-93c9-46e4-bdb7-3a8e9af405d1"
      },
      {
        "name": "Service Health Advisory",
        "description": "Service Health Advisory Alert",
        "type": "ActivityLog",
        "verified": false,
        "visible": true,
        "tags": [
          "alz"
        ],
        "properties": {
          "category": "ServiceHealth",
          "incidentType": "ActionRequired"
        },
        "references": [
          {
            "name": "Activity Log Service Notifications",
            "url": "https://learn.microsoft.com/azure/service-health/alerts-activity-log-service-notifications-portal"
          },
          {
            "name": "Best practices for setting up service health alerts",
            "url": "https://www.microsoft.com/videoplayer/embed/RE2OtUa"
          }
        ],
        "deployments": [
          {
            "name": "Deploy Service Health Advisory Alert",
            "template": "Deploy-ActivityLog-ServiceHealth-Health.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "policyScope": "managementGroup",
              "documented": true,
              "alertName": "ServiceHealthAdvisoryEvent"
            }
          }
        ],
        "guid": "7b56e46e-8fbf-404d-a1e5-fbb3d9ea8d7e"
      },
      {
        "name": "Service Health Incident",
        "description": "Service Health Incident Alert",
        "type": "ActivityLog",
        "verified": false,
        "visible": true,
        "tags": [
          "alz"
        ],
        "properties": {
          "category": "ServiceHealth",
          "incidentType": "Incident"
        },
        "references": [
          {
            "name": "Activity Log Service Notifications",
            "url": "https://learn.microsoft.com/azure/service-health/alerts-activity-log-service-notifications-portal"
          },
          {
            "name": "Best practices for setting up service health alerts",
            "url": "https://www.microsoft.com/videoplayer/embed/RE2OtUa"
          }
        ],
        "deployments": [
          {
            "name": "Deploy Service Health Incident Alert",
            "template": "Deploy-ActivityLog-ServiceHealth-Incident.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "policyScope": "managementGroup",
              "documented": true,
              "alertName": "ServiceHealthIncident"
            }
          }
        ],
        "guid": "f0dfdd7b-8e50-4a96-ba7f-9a58280f0df0"
      },
      {
        "name": "Service Health Maintenance",
        "description": "Service Health Maintenance Alert",
        "type": "ActivityLog",
        "verified": false,
        "visible": true,
        "tags": [
          "alz"
        ],
        "properties": {
          "category": "ServiceHealth",
          "incidentType": "Maintenance"
        },
        "references": [
          {
            "name": "Activity Log Service Notifications",
            "url": "https://learn.microsoft.com/azure/service-health/alerts-activity-log-service-notifications-portal"
          },
          {
            "name": "Best practices for setting up service health alerts",
            "url": "https://www.microsoft.com/videoplayer/embed/RE2OtUa"
          }
        ],
        "deployments": [
          {
            "name": "Deploy Service Health Maintenance Alert",
            "template": "Deploy-ActivityLog-ServiceHealth-Maintenance.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "policyScope": "managementGroup",
              "documented": true,
              "alertName": "ServiceHealthPlannedMaintenance"
            }
          }
        ],
        "guid": "26a33edf-0698-424d-aae2-6bcd5af323d5"
      },
      {
        "name": "Service Health Security",
        "description": "Service Health Security Alert",
        "type": "ActivityLog",
        "verified": false,
        "visible": true,
        "tags": [
          "alz"
        ],
        "properties": {
          "category": "ServiceHealth",
          "incidentType": "Security"
        },
        "references": [
          {
            "name": "Activity Log Service Notifications",
            "url": "https://learn.microsoft.com/azure/service-health/alerts-activity-log-service-notifications-portal"
          },
          {
            "name": "Best practices for setting up service health alerts",
            "url": "https://www.microsoft.com/videoplayer/embed/RE2OtUa"
          }
        ],
        "deployments": [
          {
            "name": "Deploy Service Health Security Advisory Alert",
            "template": "Deploy-ActivityLog-ServiceHealth-Security.json",
            "type": "Policy",
            "tags": [
              "alz"
            ],
            "properties": {
              "scope": "Subscription",
              "policyScope": "managementGroup",
              "documented": true,
              "alertName": "ServiceHealthSecurityIncident"
            }
          }
        ],
        "guid": "89dbd4e4-f709-47c6-a243-4207678c8473"
      }
    ],
    "AMBAalertsHostPool": "[variables('$fxv#0')]",
    "AMBAalertsStorage": "[variables('$fxv#1')]",
    "AMBAalertsANF": "[variables('$fxv#2')]",
    "AMBAalertsVM": "[variables('$fxv#3')]",
    "AMBAalertsSvcHealth": "[variables('$fxv#4')]",
    "ActionGroupName": "[format('ag-avdmetrics-{0}-{1}', parameters('Environment'), parameters('Location'))]",
    "AlertDescriptionHeader": "Automated AVD Alert Deployment Solution (v3.0.0)\n",
    "ResourceGroupCreate": "[if(equals(parameters('ResourceGroupStatus'), 'New'), true(), false())]",
    "VMScopeOnly": [
      "Network In Total",
      "Network Out Total",
      "Inbound Flows",
      "Outbound Flows"
    ],
    "VMMetricAlerts": "[filter(variables('AMBAalertsVM'), lambda('x', not(contains(variables('VMScopeOnly'), lambdaVariables('x').name))))]",
    "VMScopeAlerts": "[filter(variables('AMBAalertsVM'), lambda('x', contains(variables('VMScopeOnly'), lambdaVariables('x').name)))]",
    "cuaid": "b8b4a533-1bb2-402f-bbd9-3055d00d885a",
    "PidcuaAvdPatternDeploymentName": "[take(format('pid-{0}-{1}', variables('cuaid'), uniqueString(parameters('Location'), subscription().displayName, parameters('time'))), 64)]"
  },
  "resources": [
    {
      "condition": "[not(parameters('optoutTelemetry'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('PidcuaAvdPatternDeploymentName')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "17687441398553407122"
            }
          },
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "linked_RG_AVDMetrics",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "Name": {
            "value": "[parameters('ResourceGroupName')]"
          },
          "ResourceGroupCreate": {
            "value": "[variables('ResourceGroupCreate')]"
          },
          "Tags": "[if(contains(parameters('Tags'), 'Microsoft.Resources/resourceGroups'), createObject('value', parameters('Tags')['Microsoft.Resources/resourceGroups']), createObject('value', createObject()))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "2271342651164647317"
            }
          },
          "parameters": {
            "Location": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            },
            "ResourceGroupCreate": {
              "type": "bool"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "condition": "[parameters('ResourceGroupCreate')]",
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2019-05-01",
              "name": "[parameters('Name')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]"
            }
          ],
          "outputs": {
            "resourceGroupIdAlerts": {
              "type": "string",
              "value": "[if(parameters('ResourceGroupCreate'), subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('Name')), subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('Name')))]"
            },
            "resourceGroupNameAlerts": {
              "type": "string",
              "value": "[if(parameters('ResourceGroupCreate'), parameters('Name'), parameters('Name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "linked_MonitoringResourcesDeployment",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "AlertNamePrefix": {
            "value": "[parameters('AlertNamePrefix')]"
          },
          "AlertDescriptionHeader": {
            "value": "[variables('AlertDescriptionHeader')]"
          },
          "AMBAalertsHostPool": {
            "value": "[variables('AMBAalertsHostPool')]"
          },
          "AMBAalertsStorage": {
            "value": "[variables('AlertsStorage')]"
          },
          "AMBAalertsANF": {
            "value": "[variables('AMBAalertsANF')]"
          },
          "AMBAalertsVM": {
            "value": "[variables('VMMetricAlerts')]"
          },
          "AMBAalertsSvcHealth": {
            "value": "[variables('AMBAalertsSvcHealth')]"
          },
          "AutoResolveAlert": {
            "value": "[parameters('AutoResolveAlert')]"
          },
          "DistributionGroup": {
            "value": "[parameters('DistributionGroup')]"
          },
          "Environment": {
            "value": "[parameters('Environment')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LogAnalyticsWorkspaceResourceId": {
            "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
          },
          "SetEnabled": {
            "value": "[parameters('SetEnabled')]"
          },
          "StorageAccountResourceIds": {
            "value": "[parameters('StorageAccountResourceIds')]"
          },
          "ActionGroupName": {
            "value": "[variables('ActionGroupName')]"
          },
          "ANFVolumeResourceIds": {
            "value": "[parameters('ANFVolumeResourceIds')]"
          },
          "Tags": {
            "value": "[parameters('Tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "17512628537605938011"
            }
          },
          "parameters": {
            "ActionGroupName": {
              "type": "string"
            },
            "AlertDescriptionHeader": {
              "type": "string"
            },
            "AlertNamePrefix": {
              "type": "string"
            },
            "AMBAalertsHostPool": {
              "type": "array"
            },
            "AMBAalertsStorage": {
              "type": "array"
            },
            "AMBAalertsANF": {
              "type": "array"
            },
            "AMBAalertsVM": {
              "type": "array"
            },
            "AMBAalertsSvcHealth": {
              "type": "array"
            },
            "AutoResolveAlert": {
              "type": "bool"
            },
            "ANFVolumeResourceIds": {
              "type": "array"
            },
            "DistributionGroup": {
              "type": "string"
            },
            "Environment": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LogAnalyticsWorkspaceResourceId": {
              "type": "string"
            },
            "SetEnabled": {
              "type": "bool"
            },
            "StorageAccountResourceIds": {
              "type": "array"
            },
            "Tags": {
              "type": "object"
            }
          },
          "variables": {
            "SubscriptionId": "[subscription().subscriptionId]"
          },
          "resources": [
            {
              "type": "Microsoft.Insights/actionGroups",
              "apiVersion": "2023-01-01",
              "name": "[parameters('ActionGroupName')]",
              "location": "[parameters('Location')]",
              "tags": "[if(contains(parameters('Tags'), 'Microsoft.Insights/actionGroups'), parameters('Tags')['Microsoft.Insights/actionGroups'], createObject())]",
              "properties": {
                "groupShortName": "AVDMetrics",
                "enabled": true,
                "emailReceivers": [
                  {
                    "emailAddress": "[parameters('DistributionGroup')]",
                    "name": "AVD Operations Admin(s)",
                    "useCommonAlertSchema": true
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "lnk_AlertsMetricVM",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "AlertDescriptionHeader": {
                    "value": "[parameters('AlertDescriptionHeader')]"
                  },
                  "AlertNamePrefix": {
                    "value": "[format('{0}-VM', parameters('AlertNamePrefix'))]"
                  },
                  "AMBAalerts": {
                    "value": "[parameters('AMBAalertsVM')]"
                  },
                  "LogAnalyticsWorkspaceResourceId": {
                    "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                  },
                  "Environment": {
                    "value": "[parameters('Environment')]"
                  },
                  "MetricScope": {
                    "value": "[subscription().id]"
                  },
                  "SetEnabled": {
                    "value": "[parameters('SetEnabled')]"
                  },
                  "AutoMitigate": {
                    "value": "[parameters('AutoResolveAlert')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "ActionGroupId": {
                    "value": "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "12777234175232882970"
                    }
                  },
                  "parameters": {
                    "AutoMitigate": {
                      "type": "bool"
                    },
                    "AMBAalerts": {
                      "type": "array"
                    },
                    "AlertNamePrefix": {
                      "type": "string"
                    },
                    "AlertDescriptionHeader": {
                      "type": "string"
                    },
                    "ActionGroupId": {
                      "type": "string"
                    },
                    "SetEnabled": {
                      "type": "bool"
                    },
                    "Environment": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "MetricScope": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "metricAlerts",
                        "count": "[length(parameters('AMBAalerts'))]"
                      },
                      "condition": "[and(equals(parameters('AMBAalerts')[copyIndex()].type, 'Metric'), contains(parameters('AMBAalerts')[copyIndex()].tags, 'avd'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('linked_alertsMetric-{0}', guid(parameters('AMBAalerts')[copyIndex()].name))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "AutoMitigate": {
                            "value": "[parameters('AutoMitigate')]"
                          },
                          "Alert": {
                            "value": "[parameters('AMBAalerts')[copyIndex()]]"
                          },
                          "AlertNamePrefix": {
                            "value": "[parameters('AlertNamePrefix')]"
                          },
                          "AlertDescriptionHeader": {
                            "value": "[parameters('AlertDescriptionHeader')]"
                          },
                          "ActionGroupId": {
                            "value": "[parameters('ActionGroupId')]"
                          },
                          "SetEnabled": {
                            "value": "[parameters('SetEnabled')]"
                          },
                          "Environment": {
                            "value": "[parameters('Environment')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "MetricScope": {
                            "value": "[parameters('MetricScope')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.28.1.47646",
                              "templateHash": "12929944027502652437"
                            }
                          },
                          "parameters": {
                            "AutoMitigate": {
                              "type": "bool"
                            },
                            "Alert": {
                              "type": "object"
                            },
                            "AlertNamePrefix": {
                              "type": "string"
                            },
                            "AlertDescriptionHeader": {
                              "type": "string"
                            },
                            "ActionGroupId": {
                              "type": "string"
                            },
                            "SetEnabled": {
                              "type": "bool"
                            },
                            "Environment": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "MetricScope": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "AlertReferences",
                                "count": "[length(parameters('Alert').references)]",
                                "input": "[format('{0} - {1}', parameters('Alert').references[copyIndex('AlertReferences')].name, parameters('Alert').references[copyIndex('AlertReferences')].url)]"
                              }
                            ],
                            "AlertReferencesNew": "[join(variables('AlertReferences'), '\n')]",
                            "Description": "[format('{0}{1}\nResources:\n{2}', parameters('AlertDescriptionHeader'), parameters('Alert').description, variables('AlertReferencesNew'))]",
                            "Name": "[if(contains(parameters('Alert').name, '/'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '/', ' per '), parameters('Environment')), if(contains(parameters('Alert').name, '%'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '%', ' percent '), parameters('Environment')), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), parameters('Alert').name, parameters('Environment'))))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/metricAlerts",
                              "apiVersion": "2018-03-01",
                              "name": "[variables('Name')]",
                              "tags": "[if(contains(parameters('Tags'), 'Microsoft.Insights/metricAlerts'), parameters('Tags')['Microsoft.Insights/metricAlerts'], createObject())]",
                              "location": "global",
                              "properties": {
                                "description": "[variables('Description')]",
                                "severity": "[parameters('Alert').properties.severity]",
                                "enabled": "[parameters('SetEnabled')]",
                                "scopes": "[if(equals(parameters('Alert').properties.metricNamespace, 'Microsoft.Storage/storageAccounts/fileServices'), createArray(format('{0}/fileServices/default', parameters('MetricScope'))), createArray(parameters('MetricScope')))]",
                                "evaluationFrequency": "[parameters('Alert').properties.evaluationFrequency]",
                                "windowSize": "[parameters('Alert').properties.windowSize]",
                                "criteria": {
                                  "allOf": [
                                    {
                                      "threshold": "[parameters('Alert').properties.threshold]",
                                      "name": "Metric1",
                                      "metricNamespace": "[parameters('Alert').properties.metricNamespace]",
                                      "metricName": "[parameters('Alert').properties.metricName]",
                                      "operator": "[parameters('Alert').properties.operator]",
                                      "timeAggregation": "[parameters('Alert').properties.timeAggregation]",
                                      "criterionType": "[parameters('Alert').properties.criterionType]"
                                    }
                                  ],
                                  "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                                },
                                "autoMitigate": "[parameters('AutoMitigate')]",
                                "targetResourceType": "[parameters('Alert').properties.metricNamespace]",
                                "targetResourceRegion": "[parameters('Location')]",
                                "actions": [
                                  {
                                    "actionGroupId": "[parameters('ActionGroupId')]",
                                    "webHookProperties": {}
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "logqueryAlerts",
                        "count": "[length(parameters('AMBAalerts'))]"
                      },
                      "condition": "[and(equals(parameters('AMBAalerts')[copyIndex()].type, 'Log'), contains(parameters('AMBAalerts')[copyIndex()].tags, 'avd'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('linked_alertsLogQuery-{0}', guid(parameters('AMBAalerts')[copyIndex()].name))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "AutoMitigate": {
                            "value": "[parameters('AutoMitigate')]"
                          },
                          "Alert": {
                            "value": "[parameters('AMBAalerts')[copyIndex()]]"
                          },
                          "AlertNamePrefix": {
                            "value": "[parameters('AlertNamePrefix')]"
                          },
                          "AlertDescriptionHeader": {
                            "value": "[parameters('AlertDescriptionHeader')]"
                          },
                          "ActionGroupId": {
                            "value": "[parameters('ActionGroupId')]"
                          },
                          "SetEnabled": {
                            "value": "[parameters('SetEnabled')]"
                          },
                          "Environment": {
                            "value": "[parameters('Environment')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "LogAnalyticsWorkspaceResourceId": {
                            "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.28.1.47646",
                              "templateHash": "15270322453823105972"
                            }
                          },
                          "parameters": {
                            "AutoMitigate": {
                              "type": "bool"
                            },
                            "Alert": {
                              "type": "object"
                            },
                            "AlertNamePrefix": {
                              "type": "string"
                            },
                            "AlertDescriptionHeader": {
                              "type": "string"
                            },
                            "ActionGroupId": {
                              "type": "string"
                            },
                            "SetEnabled": {
                              "type": "bool"
                            },
                            "Environment": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "LogAnalyticsWorkspaceResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "AlertReferences",
                                "count": "[length(parameters('Alert').references)]",
                                "input": "[format('{0} - {1}', parameters('Alert').references[copyIndex('AlertReferences')].name, parameters('Alert').references[copyIndex('AlertReferences')].url)]"
                              }
                            ],
                            "AlertReferencesNew": "[if(not(equals(variables('AlertReferences'), null())), join(variables('AlertReferences'), '\n'), null())]",
                            "Description": "[if(not(equals(variables('AlertReferencesNew'), null())), format('{0}{1}\nResources: \n{2}', parameters('AlertDescriptionHeader'), parameters('Alert').description, variables('AlertReferencesNew')), format('{0}{1}', parameters('AlertDescriptionHeader'), parameters('Alert').description))]",
                            "Name": "[if(contains(parameters('Alert').name, '/'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '/', ' per '), parameters('Environment')), if(contains(parameters('Alert').name, '%'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '%', ' percent '), parameters('Environment')), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), parameters('Alert').name, parameters('Environment'))))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/scheduledQueryRules",
                              "apiVersion": "2022-08-01-preview",
                              "name": "[variables('Name')]",
                              "location": "[parameters('Location')]",
                              "tags": "[if(contains(parameters('Tags'), 'Microsoft.Insights/scheduledQueryRules'), parameters('Tags')['Microsoft.Insights/scheduledQueryRules'], createObject())]",
                              "properties": {
                                "actions": {
                                  "actionGroups": [
                                    "[parameters('ActionGroupId')]"
                                  ]
                                },
                                "autoMitigate": "[parameters('AutoMitigate')]",
                                "criteria": {
                                  "allOf": [
                                    {
                                      "dimensions": "[parameters('Alert').properties.dimensions]",
                                      "failingPeriods": "[parameters('Alert').properties.failingPeriods]",
                                      "metricName": "[parameters('Alert').name]",
                                      "metricMeasureColumn": "[if(contains(parameters('Alert').properties, 'metricMeasureColumn'), parameters('Alert').properties.metricMeasureColumn, null())]",
                                      "resourceIdColumn": "[if(contains(parameters('Alert').properties, 'resourceIdColumn'), parameters('Alert').properties.resourceIdColumn, null())]",
                                      "operator": "[parameters('Alert').properties.operator]",
                                      "query": "[parameters('Alert').properties.query]",
                                      "threshold": "[parameters('Alert').properties.threshold]",
                                      "timeAggregation": "[parameters('Alert').properties.timeAggregation]"
                                    }
                                  ]
                                },
                                "description": "[variables('Description')]",
                                "enabled": "[parameters('SetEnabled')]",
                                "evaluationFrequency": "[parameters('Alert').properties.evaluationFrequency]",
                                "ruleResolveConfiguration": {
                                  "autoResolved": "[parameters('Alert').properties.autoResolve]",
                                  "timeToResolve": "[parameters('Alert').properties.autoResolveTime]"
                                },
                                "scopes": [
                                  "[parameters('LogAnalyticsWorkspaceResourceId')]"
                                ],
                                "severity": "[parameters('Alert').properties.severity]",
                                "targetResourceTypes": [
                                  "microsoft.operationalinsights/workspaces"
                                ],
                                "windowSize": "[parameters('Alert').properties.windowSize]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
              ]
            },
            {
              "copy": {
                "name": "azureNetAppFilesMetric",
                "count": "[length(range(0, length(parameters('ANFVolumeResourceIds'))))]"
              },
              "condition": "[greater(length(parameters('ANFVolumeResourceIds')), 0)]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('lnk_AlertsMetricANF_{0}', split(parameters('ANFVolumeResourceIds')[range(0, length(parameters('ANFVolumeResourceIds')))[copyIndex()]], '/')[12])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "AlertDescriptionHeader": {
                    "value": "[parameters('AlertDescriptionHeader')]"
                  },
                  "AlertNamePrefix": {
                    "value": "[format('{0}-ANF', parameters('AlertNamePrefix'))]"
                  },
                  "AutoMitigate": {
                    "value": "[parameters('AutoResolveAlert')]"
                  },
                  "SetEnabled": {
                    "value": "[parameters('SetEnabled')]"
                  },
                  "Environment": {
                    "value": "[parameters('Environment')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "MetricScope": {
                    "value": "[parameters('ANFVolumeResourceIds')[range(0, length(parameters('ANFVolumeResourceIds')))[copyIndex()]]]"
                  },
                  "ActionGroupId": {
                    "value": "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "AMBAalerts": {
                    "value": "[parameters('AMBAalertsANF')]"
                  },
                  "LogAnalyticsWorkspaceResourceId": {
                    "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "12777234175232882970"
                    }
                  },
                  "parameters": {
                    "AutoMitigate": {
                      "type": "bool"
                    },
                    "AMBAalerts": {
                      "type": "array"
                    },
                    "AlertNamePrefix": {
                      "type": "string"
                    },
                    "AlertDescriptionHeader": {
                      "type": "string"
                    },
                    "ActionGroupId": {
                      "type": "string"
                    },
                    "SetEnabled": {
                      "type": "bool"
                    },
                    "Environment": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "MetricScope": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "metricAlerts",
                        "count": "[length(parameters('AMBAalerts'))]"
                      },
                      "condition": "[and(equals(parameters('AMBAalerts')[copyIndex()].type, 'Metric'), contains(parameters('AMBAalerts')[copyIndex()].tags, 'avd'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('linked_alertsMetric-{0}', guid(parameters('AMBAalerts')[copyIndex()].name))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "AutoMitigate": {
                            "value": "[parameters('AutoMitigate')]"
                          },
                          "Alert": {
                            "value": "[parameters('AMBAalerts')[copyIndex()]]"
                          },
                          "AlertNamePrefix": {
                            "value": "[parameters('AlertNamePrefix')]"
                          },
                          "AlertDescriptionHeader": {
                            "value": "[parameters('AlertDescriptionHeader')]"
                          },
                          "ActionGroupId": {
                            "value": "[parameters('ActionGroupId')]"
                          },
                          "SetEnabled": {
                            "value": "[parameters('SetEnabled')]"
                          },
                          "Environment": {
                            "value": "[parameters('Environment')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "MetricScope": {
                            "value": "[parameters('MetricScope')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.28.1.47646",
                              "templateHash": "12929944027502652437"
                            }
                          },
                          "parameters": {
                            "AutoMitigate": {
                              "type": "bool"
                            },
                            "Alert": {
                              "type": "object"
                            },
                            "AlertNamePrefix": {
                              "type": "string"
                            },
                            "AlertDescriptionHeader": {
                              "type": "string"
                            },
                            "ActionGroupId": {
                              "type": "string"
                            },
                            "SetEnabled": {
                              "type": "bool"
                            },
                            "Environment": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "MetricScope": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "AlertReferences",
                                "count": "[length(parameters('Alert').references)]",
                                "input": "[format('{0} - {1}', parameters('Alert').references[copyIndex('AlertReferences')].name, parameters('Alert').references[copyIndex('AlertReferences')].url)]"
                              }
                            ],
                            "AlertReferencesNew": "[join(variables('AlertReferences'), '\n')]",
                            "Description": "[format('{0}{1}\nResources:\n{2}', parameters('AlertDescriptionHeader'), parameters('Alert').description, variables('AlertReferencesNew'))]",
                            "Name": "[if(contains(parameters('Alert').name, '/'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '/', ' per '), parameters('Environment')), if(contains(parameters('Alert').name, '%'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '%', ' percent '), parameters('Environment')), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), parameters('Alert').name, parameters('Environment'))))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/metricAlerts",
                              "apiVersion": "2018-03-01",
                              "name": "[variables('Name')]",
                              "tags": "[if(contains(parameters('Tags'), 'Microsoft.Insights/metricAlerts'), parameters('Tags')['Microsoft.Insights/metricAlerts'], createObject())]",
                              "location": "global",
                              "properties": {
                                "description": "[variables('Description')]",
                                "severity": "[parameters('Alert').properties.severity]",
                                "enabled": "[parameters('SetEnabled')]",
                                "scopes": "[if(equals(parameters('Alert').properties.metricNamespace, 'Microsoft.Storage/storageAccounts/fileServices'), createArray(format('{0}/fileServices/default', parameters('MetricScope'))), createArray(parameters('MetricScope')))]",
                                "evaluationFrequency": "[parameters('Alert').properties.evaluationFrequency]",
                                "windowSize": "[parameters('Alert').properties.windowSize]",
                                "criteria": {
                                  "allOf": [
                                    {
                                      "threshold": "[parameters('Alert').properties.threshold]",
                                      "name": "Metric1",
                                      "metricNamespace": "[parameters('Alert').properties.metricNamespace]",
                                      "metricName": "[parameters('Alert').properties.metricName]",
                                      "operator": "[parameters('Alert').properties.operator]",
                                      "timeAggregation": "[parameters('Alert').properties.timeAggregation]",
                                      "criterionType": "[parameters('Alert').properties.criterionType]"
                                    }
                                  ],
                                  "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                                },
                                "autoMitigate": "[parameters('AutoMitigate')]",
                                "targetResourceType": "[parameters('Alert').properties.metricNamespace]",
                                "targetResourceRegion": "[parameters('Location')]",
                                "actions": [
                                  {
                                    "actionGroupId": "[parameters('ActionGroupId')]",
                                    "webHookProperties": {}
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "logqueryAlerts",
                        "count": "[length(parameters('AMBAalerts'))]"
                      },
                      "condition": "[and(equals(parameters('AMBAalerts')[copyIndex()].type, 'Log'), contains(parameters('AMBAalerts')[copyIndex()].tags, 'avd'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('linked_alertsLogQuery-{0}', guid(parameters('AMBAalerts')[copyIndex()].name))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "AutoMitigate": {
                            "value": "[parameters('AutoMitigate')]"
                          },
                          "Alert": {
                            "value": "[parameters('AMBAalerts')[copyIndex()]]"
                          },
                          "AlertNamePrefix": {
                            "value": "[parameters('AlertNamePrefix')]"
                          },
                          "AlertDescriptionHeader": {
                            "value": "[parameters('AlertDescriptionHeader')]"
                          },
                          "ActionGroupId": {
                            "value": "[parameters('ActionGroupId')]"
                          },
                          "SetEnabled": {
                            "value": "[parameters('SetEnabled')]"
                          },
                          "Environment": {
                            "value": "[parameters('Environment')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "LogAnalyticsWorkspaceResourceId": {
                            "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.28.1.47646",
                              "templateHash": "15270322453823105972"
                            }
                          },
                          "parameters": {
                            "AutoMitigate": {
                              "type": "bool"
                            },
                            "Alert": {
                              "type": "object"
                            },
                            "AlertNamePrefix": {
                              "type": "string"
                            },
                            "AlertDescriptionHeader": {
                              "type": "string"
                            },
                            "ActionGroupId": {
                              "type": "string"
                            },
                            "SetEnabled": {
                              "type": "bool"
                            },
                            "Environment": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "LogAnalyticsWorkspaceResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "AlertReferences",
                                "count": "[length(parameters('Alert').references)]",
                                "input": "[format('{0} - {1}', parameters('Alert').references[copyIndex('AlertReferences')].name, parameters('Alert').references[copyIndex('AlertReferences')].url)]"
                              }
                            ],
                            "AlertReferencesNew": "[if(not(equals(variables('AlertReferences'), null())), join(variables('AlertReferences'), '\n'), null())]",
                            "Description": "[if(not(equals(variables('AlertReferencesNew'), null())), format('{0}{1}\nResources: \n{2}', parameters('AlertDescriptionHeader'), parameters('Alert').description, variables('AlertReferencesNew')), format('{0}{1}', parameters('AlertDescriptionHeader'), parameters('Alert').description))]",
                            "Name": "[if(contains(parameters('Alert').name, '/'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '/', ' per '), parameters('Environment')), if(contains(parameters('Alert').name, '%'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '%', ' percent '), parameters('Environment')), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), parameters('Alert').name, parameters('Environment'))))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/scheduledQueryRules",
                              "apiVersion": "2022-08-01-preview",
                              "name": "[variables('Name')]",
                              "location": "[parameters('Location')]",
                              "tags": "[if(contains(parameters('Tags'), 'Microsoft.Insights/scheduledQueryRules'), parameters('Tags')['Microsoft.Insights/scheduledQueryRules'], createObject())]",
                              "properties": {
                                "actions": {
                                  "actionGroups": [
                                    "[parameters('ActionGroupId')]"
                                  ]
                                },
                                "autoMitigate": "[parameters('AutoMitigate')]",
                                "criteria": {
                                  "allOf": [
                                    {
                                      "dimensions": "[parameters('Alert').properties.dimensions]",
                                      "failingPeriods": "[parameters('Alert').properties.failingPeriods]",
                                      "metricName": "[parameters('Alert').name]",
                                      "metricMeasureColumn": "[if(contains(parameters('Alert').properties, 'metricMeasureColumn'), parameters('Alert').properties.metricMeasureColumn, null())]",
                                      "resourceIdColumn": "[if(contains(parameters('Alert').properties, 'resourceIdColumn'), parameters('Alert').properties.resourceIdColumn, null())]",
                                      "operator": "[parameters('Alert').properties.operator]",
                                      "query": "[parameters('Alert').properties.query]",
                                      "threshold": "[parameters('Alert').properties.threshold]",
                                      "timeAggregation": "[parameters('Alert').properties.timeAggregation]"
                                    }
                                  ]
                                },
                                "description": "[variables('Description')]",
                                "enabled": "[parameters('SetEnabled')]",
                                "evaluationFrequency": "[parameters('Alert').properties.evaluationFrequency]",
                                "ruleResolveConfiguration": {
                                  "autoResolved": "[parameters('Alert').properties.autoResolve]",
                                  "timeToResolve": "[parameters('Alert').properties.autoResolveTime]"
                                },
                                "scopes": [
                                  "[parameters('LogAnalyticsWorkspaceResourceId')]"
                                ],
                                "severity": "[parameters('Alert').properties.severity]",
                                "targetResourceTypes": [
                                  "microsoft.operationalinsights/workspaces"
                                ],
                                "windowSize": "[parameters('Alert').properties.windowSize]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
              ]
            },
            {
              "copy": {
                "name": "storAccountMetric",
                "count": "[length(range(0, length(parameters('StorageAccountResourceIds'))))]"
              },
              "condition": "[greater(length(parameters('StorageAccountResourceIds')), 0)]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('lnk_AlertsMetricStrAcct_{0}', split(parameters('StorageAccountResourceIds')[range(0, length(parameters('StorageAccountResourceIds')))[copyIndex()]], '/')[8])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "AMBAalerts": {
                    "value": "[parameters('AMBAalertsStorage')]"
                  },
                  "AlertDescriptionHeader": {
                    "value": "[parameters('AlertDescriptionHeader')]"
                  },
                  "AlertNamePrefix": {
                    "value": "[format('{0}-storage-{1}', parameters('AlertNamePrefix'), split(parameters('StorageAccountResourceIds')[range(0, length(parameters('StorageAccountResourceIds')))[copyIndex()]], '/')[8])]"
                  },
                  "LogAnalyticsWorkspaceResourceId": {
                    "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                  },
                  "Environment": {
                    "value": "[parameters('Environment')]"
                  },
                  "MetricScope": {
                    "value": "[parameters('StorageAccountResourceIds')[range(0, length(parameters('StorageAccountResourceIds')))[copyIndex()]]]"
                  },
                  "AutoMitigate": {
                    "value": "[parameters('AutoResolveAlert')]"
                  },
                  "SetEnabled": {
                    "value": "[parameters('SetEnabled')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "ActionGroupId": {
                    "value": "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "12777234175232882970"
                    }
                  },
                  "parameters": {
                    "AutoMitigate": {
                      "type": "bool"
                    },
                    "AMBAalerts": {
                      "type": "array"
                    },
                    "AlertNamePrefix": {
                      "type": "string"
                    },
                    "AlertDescriptionHeader": {
                      "type": "string"
                    },
                    "ActionGroupId": {
                      "type": "string"
                    },
                    "SetEnabled": {
                      "type": "bool"
                    },
                    "Environment": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "MetricScope": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "metricAlerts",
                        "count": "[length(parameters('AMBAalerts'))]"
                      },
                      "condition": "[and(equals(parameters('AMBAalerts')[copyIndex()].type, 'Metric'), contains(parameters('AMBAalerts')[copyIndex()].tags, 'avd'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('linked_alertsMetric-{0}', guid(parameters('AMBAalerts')[copyIndex()].name))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "AutoMitigate": {
                            "value": "[parameters('AutoMitigate')]"
                          },
                          "Alert": {
                            "value": "[parameters('AMBAalerts')[copyIndex()]]"
                          },
                          "AlertNamePrefix": {
                            "value": "[parameters('AlertNamePrefix')]"
                          },
                          "AlertDescriptionHeader": {
                            "value": "[parameters('AlertDescriptionHeader')]"
                          },
                          "ActionGroupId": {
                            "value": "[parameters('ActionGroupId')]"
                          },
                          "SetEnabled": {
                            "value": "[parameters('SetEnabled')]"
                          },
                          "Environment": {
                            "value": "[parameters('Environment')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "MetricScope": {
                            "value": "[parameters('MetricScope')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.28.1.47646",
                              "templateHash": "12929944027502652437"
                            }
                          },
                          "parameters": {
                            "AutoMitigate": {
                              "type": "bool"
                            },
                            "Alert": {
                              "type": "object"
                            },
                            "AlertNamePrefix": {
                              "type": "string"
                            },
                            "AlertDescriptionHeader": {
                              "type": "string"
                            },
                            "ActionGroupId": {
                              "type": "string"
                            },
                            "SetEnabled": {
                              "type": "bool"
                            },
                            "Environment": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "MetricScope": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "AlertReferences",
                                "count": "[length(parameters('Alert').references)]",
                                "input": "[format('{0} - {1}', parameters('Alert').references[copyIndex('AlertReferences')].name, parameters('Alert').references[copyIndex('AlertReferences')].url)]"
                              }
                            ],
                            "AlertReferencesNew": "[join(variables('AlertReferences'), '\n')]",
                            "Description": "[format('{0}{1}\nResources:\n{2}', parameters('AlertDescriptionHeader'), parameters('Alert').description, variables('AlertReferencesNew'))]",
                            "Name": "[if(contains(parameters('Alert').name, '/'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '/', ' per '), parameters('Environment')), if(contains(parameters('Alert').name, '%'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '%', ' percent '), parameters('Environment')), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), parameters('Alert').name, parameters('Environment'))))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/metricAlerts",
                              "apiVersion": "2018-03-01",
                              "name": "[variables('Name')]",
                              "tags": "[if(contains(parameters('Tags'), 'Microsoft.Insights/metricAlerts'), parameters('Tags')['Microsoft.Insights/metricAlerts'], createObject())]",
                              "location": "global",
                              "properties": {
                                "description": "[variables('Description')]",
                                "severity": "[parameters('Alert').properties.severity]",
                                "enabled": "[parameters('SetEnabled')]",
                                "scopes": "[if(equals(parameters('Alert').properties.metricNamespace, 'Microsoft.Storage/storageAccounts/fileServices'), createArray(format('{0}/fileServices/default', parameters('MetricScope'))), createArray(parameters('MetricScope')))]",
                                "evaluationFrequency": "[parameters('Alert').properties.evaluationFrequency]",
                                "windowSize": "[parameters('Alert').properties.windowSize]",
                                "criteria": {
                                  "allOf": [
                                    {
                                      "threshold": "[parameters('Alert').properties.threshold]",
                                      "name": "Metric1",
                                      "metricNamespace": "[parameters('Alert').properties.metricNamespace]",
                                      "metricName": "[parameters('Alert').properties.metricName]",
                                      "operator": "[parameters('Alert').properties.operator]",
                                      "timeAggregation": "[parameters('Alert').properties.timeAggregation]",
                                      "criterionType": "[parameters('Alert').properties.criterionType]"
                                    }
                                  ],
                                  "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                                },
                                "autoMitigate": "[parameters('AutoMitigate')]",
                                "targetResourceType": "[parameters('Alert').properties.metricNamespace]",
                                "targetResourceRegion": "[parameters('Location')]",
                                "actions": [
                                  {
                                    "actionGroupId": "[parameters('ActionGroupId')]",
                                    "webHookProperties": {}
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "logqueryAlerts",
                        "count": "[length(parameters('AMBAalerts'))]"
                      },
                      "condition": "[and(equals(parameters('AMBAalerts')[copyIndex()].type, 'Log'), contains(parameters('AMBAalerts')[copyIndex()].tags, 'avd'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('linked_alertsLogQuery-{0}', guid(parameters('AMBAalerts')[copyIndex()].name))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "AutoMitigate": {
                            "value": "[parameters('AutoMitigate')]"
                          },
                          "Alert": {
                            "value": "[parameters('AMBAalerts')[copyIndex()]]"
                          },
                          "AlertNamePrefix": {
                            "value": "[parameters('AlertNamePrefix')]"
                          },
                          "AlertDescriptionHeader": {
                            "value": "[parameters('AlertDescriptionHeader')]"
                          },
                          "ActionGroupId": {
                            "value": "[parameters('ActionGroupId')]"
                          },
                          "SetEnabled": {
                            "value": "[parameters('SetEnabled')]"
                          },
                          "Environment": {
                            "value": "[parameters('Environment')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "LogAnalyticsWorkspaceResourceId": {
                            "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.28.1.47646",
                              "templateHash": "15270322453823105972"
                            }
                          },
                          "parameters": {
                            "AutoMitigate": {
                              "type": "bool"
                            },
                            "Alert": {
                              "type": "object"
                            },
                            "AlertNamePrefix": {
                              "type": "string"
                            },
                            "AlertDescriptionHeader": {
                              "type": "string"
                            },
                            "ActionGroupId": {
                              "type": "string"
                            },
                            "SetEnabled": {
                              "type": "bool"
                            },
                            "Environment": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "LogAnalyticsWorkspaceResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "AlertReferences",
                                "count": "[length(parameters('Alert').references)]",
                                "input": "[format('{0} - {1}', parameters('Alert').references[copyIndex('AlertReferences')].name, parameters('Alert').references[copyIndex('AlertReferences')].url)]"
                              }
                            ],
                            "AlertReferencesNew": "[if(not(equals(variables('AlertReferences'), null())), join(variables('AlertReferences'), '\n'), null())]",
                            "Description": "[if(not(equals(variables('AlertReferencesNew'), null())), format('{0}{1}\nResources: \n{2}', parameters('AlertDescriptionHeader'), parameters('Alert').description, variables('AlertReferencesNew')), format('{0}{1}', parameters('AlertDescriptionHeader'), parameters('Alert').description))]",
                            "Name": "[if(contains(parameters('Alert').name, '/'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '/', ' per '), parameters('Environment')), if(contains(parameters('Alert').name, '%'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '%', ' percent '), parameters('Environment')), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), parameters('Alert').name, parameters('Environment'))))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/scheduledQueryRules",
                              "apiVersion": "2022-08-01-preview",
                              "name": "[variables('Name')]",
                              "location": "[parameters('Location')]",
                              "tags": "[if(contains(parameters('Tags'), 'Microsoft.Insights/scheduledQueryRules'), parameters('Tags')['Microsoft.Insights/scheduledQueryRules'], createObject())]",
                              "properties": {
                                "actions": {
                                  "actionGroups": [
                                    "[parameters('ActionGroupId')]"
                                  ]
                                },
                                "autoMitigate": "[parameters('AutoMitigate')]",
                                "criteria": {
                                  "allOf": [
                                    {
                                      "dimensions": "[parameters('Alert').properties.dimensions]",
                                      "failingPeriods": "[parameters('Alert').properties.failingPeriods]",
                                      "metricName": "[parameters('Alert').name]",
                                      "metricMeasureColumn": "[if(contains(parameters('Alert').properties, 'metricMeasureColumn'), parameters('Alert').properties.metricMeasureColumn, null())]",
                                      "resourceIdColumn": "[if(contains(parameters('Alert').properties, 'resourceIdColumn'), parameters('Alert').properties.resourceIdColumn, null())]",
                                      "operator": "[parameters('Alert').properties.operator]",
                                      "query": "[parameters('Alert').properties.query]",
                                      "threshold": "[parameters('Alert').properties.threshold]",
                                      "timeAggregation": "[parameters('Alert').properties.timeAggregation]"
                                    }
                                  ]
                                },
                                "description": "[variables('Description')]",
                                "enabled": "[parameters('SetEnabled')]",
                                "evaluationFrequency": "[parameters('Alert').properties.evaluationFrequency]",
                                "ruleResolveConfiguration": {
                                  "autoResolved": "[parameters('Alert').properties.autoResolve]",
                                  "timeToResolve": "[parameters('Alert').properties.autoResolveTime]"
                                },
                                "scopes": [
                                  "[parameters('LogAnalyticsWorkspaceResourceId')]"
                                ],
                                "severity": "[parameters('Alert').properties.severity]",
                                "targetResourceTypes": [
                                  "microsoft.operationalinsights/workspaces"
                                ],
                                "windowSize": "[parameters('Alert').properties.windowSize]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "lnk_AlertsLogHostPool",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "AlertDescriptionHeader": {
                    "value": "[parameters('AlertDescriptionHeader')]"
                  },
                  "AlertNamePrefix": {
                    "value": "[format('{0}-HostPool', parameters('AlertNamePrefix'))]"
                  },
                  "AMBAalerts": {
                    "value": "[parameters('AMBAalertsHostPool')]"
                  },
                  "AutoMitigate": {
                    "value": "[parameters('AutoResolveAlert')]"
                  },
                  "ActionGroupId": {
                    "value": "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
                  },
                  "Environment": {
                    "value": "[parameters('Environment')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "LogAnalyticsWorkspaceResourceId": {
                    "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "SetEnabled": {
                    "value": "[parameters('SetEnabled')]"
                  },
                  "MetricScope": {
                    "value": "[subscription().id]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "12777234175232882970"
                    }
                  },
                  "parameters": {
                    "AutoMitigate": {
                      "type": "bool"
                    },
                    "AMBAalerts": {
                      "type": "array"
                    },
                    "AlertNamePrefix": {
                      "type": "string"
                    },
                    "AlertDescriptionHeader": {
                      "type": "string"
                    },
                    "ActionGroupId": {
                      "type": "string"
                    },
                    "SetEnabled": {
                      "type": "bool"
                    },
                    "Environment": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "MetricScope": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "metricAlerts",
                        "count": "[length(parameters('AMBAalerts'))]"
                      },
                      "condition": "[and(equals(parameters('AMBAalerts')[copyIndex()].type, 'Metric'), contains(parameters('AMBAalerts')[copyIndex()].tags, 'avd'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('linked_alertsMetric-{0}', guid(parameters('AMBAalerts')[copyIndex()].name))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "AutoMitigate": {
                            "value": "[parameters('AutoMitigate')]"
                          },
                          "Alert": {
                            "value": "[parameters('AMBAalerts')[copyIndex()]]"
                          },
                          "AlertNamePrefix": {
                            "value": "[parameters('AlertNamePrefix')]"
                          },
                          "AlertDescriptionHeader": {
                            "value": "[parameters('AlertDescriptionHeader')]"
                          },
                          "ActionGroupId": {
                            "value": "[parameters('ActionGroupId')]"
                          },
                          "SetEnabled": {
                            "value": "[parameters('SetEnabled')]"
                          },
                          "Environment": {
                            "value": "[parameters('Environment')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "MetricScope": {
                            "value": "[parameters('MetricScope')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.28.1.47646",
                              "templateHash": "12929944027502652437"
                            }
                          },
                          "parameters": {
                            "AutoMitigate": {
                              "type": "bool"
                            },
                            "Alert": {
                              "type": "object"
                            },
                            "AlertNamePrefix": {
                              "type": "string"
                            },
                            "AlertDescriptionHeader": {
                              "type": "string"
                            },
                            "ActionGroupId": {
                              "type": "string"
                            },
                            "SetEnabled": {
                              "type": "bool"
                            },
                            "Environment": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "MetricScope": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "AlertReferences",
                                "count": "[length(parameters('Alert').references)]",
                                "input": "[format('{0} - {1}', parameters('Alert').references[copyIndex('AlertReferences')].name, parameters('Alert').references[copyIndex('AlertReferences')].url)]"
                              }
                            ],
                            "AlertReferencesNew": "[join(variables('AlertReferences'), '\n')]",
                            "Description": "[format('{0}{1}\nResources:\n{2}', parameters('AlertDescriptionHeader'), parameters('Alert').description, variables('AlertReferencesNew'))]",
                            "Name": "[if(contains(parameters('Alert').name, '/'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '/', ' per '), parameters('Environment')), if(contains(parameters('Alert').name, '%'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '%', ' percent '), parameters('Environment')), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), parameters('Alert').name, parameters('Environment'))))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/metricAlerts",
                              "apiVersion": "2018-03-01",
                              "name": "[variables('Name')]",
                              "tags": "[if(contains(parameters('Tags'), 'Microsoft.Insights/metricAlerts'), parameters('Tags')['Microsoft.Insights/metricAlerts'], createObject())]",
                              "location": "global",
                              "properties": {
                                "description": "[variables('Description')]",
                                "severity": "[parameters('Alert').properties.severity]",
                                "enabled": "[parameters('SetEnabled')]",
                                "scopes": "[if(equals(parameters('Alert').properties.metricNamespace, 'Microsoft.Storage/storageAccounts/fileServices'), createArray(format('{0}/fileServices/default', parameters('MetricScope'))), createArray(parameters('MetricScope')))]",
                                "evaluationFrequency": "[parameters('Alert').properties.evaluationFrequency]",
                                "windowSize": "[parameters('Alert').properties.windowSize]",
                                "criteria": {
                                  "allOf": [
                                    {
                                      "threshold": "[parameters('Alert').properties.threshold]",
                                      "name": "Metric1",
                                      "metricNamespace": "[parameters('Alert').properties.metricNamespace]",
                                      "metricName": "[parameters('Alert').properties.metricName]",
                                      "operator": "[parameters('Alert').properties.operator]",
                                      "timeAggregation": "[parameters('Alert').properties.timeAggregation]",
                                      "criterionType": "[parameters('Alert').properties.criterionType]"
                                    }
                                  ],
                                  "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                                },
                                "autoMitigate": "[parameters('AutoMitigate')]",
                                "targetResourceType": "[parameters('Alert').properties.metricNamespace]",
                                "targetResourceRegion": "[parameters('Location')]",
                                "actions": [
                                  {
                                    "actionGroupId": "[parameters('ActionGroupId')]",
                                    "webHookProperties": {}
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "logqueryAlerts",
                        "count": "[length(parameters('AMBAalerts'))]"
                      },
                      "condition": "[and(equals(parameters('AMBAalerts')[copyIndex()].type, 'Log'), contains(parameters('AMBAalerts')[copyIndex()].tags, 'avd'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('linked_alertsLogQuery-{0}', guid(parameters('AMBAalerts')[copyIndex()].name))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "AutoMitigate": {
                            "value": "[parameters('AutoMitigate')]"
                          },
                          "Alert": {
                            "value": "[parameters('AMBAalerts')[copyIndex()]]"
                          },
                          "AlertNamePrefix": {
                            "value": "[parameters('AlertNamePrefix')]"
                          },
                          "AlertDescriptionHeader": {
                            "value": "[parameters('AlertDescriptionHeader')]"
                          },
                          "ActionGroupId": {
                            "value": "[parameters('ActionGroupId')]"
                          },
                          "SetEnabled": {
                            "value": "[parameters('SetEnabled')]"
                          },
                          "Environment": {
                            "value": "[parameters('Environment')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "LogAnalyticsWorkspaceResourceId": {
                            "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.28.1.47646",
                              "templateHash": "15270322453823105972"
                            }
                          },
                          "parameters": {
                            "AutoMitigate": {
                              "type": "bool"
                            },
                            "Alert": {
                              "type": "object"
                            },
                            "AlertNamePrefix": {
                              "type": "string"
                            },
                            "AlertDescriptionHeader": {
                              "type": "string"
                            },
                            "ActionGroupId": {
                              "type": "string"
                            },
                            "SetEnabled": {
                              "type": "bool"
                            },
                            "Environment": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "LogAnalyticsWorkspaceResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "AlertReferences",
                                "count": "[length(parameters('Alert').references)]",
                                "input": "[format('{0} - {1}', parameters('Alert').references[copyIndex('AlertReferences')].name, parameters('Alert').references[copyIndex('AlertReferences')].url)]"
                              }
                            ],
                            "AlertReferencesNew": "[if(not(equals(variables('AlertReferences'), null())), join(variables('AlertReferences'), '\n'), null())]",
                            "Description": "[if(not(equals(variables('AlertReferencesNew'), null())), format('{0}{1}\nResources: \n{2}', parameters('AlertDescriptionHeader'), parameters('Alert').description, variables('AlertReferencesNew')), format('{0}{1}', parameters('AlertDescriptionHeader'), parameters('Alert').description))]",
                            "Name": "[if(contains(parameters('Alert').name, '/'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '/', ' per '), parameters('Environment')), if(contains(parameters('Alert').name, '%'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '%', ' percent '), parameters('Environment')), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), parameters('Alert').name, parameters('Environment'))))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/scheduledQueryRules",
                              "apiVersion": "2022-08-01-preview",
                              "name": "[variables('Name')]",
                              "location": "[parameters('Location')]",
                              "tags": "[if(contains(parameters('Tags'), 'Microsoft.Insights/scheduledQueryRules'), parameters('Tags')['Microsoft.Insights/scheduledQueryRules'], createObject())]",
                              "properties": {
                                "actions": {
                                  "actionGroups": [
                                    "[parameters('ActionGroupId')]"
                                  ]
                                },
                                "autoMitigate": "[parameters('AutoMitigate')]",
                                "criteria": {
                                  "allOf": [
                                    {
                                      "dimensions": "[parameters('Alert').properties.dimensions]",
                                      "failingPeriods": "[parameters('Alert').properties.failingPeriods]",
                                      "metricName": "[parameters('Alert').name]",
                                      "metricMeasureColumn": "[if(contains(parameters('Alert').properties, 'metricMeasureColumn'), parameters('Alert').properties.metricMeasureColumn, null())]",
                                      "resourceIdColumn": "[if(contains(parameters('Alert').properties, 'resourceIdColumn'), parameters('Alert').properties.resourceIdColumn, null())]",
                                      "operator": "[parameters('Alert').properties.operator]",
                                      "query": "[parameters('Alert').properties.query]",
                                      "threshold": "[parameters('Alert').properties.threshold]",
                                      "timeAggregation": "[parameters('Alert').properties.timeAggregation]"
                                    }
                                  ]
                                },
                                "description": "[variables('Description')]",
                                "enabled": "[parameters('SetEnabled')]",
                                "evaluationFrequency": "[parameters('Alert').properties.evaluationFrequency]",
                                "ruleResolveConfiguration": {
                                  "autoResolved": "[parameters('Alert').properties.autoResolve]",
                                  "timeToResolve": "[parameters('Alert').properties.autoResolveTime]"
                                },
                                "scopes": [
                                  "[parameters('LogAnalyticsWorkspaceResourceId')]"
                                ],
                                "severity": "[parameters('Alert').properties.severity]",
                                "targetResourceTypes": [
                                  "microsoft.operationalinsights/workspaces"
                                ],
                                "windowSize": "[parameters('Alert').properties.windowSize]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "lnk_AlertsSvcHlth",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "AlertDescriptionHeader": {
                    "value": "[parameters('AlertDescriptionHeader')]"
                  },
                  "AlertNamePrefix": {
                    "value": "[format('{0}-SvcHealth', parameters('AlertNamePrefix'))]"
                  },
                  "AMBAalerts": {
                    "value": "[parameters('AMBAalertsSvcHealth')]"
                  },
                  "AutoMitigate": {
                    "value": "[parameters('AutoResolveAlert')]"
                  },
                  "ActionGroupId": {
                    "value": "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
                  },
                  "Environment": {
                    "value": "[parameters('Environment')]"
                  },
                  "Location": {
                    "value": "[parameters('Location')]"
                  },
                  "LogAnalyticsWorkspaceResourceId": {
                    "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                  },
                  "SetEnabled": {
                    "value": "[parameters('SetEnabled')]"
                  },
                  "Tags": {
                    "value": "[parameters('Tags')]"
                  },
                  "MetricScope": {
                    "value": "[variables('SubscriptionId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "12777234175232882970"
                    }
                  },
                  "parameters": {
                    "AutoMitigate": {
                      "type": "bool"
                    },
                    "AMBAalerts": {
                      "type": "array"
                    },
                    "AlertNamePrefix": {
                      "type": "string"
                    },
                    "AlertDescriptionHeader": {
                      "type": "string"
                    },
                    "ActionGroupId": {
                      "type": "string"
                    },
                    "SetEnabled": {
                      "type": "bool"
                    },
                    "Environment": {
                      "type": "string"
                    },
                    "Location": {
                      "type": "string"
                    },
                    "LogAnalyticsWorkspaceResourceId": {
                      "type": "string"
                    },
                    "Tags": {
                      "type": "object"
                    },
                    "MetricScope": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "metricAlerts",
                        "count": "[length(parameters('AMBAalerts'))]"
                      },
                      "condition": "[and(equals(parameters('AMBAalerts')[copyIndex()].type, 'Metric'), contains(parameters('AMBAalerts')[copyIndex()].tags, 'avd'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('linked_alertsMetric-{0}', guid(parameters('AMBAalerts')[copyIndex()].name))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "AutoMitigate": {
                            "value": "[parameters('AutoMitigate')]"
                          },
                          "Alert": {
                            "value": "[parameters('AMBAalerts')[copyIndex()]]"
                          },
                          "AlertNamePrefix": {
                            "value": "[parameters('AlertNamePrefix')]"
                          },
                          "AlertDescriptionHeader": {
                            "value": "[parameters('AlertDescriptionHeader')]"
                          },
                          "ActionGroupId": {
                            "value": "[parameters('ActionGroupId')]"
                          },
                          "SetEnabled": {
                            "value": "[parameters('SetEnabled')]"
                          },
                          "Environment": {
                            "value": "[parameters('Environment')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          },
                          "MetricScope": {
                            "value": "[parameters('MetricScope')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.28.1.47646",
                              "templateHash": "12929944027502652437"
                            }
                          },
                          "parameters": {
                            "AutoMitigate": {
                              "type": "bool"
                            },
                            "Alert": {
                              "type": "object"
                            },
                            "AlertNamePrefix": {
                              "type": "string"
                            },
                            "AlertDescriptionHeader": {
                              "type": "string"
                            },
                            "ActionGroupId": {
                              "type": "string"
                            },
                            "SetEnabled": {
                              "type": "bool"
                            },
                            "Environment": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "MetricScope": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "AlertReferences",
                                "count": "[length(parameters('Alert').references)]",
                                "input": "[format('{0} - {1}', parameters('Alert').references[copyIndex('AlertReferences')].name, parameters('Alert').references[copyIndex('AlertReferences')].url)]"
                              }
                            ],
                            "AlertReferencesNew": "[join(variables('AlertReferences'), '\n')]",
                            "Description": "[format('{0}{1}\nResources:\n{2}', parameters('AlertDescriptionHeader'), parameters('Alert').description, variables('AlertReferencesNew'))]",
                            "Name": "[if(contains(parameters('Alert').name, '/'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '/', ' per '), parameters('Environment')), if(contains(parameters('Alert').name, '%'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '%', ' percent '), parameters('Environment')), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), parameters('Alert').name, parameters('Environment'))))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/metricAlerts",
                              "apiVersion": "2018-03-01",
                              "name": "[variables('Name')]",
                              "tags": "[if(contains(parameters('Tags'), 'Microsoft.Insights/metricAlerts'), parameters('Tags')['Microsoft.Insights/metricAlerts'], createObject())]",
                              "location": "global",
                              "properties": {
                                "description": "[variables('Description')]",
                                "severity": "[parameters('Alert').properties.severity]",
                                "enabled": "[parameters('SetEnabled')]",
                                "scopes": "[if(equals(parameters('Alert').properties.metricNamespace, 'Microsoft.Storage/storageAccounts/fileServices'), createArray(format('{0}/fileServices/default', parameters('MetricScope'))), createArray(parameters('MetricScope')))]",
                                "evaluationFrequency": "[parameters('Alert').properties.evaluationFrequency]",
                                "windowSize": "[parameters('Alert').properties.windowSize]",
                                "criteria": {
                                  "allOf": [
                                    {
                                      "threshold": "[parameters('Alert').properties.threshold]",
                                      "name": "Metric1",
                                      "metricNamespace": "[parameters('Alert').properties.metricNamespace]",
                                      "metricName": "[parameters('Alert').properties.metricName]",
                                      "operator": "[parameters('Alert').properties.operator]",
                                      "timeAggregation": "[parameters('Alert').properties.timeAggregation]",
                                      "criterionType": "[parameters('Alert').properties.criterionType]"
                                    }
                                  ],
                                  "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
                                },
                                "autoMitigate": "[parameters('AutoMitigate')]",
                                "targetResourceType": "[parameters('Alert').properties.metricNamespace]",
                                "targetResourceRegion": "[parameters('Location')]",
                                "actions": [
                                  {
                                    "actionGroupId": "[parameters('ActionGroupId')]",
                                    "webHookProperties": {}
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "logqueryAlerts",
                        "count": "[length(parameters('AMBAalerts'))]"
                      },
                      "condition": "[and(equals(parameters('AMBAalerts')[copyIndex()].type, 'Log'), contains(parameters('AMBAalerts')[copyIndex()].tags, 'avd'))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('linked_alertsLogQuery-{0}', guid(parameters('AMBAalerts')[copyIndex()].name))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "AutoMitigate": {
                            "value": "[parameters('AutoMitigate')]"
                          },
                          "Alert": {
                            "value": "[parameters('AMBAalerts')[copyIndex()]]"
                          },
                          "AlertNamePrefix": {
                            "value": "[parameters('AlertNamePrefix')]"
                          },
                          "AlertDescriptionHeader": {
                            "value": "[parameters('AlertDescriptionHeader')]"
                          },
                          "ActionGroupId": {
                            "value": "[parameters('ActionGroupId')]"
                          },
                          "SetEnabled": {
                            "value": "[parameters('SetEnabled')]"
                          },
                          "Environment": {
                            "value": "[parameters('Environment')]"
                          },
                          "Location": {
                            "value": "[parameters('Location')]"
                          },
                          "LogAnalyticsWorkspaceResourceId": {
                            "value": "[parameters('LogAnalyticsWorkspaceResourceId')]"
                          },
                          "Tags": {
                            "value": "[parameters('Tags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.28.1.47646",
                              "templateHash": "15270322453823105972"
                            }
                          },
                          "parameters": {
                            "AutoMitigate": {
                              "type": "bool"
                            },
                            "Alert": {
                              "type": "object"
                            },
                            "AlertNamePrefix": {
                              "type": "string"
                            },
                            "AlertDescriptionHeader": {
                              "type": "string"
                            },
                            "ActionGroupId": {
                              "type": "string"
                            },
                            "SetEnabled": {
                              "type": "bool"
                            },
                            "Environment": {
                              "type": "string"
                            },
                            "Location": {
                              "type": "string"
                            },
                            "Tags": {
                              "type": "object"
                            },
                            "LogAnalyticsWorkspaceResourceId": {
                              "type": "string"
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "AlertReferences",
                                "count": "[length(parameters('Alert').references)]",
                                "input": "[format('{0} - {1}', parameters('Alert').references[copyIndex('AlertReferences')].name, parameters('Alert').references[copyIndex('AlertReferences')].url)]"
                              }
                            ],
                            "AlertReferencesNew": "[if(not(equals(variables('AlertReferences'), null())), join(variables('AlertReferences'), '\n'), null())]",
                            "Description": "[if(not(equals(variables('AlertReferencesNew'), null())), format('{0}{1}\nResources: \n{2}', parameters('AlertDescriptionHeader'), parameters('Alert').description, variables('AlertReferencesNew')), format('{0}{1}', parameters('AlertDescriptionHeader'), parameters('Alert').description))]",
                            "Name": "[if(contains(parameters('Alert').name, '/'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '/', ' per '), parameters('Environment')), if(contains(parameters('Alert').name, '%'), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), replace(parameters('Alert').name, '%', ' percent '), parameters('Environment')), format('{0}-{1}-{2}', parameters('AlertNamePrefix'), parameters('Alert').name, parameters('Environment'))))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Insights/scheduledQueryRules",
                              "apiVersion": "2022-08-01-preview",
                              "name": "[variables('Name')]",
                              "location": "[parameters('Location')]",
                              "tags": "[if(contains(parameters('Tags'), 'Microsoft.Insights/scheduledQueryRules'), parameters('Tags')['Microsoft.Insights/scheduledQueryRules'], createObject())]",
                              "properties": {
                                "actions": {
                                  "actionGroups": [
                                    "[parameters('ActionGroupId')]"
                                  ]
                                },
                                "autoMitigate": "[parameters('AutoMitigate')]",
                                "criteria": {
                                  "allOf": [
                                    {
                                      "dimensions": "[parameters('Alert').properties.dimensions]",
                                      "failingPeriods": "[parameters('Alert').properties.failingPeriods]",
                                      "metricName": "[parameters('Alert').name]",
                                      "metricMeasureColumn": "[if(contains(parameters('Alert').properties, 'metricMeasureColumn'), parameters('Alert').properties.metricMeasureColumn, null())]",
                                      "resourceIdColumn": "[if(contains(parameters('Alert').properties, 'resourceIdColumn'), parameters('Alert').properties.resourceIdColumn, null())]",
                                      "operator": "[parameters('Alert').properties.operator]",
                                      "query": "[parameters('Alert').properties.query]",
                                      "threshold": "[parameters('Alert').properties.threshold]",
                                      "timeAggregation": "[parameters('Alert').properties.timeAggregation]"
                                    }
                                  ]
                                },
                                "description": "[variables('Description')]",
                                "enabled": "[parameters('SetEnabled')]",
                                "evaluationFrequency": "[parameters('Alert').properties.evaluationFrequency]",
                                "ruleResolveConfiguration": {
                                  "autoResolved": "[parameters('Alert').properties.autoResolve]",
                                  "timeToResolve": "[parameters('Alert').properties.autoResolveTime]"
                                },
                                "scopes": [
                                  "[parameters('LogAnalyticsWorkspaceResourceId')]"
                                ],
                                "severity": "[parameters('Alert').properties.severity]",
                                "targetResourceTypes": [
                                  "microsoft.operationalinsights/workspaces"
                                ],
                                "windowSize": "[parameters('Alert').properties.windowSize]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', parameters('ActionGroupName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', 'linked_RG_AVDMetrics')]"
      ]
    }
  ]
}